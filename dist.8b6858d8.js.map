{"mappings":"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G,I,I,I,C,e,K,M,C,M,G,Q,C,C,E,C,E,C,E,E,E,C;I,E,E,E,K,S,E,E,G,C;I,M,C,c,C,C,E,E,E,C;Q,U,E,I;Q,G,E,Q,G,C;Y,M,C,C,C,C;Q,C;I,C;A,C,G,Q,C,C,E,C,E,C,E,E,E,C;I,E,E,E,K,S,E,E,G,C;I,C,C,E,I,C,C,C;A,C;A,G,C,Y,G,I,I,I,C,Y,I,Q,C,C,E,O,E,C;I,G,C,G,C,C,I,C,C,E,E,C,K,C,a,M,C,S,C,c,C,I,C,O,E,C,G,e,C,O,E,C,E,C;A,C;A,M,C,c,C,O,E,C,a,C;I,K,E,I;A,C;A,O,C,c,G,O,C,kB,G,O,C,Q,G,O,C,O,G,O,C,iB,G,O,C,gB,G,I,C,C;AEvdD,GAAA,CAAA,WAAA,GAAA,OAAA,CAAA,CAAA;AACA,GAAA,CAAA,WAAA,GAAA,OAAA,CAAA,CAAA;AACA,GAAA,CAAA,SAAA,GAAA,OAAA,CAAA,CAAA;AAAS,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,CAAA,mBAAA,CAAA;IAAA,UAAA,EAAA,IAAA;IAAA,GAAA,EAAA,QAAA,GAAA,CAAA;QAAA,MAAA,CAAA,SAAA,CAAA,gBAAgB;IAAA,CAAA;AAAA,CAAA;AACzB,YAAA,CAAA,OAAA,CAAA,CAAA,SAAA,OAAA;AACA,GAAA,CAAA,WAAA,GAAA,OAAA,CAAA,CAAA;AASa,OAAA,CAAA,iBAAiB,GAAG,WAAA,CAAA,aAAa;SAE9B,OAAO,CAAC,MAAgC,EAAE,OAAqB,EAA/E,CAAA;IACC,GAAA,CAAM,MAAM,GAAG,CAAQ,WAAI,MAAM,GAChC,WAAA,CAAA,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,IAChE,WAAA,CAAA,YAAY,CAAC,MAAM;IACpB,MAAA,CAAO,WAAA,CAAA,OAAe,CAAC,MAAM,EAAE,OAAO;AACvC,CAAC;AALD,OAAA,CAAA,OAAA,GAAA,OAAA;SAOgB,QAAQ,CAAC,GAAQ,EAAE,OAAsB,EAAzD,CAAA;IACC,GAAA,CAAM,MAAM,GAAG,WAAA,CAAA,YAAY;IAC3B,WAAA,CAAA,QAAgB,CAAC,MAAM,EAAE,GAAG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L,CAAC,GAAG,IAAI;QACV,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC;YAC1B,CAAC,IAAK,KAAK,GAAG,CAAC,GAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI;YACxC,CAAC,GAAG,CAAC,GAAG,KAAK;QACf,CAAC,MAAM,CAAC;YACN,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI;YACrD,CAAC,GAAG,CAAC;QACP,CAAC;IACH,CAAC;IAED,GAAG,GAAI,IAAI,IAAI,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,GAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC;IAE5E,CAAC,GAAI,CAAC,IAAI,IAAI,GAAI,CAAC;IACnB,IAAI,IAAI,IAAI;IACZ,GAAG,GAAI,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,GAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC;IAE3E,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG;AACnC,CAAC;;;A,C;A,G,C,Q,G,I,I,I,C,Q,I,Q,G,C;I,Q,G,M,C,M,I,Q,C,C,E,C;Q,G,C,G,C,C,E,C,G,C,E,C,G,S,C,M,E,C,G,C,E,C,G,C;Y,C,G,S,C,C;Y,G,C,G,C,C,I,C,C,E,E,M,C,S,C,c,C,I,C,C,E,C,G,C,C,C,I,C,C,C;Q,C;Q,M,C,C;I,C;I,M,C,Q,C,K,C,I,E,S;A,C;A,M,C,c,C,O,E,C,a,C;I,K,E,I;A,C;A,O,C,U,G,O,C,Q,G,O,C,Y,G,O,C,6B,G,O,C,kB,G,O,C,iB,G,O,C,c,G,O,C,U,G,O,C,U,G,O,C,qB,G,O,C,iB,G,O,C,Y,G,O,C,Y,G,O,C,W,G,O,C,U,G,O,C,W,G,O,C,U,G,O,C,U,G,O,C,qB,G,O,C,e,G,O,C,Y,G,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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-aab3fa6b88b67783.js","node_modules/ag-psd/dist/index.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/index.ts","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/ag-psd/dist/psdWriter.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psdWriter.ts","node_modules/ag-psd/dist/helpers.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/helpers.ts","node_modules/ag-psd/dist/additionalInfo.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/additionalInfo.ts","node_modules/ag-psd/dist/effectsHelpers.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/effectsHelpers.ts","node_modules/ag-psd/dist/psdReader.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psdReader.ts","node_modules/ag-psd/dist/imageResources.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/imageResources.ts","node_modules/ag-psd/dist/utf8.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/utf8.ts","node_modules/ag-psd/dist/descriptor.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/descriptor.ts","node_modules/ag-psd/dist/engineData.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/engineData.ts","node_modules/ag-psd/dist/text.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/text.ts","node_modules/ag-psd/dist/psd.js","node_modules/ag-psd/dist/D:/Projects/github/ag-psd/src/psd.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"d9d0a2048b6858d8\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}",null,"import { Psd, ReadOptions, WriteOptions } from './psd';\nimport { PsdWriter, writePsd as writePsdInternal, getWriterBuffer, createWriter, getWriterBufferNoCopy } from './psdWriter';\nimport { PsdReader, readPsd as readPsdInternal, createReader } from './psdReader';\nexport { initializeCanvas } from './helpers';\nexport * from './psd';\nimport { fromByteArray } from 'base64-js';\nexport { PsdReader, PsdWriter };\n\ninterface BufferLike {\n\tbuffer: ArrayBuffer;\n\tbyteOffset: number;\n\tbyteLength: number;\n}\n\nexport const byteArrayToBase64 = fromByteArray;\n\nexport function readPsd(buffer: ArrayBuffer | BufferLike, options?: ReadOptions): Psd {\n\tconst reader = 'buffer' in buffer ?\n\t\tcreateReader(buffer.buffer, buffer.byteOffset, buffer.byteLength) :\n\t\tcreateReader(buffer);\n\treturn readPsdInternal(reader, options);\n}\n\nexport function writePsd(psd: Psd, options?: WriteOptions): ArrayBuffer {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBuffer(writer);\n}\n\nexport function writePsdUint8Array(psd: Psd, options?: WriteOptions): Uint8Array {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBufferNoCopy(writer);\n}\n\nexport function writePsdBuffer(psd: Psd, options?: WriteOptions): Buffer {\n\tif (typeof Buffer === 'undefined') {\n\t\tthrow new Error('Buffer not supported on this platform');\n\t}\n\n\treturn Buffer.from(writePsdUint8Array(psd, options));\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",null,"import { Psd, Layer, LayerAdditionalInfo, ColorMode, SectionDividerType, WriteOptions, Color, GlobalLayerMaskInfo } from './psd';\nimport {\n\thasAlpha, createCanvas, writeDataRLE, PixelData, LayerChannelData, ChannelData,\n\toffsetForChannel, createImageData, fromBlendMode, ChannelID, Compression, clamp,\n\tLayerMaskFlags, MaskParams, ColorSpace, Bounds\n} from './helpers';\nimport { ExtendedWriteOptions, infoHandlers } from './additionalInfo';\nimport { resourceHandlers } from './imageResources';\n\nconst RAW_IMAGE_DATA = false;\n\nexport interface PsdWriter {\n\toffset: number;\n\tbuffer: ArrayBuffer;\n\tview: DataView;\n}\n\nexport function createWriter(size = 4096): PsdWriter {\n\tconst buffer = new ArrayBuffer(size);\n\tconst view = new DataView(buffer);\n\tconst offset = 0;\n\treturn { buffer, view, offset };\n}\n\nexport function getWriterBuffer(writer: PsdWriter) {\n\treturn writer.buffer.slice(0, writer.offset);\n}\n\nexport function getWriterBufferNoCopy(writer: PsdWriter) {\n\treturn new Uint8Array(writer.buffer, 0, writer.offset);\n}\n\nexport function writeUint8(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 1);\n\twriter.view.setUint8(offset, value);\n}\n\nexport function writeInt16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setInt16(offset, value, false);\n}\n\nexport function writeUint16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setUint16(offset, value, false);\n}\n\nexport function writeInt32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setInt32(offset, value, false);\n}\n\nexport function writeUint32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setUint32(offset, value, false);\n}\n\nexport function writeFloat32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setFloat32(offset, value, false);\n}\n\nexport function writeFloat64(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 8);\n\twriter.view.setFloat64(offset, value, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function writeFixedPoint32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 16));\n}\n\n// 32-bit fixed-point number 8.24\nexport function writeFixedPointPath32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 24));\n}\n\nexport function writeBytes(writer: PsdWriter, buffer: Uint8Array | undefined) {\n\tif (buffer) {\n\t\tensureSize(writer, writer.offset + buffer.length);\n\t\tconst bytes = new Uint8Array(writer.buffer);\n\t\tbytes.set(buffer, writer.offset);\n\t\twriter.offset += buffer.length;\n\t}\n}\n\nexport function writeZeros(writer: PsdWriter, count: number) {\n\tfor (let i = 0; i < count; i++) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeSignature(writer: PsdWriter, signature: string) {\n\tif (signature.length !== 4) throw new Error(`Invalid signature: '${signature}'`);\n\n\tfor (let i = 0; i < 4; i++) {\n\t\twriteUint8(writer, signature.charCodeAt(i));\n\t}\n}\n\nexport function writePascalString(writer: PsdWriter, text: string, padTo: number) {\n\tlet length = text.length;\n\twriteUint8(writer, length);\n\n\tfor (let i = 0; i < length; i++) {\n\t\tconst code = text.charCodeAt(i);\n\t\twriteUint8(writer, code < 128 ? code : '?'.charCodeAt(0));\n\t}\n\n\twhile (++length % padTo) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeUnicodeString(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n}\n\nexport function writeUnicodeStringWithPadding(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length + 1);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n\n\twriteUint16(writer, 0);\n}\n\nfunction getLargestLayerSize(layers: Layer[] = []): number {\n\tlet max = 0;\n\n\tfor (const layer of layers) {\n\t\tif (layer.canvas || layer.imageData) {\n\t\t\tconst { width, height } = getLayerDimentions(layer);\n\t\t\tmax = Math.max(max, 2 * height + 2 * width * height);\n\t\t}\n\n\t\tif (layer.children) {\n\t\t\tmax = Math.max(max, getLargestLayerSize(layer.children));\n\t\t}\n\t}\n\n\treturn max;\n}\n\nexport function writeSection(writer: PsdWriter, round: number, func: () => void, writeTotalLength = false) {\n\tconst offset = writer.offset;\n\twriteInt32(writer, 0);\n\n\tfunc();\n\n\tlet length = writer.offset - offset - 4;\n\tlet len = length;\n\n\twhile ((len % round) !== 0) {\n\t\twriteUint8(writer, 0);\n\t\tlen++;\n\t}\n\n\tif (writeTotalLength) {\n\t\tlength = len;\n\t}\n\n\twriter.view.setInt32(offset, length, false);\n}\n\nexport function writePsd(writer: PsdWriter, psd: Psd, options: WriteOptions = {}) {\n\tif (!(+psd.width > 0 && +psd.height > 0))\n\t\tthrow new Error('Invalid document size');\n\n\tlet imageResources = psd.imageResources || {};\n\n\tconst writeOptions: ExtendedWriteOptions = { ...options, layerIds: [] };\n\n\tif (writeOptions.generateThumbnail) {\n\t\timageResources = { ...imageResources, thumbnail: createThumbnail(psd) };\n\t}\n\n\tlet imageData = psd.imageData;\n\n\tif (!imageData && psd.canvas) {\n\t\timageData = psd.canvas.getContext('2d')!.getImageData(0, 0, psd.canvas.width, psd.canvas.height);\n\t}\n\n\tif (imageData && (psd.width !== imageData.width || psd.height !== imageData.height))\n\t\tthrow new Error('Document canvas must have the same size as document');\n\n\tconst globalAlpha = !!imageData && hasAlpha(imageData);\n\tconst maxBufferSize = Math.max(getLargestLayerSize(psd.children), 4 * 2 * psd.width * psd.height + 2 * psd.height);\n\tconst tempBuffer = new Uint8Array(maxBufferSize);\n\n\t// header\n\twriteSignature(writer, '8BPS');\n\twriteUint16(writer, 1); // version\n\twriteZeros(writer, 6);\n\twriteUint16(writer, globalAlpha ? 4 : 3); // channels\n\twriteUint32(writer, psd.height);\n\twriteUint32(writer, psd.width);\n\twriteUint16(writer, 8); // bits per channel\n\twriteUint16(writer, ColorMode.RGB);\n\n\t// color mode data\n\twriteSection(writer, 1, () => {\n\t\t// TODO: implement\n\t});\n\n\t// image resources\n\twriteSection(writer, 1, () => {\n\t\tfor (const handler of resourceHandlers) {\n\t\t\tif (handler.has(imageResources)) {\n\t\t\t\twriteSignature(writer, '8BIM');\n\t\t\t\twriteUint16(writer, handler.key);\n\t\t\t\twritePascalString(writer, '', 2);\n\t\t\t\twriteSection(writer, 2, () => handler.write(writer, imageResources));\n\t\t\t}\n\t\t}\n\t});\n\n\t// layer and mask info\n\twriteSection(writer, 2, () => {\n\t\twriteLayerInfo(tempBuffer, writer, psd, globalAlpha, writeOptions);\n\t\twriteGlobalLayerMaskInfo(writer, psd.globalLayerMaskInfo);\n\t\twriteAdditionalLayerInfo(writer, psd, psd, writeOptions);\n\t});\n\n\t// image data\n\tconst channels = globalAlpha ? [0, 1, 2, 3] : [0, 1, 2];\n\tconst data: PixelData = imageData || {\n\t\tdata: new Uint8Array(4 * psd.width * psd.height),\n\t\twidth: psd.width,\n\t\theight: psd.height,\n\t};\n\n\twriteUint16(writer, Compression.RleCompressed);\n\n\tif (RAW_IMAGE_DATA && (psd as any).imageDataRaw) {\n\t\tconsole.log('writing raw image data');\n\t\twriteBytes(writer, (psd as any).imageDataRaw);\n\t} else {\n\t\twriteBytes(writer, writeDataRLE(tempBuffer, data, psd.width, psd.height, channels));\n\t}\n}\n\nfunction writeLayerInfo(tempBuffer: Uint8Array, writer: PsdWriter, psd: Psd, globalAlpha: boolean, options: ExtendedWriteOptions) {\n\twriteSection(writer, 4, () => {\n\t\tconst layers: Layer[] = [];\n\n\t\taddChildren(layers, psd.children);\n\n\t\tif (!layers.length) layers.push({});\n\n\t\twriteInt16(writer, globalAlpha ? -layers.length : layers.length);\n\n\t\tconst layersData = layers.map((l, i) => getChannels(tempBuffer, l, i === 0, options));\n\n\t\t// layer records\n\t\tfor (const layerData of layersData) {\n\t\t\tconst { layer, top, left, bottom, right, channels } = layerData;\n\n\t\t\twriteInt32(writer, top);\n\t\t\twriteInt32(writer, left);\n\t\t\twriteInt32(writer, bottom);\n\t\t\twriteInt32(writer, right);\n\t\t\twriteUint16(writer, channels.length);\n\n\t\t\tfor (const c of channels) {\n\t\t\t\twriteInt16(writer, c.channelId);\n\t\t\t\twriteInt32(writer, c.length);\n\t\t\t}\n\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, fromBlendMode[layer.blendMode!] || 'norm');\n\t\t\twriteUint8(writer, Math.round(clamp(layer.opacity ?? 1, 0, 1) * 255));\n\t\t\twriteUint8(writer, layer.clipping ? 1 : 0);\n\n\t\t\tlet flags = 0x08; // 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t\t\tif (layer.transparencyProtected) flags |= 0x01;\n\t\t\tif (layer.hidden) flags |= 0x02;\n\t\t\tif (layer.vectorMask || (layer.sectionDivider && layer.sectionDivider.type !== SectionDividerType.Other)) {\n\t\t\t\tflags |= 0x10; // pixel data irrelevant to appearance of document\n\t\t\t}\n\n\t\t\twriteUint8(writer, flags);\n\t\t\twriteUint8(writer, 0); // filler\n\t\t\twriteSection(writer, 1, () => {\n\t\t\t\twriteLayerMaskData(writer, layer, layerData);\n\t\t\t\twriteLayerBlendingRanges(writer, psd);\n\t\t\t\twritePascalString(writer, layer.name || '', 4);\n\t\t\t\twriteAdditionalLayerInfo(writer, layer, psd, options);\n\t\t\t});\n\t\t}\n\n\t\t// layer channel image data\n\t\tfor (const layerData of layersData) {\n\t\t\tfor (const channel of layerData.channels) {\n\t\t\t\twriteUint16(writer, channel.compression);\n\n\t\t\t\tif (channel.buffer) {\n\t\t\t\t\twriteBytes(writer, channel.buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, true);\n}\n\nfunction writeLayerMaskData(writer: PsdWriter, { mask }: Layer, layerData: LayerChannelData) {\n\twriteSection(writer, 1, () => {\n\t\tif (!mask) return;\n\n\t\tconst m = layerData.mask || {} as Partial<Bounds>;\n\t\twriteInt32(writer, m.top!);\n\t\twriteInt32(writer, m.left!);\n\t\twriteInt32(writer, m.bottom!);\n\t\twriteInt32(writer, m.right!);\n\t\twriteUint8(writer, mask.defaultColor!);\n\n\t\tlet params = 0;\n\t\tif (mask.userMaskDensity !== undefined) params |= MaskParams.UserMaskDensity;\n\t\tif (mask.userMaskFeather !== undefined) params |= MaskParams.UserMaskFeather;\n\t\tif (mask.vectorMaskDensity !== undefined) params |= MaskParams.VectorMaskDensity;\n\t\tif (mask.vectorMaskFeather !== undefined) params |= MaskParams.VectorMaskFeather;\n\n\t\tlet flags = 0;\n\t\tif (mask.disabled) flags |= LayerMaskFlags.LayerMaskDisabled;\n\t\tif (mask.positionRelativeToLayer) flags |= LayerMaskFlags.PositionRelativeToLayer;\n\t\tif (mask.fromVectorData) flags |= LayerMaskFlags.LayerMaskFromRenderingOtherData;\n\t\tif (params) flags |= LayerMaskFlags.MaskHasParametersAppliedToIt;\n\n\t\twriteUint8(writer, flags);\n\n\t\tif (params) {\n\t\t\twriteUint8(writer, params);\n\n\t\t\tif (mask.userMaskDensity !== undefined) writeUint8(writer, Math.round(mask.userMaskDensity * 0xff));\n\t\t\tif (mask.userMaskFeather !== undefined) writeFloat64(writer, mask.userMaskFeather);\n\t\t\tif (mask.vectorMaskDensity !== undefined) writeUint8(writer, Math.round(mask.vectorMaskDensity * 0xff));\n\t\t\tif (mask.vectorMaskFeather !== undefined) writeFloat64(writer, mask.vectorMaskFeather);\n\t\t}\n\n\t\t// TODO: handle rest of the fields\n\n\t\twriteZeros(writer, 2);\n\t});\n}\n\nfunction writeLayerBlendingRanges(writer: PsdWriter, psd: Psd) {\n\twriteSection(writer, 1, () => {\n\t\twriteUint32(writer, 65535);\n\t\twriteUint32(writer, 65535);\n\n\t\t// TODO: use always 4 instead ?\n\t\tconst channels = psd.channels || 0;\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\twriteUint32(writer, 65535);\n\t\t\twriteUint32(writer, 65535);\n\t\t}\n\t});\n}\n\nfunction writeGlobalLayerMaskInfo(writer: PsdWriter, info: GlobalLayerMaskInfo | undefined) {\n\twriteSection(writer, 1, () => {\n\t\tif (info) {\n\t\t\twriteUint16(writer, info.overlayColorSpace);\n\t\t\twriteUint16(writer, info.colorSpace1);\n\t\t\twriteUint16(writer, info.colorSpace2);\n\t\t\twriteUint16(writer, info.colorSpace3);\n\t\t\twriteUint16(writer, info.colorSpace4);\n\t\t\twriteUint16(writer, info.opacity * 0xff);\n\t\t\twriteUint8(writer, info.kind);\n\t\t\twriteZeros(writer, 3);\n\t\t}\n\t});\n}\n\nfunction writeAdditionalLayerInfo(writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) {\n\tfor (const handler of infoHandlers) {\n\t\tconst key = handler.key;\n\n\t\tif (key === 'Txt2' && options.invalidateTextLayers) continue;\n\n\t\tif (handler.has(target)) {\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, key);\n\n\t\t\tconst align = (key === 'Txt2' || key === 'luni' || key === 'vmsk' || key === 'artb' || key === 'artd' ||\n\t\t\t\tkey === 'vogk' || key === 'SoLd' || key === 'lnk2' || key === 'vscg' || key === 'vsms' ||\n\t\t\t\tkey === 'GdFl') ? 4 : 2;\n\t\t\twriteSection(writer, align, () => handler.write(writer, target, psd, options), key !== 'Txt2');\n\t\t}\n\t}\n}\n\nfunction addChildren(layers: Layer[], children: Layer[] | undefined) {\n\tif (!children) return;\n\n\tfor (const c of children) {\n\t\tif (c.children && c.canvas) throw new Error(`Invalid layer, cannot have both 'canvas' and 'children' properties`);\n\t\tif (c.children && c.imageData) throw new Error(`Invalid layer, cannot have both 'imageData' and 'children' properties`);\n\n\t\tif (c.children) {\n\t\t\tlayers.push({\n\t\t\t\tname: '</Layer group>',\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: SectionDividerType.BoundingSectionDivider,\n\t\t\t\t},\n\t\t\t\t// TESTING\n\t\t\t\t// nameSource: 'lset',\n\t\t\t\t// id: [4, 0, 0, 8, 11, 0, 0, 0, 0, 14][layers.length] || 0,\n\t\t\t\t// layerColor: 'none',\n\t\t\t\t// timestamp: [1611346817.349021, 0, 0, 1611346817.349175, 1611346817.3491833, 0, 0, 0, 0, 1611346817.349832][layers.length] || 0,\n\t\t\t\t// protected: {},\n\t\t\t\t// referencePoint: { x: 0, y: 0 },\n\t\t\t});\n\t\t\taddChildren(layers, c.children);\n\t\t\tlayers.push({\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: c.opened === false ? SectionDividerType.ClosedFolder : SectionDividerType.OpenFolder,\n\t\t\t\t\tkey: fromBlendMode[c.blendMode!] || 'pass',\n\t\t\t\t\tsubType: 0,\n\t\t\t\t},\n\t\t\t\t...c,\n\t\t\t});\n\t\t} else {\n\t\t\tlayers.push({ ...c });\n\t\t}\n\t}\n}\n\nfunction resizeBuffer(writer: PsdWriter, size: number) {\n\tlet newLength = writer.buffer.byteLength;\n\n\tdo {\n\t\tnewLength *= 2;\n\t} while (size > newLength);\n\n\tconst newBuffer = new ArrayBuffer(newLength);\n\tconst newBytes = new Uint8Array(newBuffer);\n\tconst oldBytes = new Uint8Array(writer.buffer);\n\tnewBytes.set(oldBytes);\n\twriter.buffer = newBuffer;\n\twriter.view = new DataView(writer.buffer);\n}\n\nfunction ensureSize(writer: PsdWriter, size: number) {\n\tif (size > writer.buffer.byteLength) {\n\t\tresizeBuffer(writer, size);\n\t}\n}\n\nfunction addSize(writer: PsdWriter, size: number) {\n\tconst offset = writer.offset;\n\tensureSize(writer, writer.offset += size);\n\treturn offset;\n}\n\nfunction createThumbnail(psd: Psd) {\n\tconst canvas = createCanvas(10, 10);\n\tlet scale = 1;\n\n\tif (psd.width > psd.height) {\n\t\tcanvas.width = 160;\n\t\tcanvas.height = Math.floor(psd.height * (canvas.width / psd.width));\n\t\tscale = canvas.width / psd.width;\n\t} else {\n\t\tcanvas.height = 160;\n\t\tcanvas.width = Math.floor(psd.width * (canvas.height / psd.height));\n\t\tscale = canvas.height / psd.height;\n\t}\n\n\tconst context = canvas.getContext('2d')!;\n\tcontext.scale(scale, scale);\n\n\tif (psd.imageData) {\n\t\tconst temp = createCanvas(psd.imageData.width, psd.imageData.height);\n\t\ttemp.getContext('2d')!.putImageData(psd.imageData, 0, 0);\n\t\tcontext.drawImage(temp, 0, 0);\n\t} else if (psd.canvas) {\n\t\tcontext.drawImage(psd.canvas, 0, 0);\n\t}\n\n\treturn canvas;\n}\n\nfunction getChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tconst layerData = getLayerChannels(tempBuffer, layer, background, options);\n\tconst mask = layer.mask;\n\n\tif (mask) {\n\t\tlet { top = 0, left = 0, right = 0, bottom = 0 } = mask;\n\t\tlet { width, height } = getLayerDimentions(mask);\n\t\tlet imageData = mask.imageData;\n\n\t\tif (!imageData && mask.canvas && width && height) {\n\t\t\timageData = mask.canvas.getContext('2d')!.getImageData(0, 0, width, height);\n\t\t}\n\n\t\tif (width && height && imageData) {\n\t\t\tright = left + width;\n\t\t\tbottom = top + height;\n\n\t\t\tlet buffer = writeDataRLE(tempBuffer, imageData, width, height, [0])!;\n\n\t\t\tif (RAW_IMAGE_DATA && (layer as any).maskDataRaw) {\n\t\t\t\t// console.log('written raw layer image data');\n\t\t\t\tbuffer = (layer as any).maskDataRaw;\n\t\t\t}\n\n\t\t\tlayerData.mask = { top, left, right, bottom };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RleCompressed,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tlength: 2 + buffer.length,\n\t\t\t});\n\t\t} else {\n\t\t\tlayerData.mask = { top: 0, left: 0, right: 0, bottom: 0 };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RawData,\n\t\t\t\tbuffer: new Uint8Array(0),\n\t\t\t\tlength: 0,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn layerData;\n}\n\nfunction getLayerDimentions({ canvas, imageData }: Layer): { width: number; height: number; } {\n\treturn imageData || canvas || { width: 0, height: 0 };\n}\n\nfunction cropImageData(data: ImageData, left: number, top: number, width: number, height: number) {\n\tconst croppedData = createImageData(width, height);\n\tconst srcData = data.data;\n\tconst dstData = croppedData.data;\n\n\tfor (let y = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tlet src = ((x + left) + (y + top) * width) * 4;\n\t\t\tlet dst = (x + y * width) * 4;\n\t\t\tdstData[dst] = srcData[src];\n\t\t\tdstData[dst + 1] = srcData[src + 1];\n\t\t\tdstData[dst + 2] = srcData[src + 2];\n\t\t\tdstData[dst + 3] = srcData[src + 3];\n\t\t}\n\t}\n\n\treturn croppedData;\n}\n\nfunction getLayerChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tlet { top = 0, left = 0, right = 0, bottom = 0 } = layer;\n\tlet channels: ChannelData[] = [\n\t\t{ channelId: ChannelID.Transparency, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Red, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Green, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Blue, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t];\n\n\tlet { width, height } = getLayerDimentions(layer);\n\n\tif (!(layer.canvas || layer.imageData) || !width || !height) {\n\t\tright = left;\n\t\tbottom = top;\n\t\treturn { layer, top, left, right, bottom, channels };\n\t}\n\n\tright = left + width;\n\tbottom = top + height;\n\n\tlet data = layer.imageData || layer.canvas!.getContext('2d')!.getImageData(0, 0, width, height);\n\n\tif (options.trimImageData) {\n\t\tconst trimmed = trimData(data);\n\n\t\tif (trimmed.left !== 0 || trimmed.top !== 0 || trimmed.right !== data.width || trimmed.bottom !== data.height) {\n\t\t\tleft += trimmed.left;\n\t\t\ttop += trimmed.top;\n\t\t\tright -= (data.width - trimmed.right);\n\t\t\tbottom -= (data.height - trimmed.bottom);\n\t\t\twidth = right - left;\n\t\t\theight = bottom - top;\n\n\t\t\tif (!width || !height) {\n\t\t\t\treturn { layer, top, left, right, bottom, channels };\n\t\t\t}\n\n\t\t\tif (layer.imageData) {\n\t\t\t\tdata = cropImageData(data, trimmed.left, trimmed.top, width, height);\n\t\t\t} else {\n\t\t\t\tdata = layer.canvas!.getContext('2d')!.getImageData(trimmed.left, trimmed.top, width, height);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst channelIds = [\n\t\tChannelID.Red,\n\t\tChannelID.Green,\n\t\tChannelID.Blue,\n\t];\n\n\tif (!background || options.noBackground || layer.mask || hasAlpha(data) || (RAW_IMAGE_DATA && (layer as any).imageDataRaw?.['-1'])) {\n\t\tchannelIds.unshift(ChannelID.Transparency);\n\t}\n\n\tchannels = channelIds.map(channel => {\n\t\tconst offset = offsetForChannel(channel);\n\t\tlet buffer = writeDataRLE(tempBuffer, data, width, height, [offset])!;\n\n\t\tif (RAW_IMAGE_DATA && (layer as any).imageDataRaw) {\n\t\t\t// console.log('written raw layer image data');\n\t\t\tbuffer = (layer as any).imageDataRaw[channel];\n\t\t}\n\n\t\treturn {\n\t\t\tchannelId: channel,\n\t\t\tcompression: Compression.RleCompressed,\n\t\t\tbuffer: buffer,\n\t\t\tlength: 2 + buffer.length,\n\t\t};\n\t});\n\n\treturn { layer, top, left, right, bottom, channels };\n}\n\nfunction isRowEmpty({ data, width }: PixelData, y: number, left: number, right: number) {\n\tconst start = ((y * width + left) * 4 + 3) | 0;\n\tconst end = (start + (right - left) * 4) | 0;\n\n\tfor (let i = start; i < end; i = (i + 4) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isColEmpty({ data, width }: PixelData, x: number, top: number, bottom: number) {\n\tconst stride = (width * 4) | 0;\n\tconst start = (top * stride + x * 4 + 3) | 0;\n\n\tfor (let y = top, i = start; y < bottom; y++, i = (i + stride) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction trimData(data: PixelData) {\n\tlet top = 0;\n\tlet left = 0;\n\tlet right = data.width;\n\tlet bottom = data.height;\n\n\twhile (top < bottom && isRowEmpty(data, top, left, right))\n\t\ttop++;\n\twhile (bottom > top && isRowEmpty(data, bottom - 1, left, right))\n\t\tbottom--;\n\twhile (left < right && isColEmpty(data, left, top, bottom))\n\t\tleft++;\n\twhile (right > left && isColEmpty(data, right - 1, top, bottom))\n\t\tright--;\n\n\treturn { top, left, right, bottom };\n}\n\nexport function writeColor(writer: PsdWriter, color: Color | undefined) {\n\tif (!color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteZeros(writer, 8);\n\t} else if ('r' in color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteUint16(writer, Math.round(color.r * 257));\n\t\twriteUint16(writer, Math.round(color.g * 257));\n\t\twriteUint16(writer, Math.round(color.b * 257));\n\t\twriteUint16(writer, 0);\n\t} else if ('l' in color) {\n\t\twriteUint16(writer, ColorSpace.Lab);\n\t\twriteUint16(writer, Math.round(color.l * 100));\n\t\twriteUint16(writer, Math.round(color.a * 100));\n\t\twriteUint16(writer, Math.round(color.b * 100));\n\t\twriteUint16(writer, 0);\n\t} else if ('h' in color) {\n\t\twriteUint16(writer, ColorSpace.HSB);\n\t\twriteUint16(writer, Math.round(color.h));\n\t\twriteUint16(writer, Math.round(color.s));\n\t\twriteUint16(writer, Math.round(color.b));\n\t\twriteUint16(writer, 0);\n\t} else if ('c' in color) {\n\t\twriteUint16(writer, ColorSpace.CMYK);\n\t\twriteUint16(writer, Math.round(color.c));\n\t\twriteUint16(writer, Math.round(color.m));\n\t\twriteUint16(writer, Math.round(color.y));\n\t\twriteUint16(writer, Math.round(color.k));\n\t} else {\n\t\twriteUint16(writer, ColorSpace.Grayscale);\n\t\twriteUint16(writer, Math.round(color.k));\n\t\twriteZeros(writer, 6);\n\t}\n}\n",null,"import { fromByteArray } from 'base64-js';\nimport { Layer, BlendMode, LayerColor } from './psd';\n\nexport const fromBlendMode: { [key: string]: string } = {};\nexport const toBlendMode: { [key: string]: BlendMode } = {\n\t'pass': 'pass through',\n\t'norm': 'normal',\n\t'diss': 'dissolve',\n\t'dark': 'darken',\n\t'mul ': 'multiply',\n\t'idiv': 'color burn',\n\t'lbrn': 'linear burn',\n\t'dkCl': 'darker color',\n\t'lite': 'lighten',\n\t'scrn': 'screen',\n\t'div ': 'color dodge',\n\t'lddg': 'linear dodge',\n\t'lgCl': 'lighter color',\n\t'over': 'overlay',\n\t'sLit': 'soft light',\n\t'hLit': 'hard light',\n\t'vLit': 'vivid light',\n\t'lLit': 'linear light',\n\t'pLit': 'pin light',\n\t'hMix': 'hard mix',\n\t'diff': 'difference',\n\t'smud': 'exclusion',\n\t'fsub': 'subtract',\n\t'fdiv': 'divide',\n\t'hue ': 'hue',\n\t'sat ': 'saturation',\n\t'colr': 'color',\n\t'lum ': 'luminosity',\n};\n\nObject.keys(toBlendMode).forEach(key => fromBlendMode[toBlendMode[key]] = key);\n\nexport const layerColors: LayerColor[] = [\n\t'none', 'red', 'orange', 'yellow', 'green', 'blue', 'violet', 'gray'\n];\n\nexport interface Dict {\n\t[key: string]: string;\n}\n\nexport function revMap(map: Dict) {\n\tconst result: Dict = {};\n\tObject.keys(map).forEach(key => result[map[key]] = key);\n\treturn result;\n}\n\nexport function createEnum<T>(prefix: string, def: string, map: Dict) {\n\tconst rev = revMap(map);\n\tconst decode = (val: string): T => {\n\t\tconst value = val.split('.')[1];\n\t\tif (value && !rev[value]) throw new Error(`Unrecognized value for enum: ${val}`);\n\t\treturn (rev[value] as any) || def;\n\t};\n\tconst encode = (val: T | undefined): string => {\n\t\tif (val && !map[val as any]) throw new Error(`Invalid value for enum: ${val}`);\n\t\treturn `${prefix}.${map[val as any] || map[def]}`;\n\t};\n\treturn { decode, encode };\n}\n\nexport const enum ColorSpace {\n\tRGB = 0,\n\tHSB = 1,\n\tCMYK = 2,\n\tLab = 7,\n\tGrayscale = 8,\n}\n\nexport const enum LayerMaskFlags {\n\tPositionRelativeToLayer = 1,\n\tLayerMaskDisabled = 2,\n\tInvertLayerMaskWhenBlending = 4, // obsolete\n\tLayerMaskFromRenderingOtherData = 8,\n\tMaskHasParametersAppliedToIt = 16,\n}\n\nexport const enum MaskParams {\n\tUserMaskDensity = 1,\n\tUserMaskFeather = 2,\n\tVectorMaskDensity = 4,\n\tVectorMaskFeather = 8,\n}\n\nexport const enum ChannelID {\n\tRed = 0,\n\tGreen = 1,\n\tBlue = 2,\n\tTransparency = -1,\n\tUserMask = -2,\n\tRealUserMask = -3,\n}\n\nexport const enum Compression {\n\tRawData = 0,\n\tRleCompressed = 1,\n\tZipWithoutPrediction = 2,\n\tZipWithPrediction = 3,\n}\n\nexport interface ChannelData {\n\tchannelId: ChannelID;\n\tcompression: Compression;\n\tbuffer: Uint8Array | undefined;\n\tlength: number;\n}\n\nexport interface Bounds {\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n}\n\nexport interface LayerChannelData {\n\tlayer: Layer;\n\tchannels: ChannelData[];\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n\tmask?: Bounds;\n}\n\nexport type PixelArray = Uint8ClampedArray | Uint8Array;\n\nexport interface PixelData {\n\tdata: PixelArray;\n\twidth: number;\n\theight: number;\n}\n\nexport function offsetForChannel(channelId: ChannelID) {\n\tswitch (channelId) {\n\t\tcase ChannelID.Red: return 0;\n\t\tcase ChannelID.Green: return 1;\n\t\tcase ChannelID.Blue: return 2;\n\t\tcase ChannelID.Transparency: return 3;\n\t\tdefault: return channelId + 1;\n\t}\n}\n\nexport function clamp(value: number, min: number, max: number) {\n\treturn value < min ? min : (value > max ? max : value);\n}\n\nexport function hasAlpha(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 3; i < size; i += 4) {\n\t\tif (data.data[i] !== 255) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function resetImageData({ width, height, data }: PixelData) {\n\tconst size = (width * height) | 0;\n\tconst buffer = new Uint32Array(data.buffer);\n\n\tfor (let p = 0; p < size; p = (p + 1) | 0) {\n\t\tbuffer[p] = 0xff000000;\n\t}\n}\n\nexport function decodeBitmap(input: PixelArray, output: PixelArray, width: number, height: number) {\n\tfor (let y = 0, p = 0, o = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width;) {\n\t\t\tlet b = input[o++];\n\n\t\t\tfor (let i = 0; i < 8 && x < width; i++, x++) {\n\t\t\t\tconst v = b & 0x80 ? 0 : 255;\n\t\t\t\tb = b << 1;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = 255;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function writeDataRaw(data: PixelData, offset: number, width: number, height: number) {\n\tif (!width || !height)\n\t\treturn undefined;\n\n\tconst array = new Uint8Array(width * height);\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tarray[i] = data.data[i * 4 + offset];\n\t}\n\n\treturn array;\n}\n\nexport function writeDataRLE(buffer: Uint8Array, { data }: PixelData, width: number, height: number, offsets: number[]) {\n\tif (!width || !height)\n\t\treturn undefined;\n\n\tconst stride = (4 * width) | 0;\n\n\tlet ol = 0;\n\tlet o = (offsets.length * 2 * height) | 0;\n\n\tfor (const offset of offsets) {\n\t\tfor (let y = 0, p = offset | 0; y < height; y++) {\n\t\t\tconst strideStart = (y * stride) | 0;\n\t\t\tconst strideEnd = (strideStart + stride) | 0;\n\t\t\tconst lastIndex = (strideEnd + offset - 4) | 0;\n\t\t\tconst lastIndex2 = (lastIndex - 4) | 0;\n\t\t\tconst startOffset = o;\n\n\t\t\tfor (p = (strideStart + offset) | 0; p < strideEnd; p = (p + 4) | 0) {\n\t\t\t\tif (p < lastIndex2) {\n\t\t\t\t\tlet value1 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value2 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value3 = data[p];\n\n\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\tlet count = 3;\n\n\t\t\t\t\t\twhile (count < 128 && p < lastIndex && data[(p + 4) | 0] === value1) {\n\t\t\t\t\t\t\tcount = (count + 1) | 0;\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[o++] = 1 - count;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst countIndex = o;\n\t\t\t\t\t\tlet writeLast = true;\n\t\t\t\t\t\tlet count = 1;\n\t\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\n\t\t\t\t\t\twhile (p < lastIndex && count < 128) {\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t\tvalue1 = value2;\n\t\t\t\t\t\t\tvalue2 = value3;\n\t\t\t\t\t\t\tvalue3 = data[p];\n\n\t\t\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\t\t\tp = (p - 12) | 0;\n\t\t\t\t\t\t\t\twriteLast = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (writeLast) {\n\t\t\t\t\t\t\tif (count < 127) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tbuffer[o++] = value3;\n\t\t\t\t\t\t\t\tcount += 2;\n\t\t\t\t\t\t\t} else if (count < 128) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tp = (p - 4) | 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tp = (p - 8) | 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[countIndex] = count - 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (p === lastIndex) {\n\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t} else { // p === lastIndex2\n\t\t\t\t\tbuffer[o++] = 1;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst length = o - startOffset;\n\t\t\tbuffer[ol++] = (length >> 8) & 0xff;\n\t\t\tbuffer[ol++] = length & 0xff;\n\t\t}\n\t}\n\n\treturn buffer.slice(0, o);\n}\n\nexport let createCanvas: (width: number, height: number) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvas method');\n};\n\nexport let createCanvasFromData: (data: Uint8Array) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvasFromData method');\n};\n\nlet tempCanvas: HTMLCanvasElement | undefined = undefined;\n\nexport let createImageData: (width: number, height: number) => ImageData = (width, height) => {\n\tif (!tempCanvas) tempCanvas = createCanvas(1, 1);\n\treturn tempCanvas.getContext('2d')!.createImageData(width, height);\n};\n\nif (typeof document !== 'undefined') {\n\tcreateCanvas = (width, height) => {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\treturn canvas;\n\t};\n\n\tcreateCanvasFromData = (data) => {\n\t\tconst image = new Image();\n\t\timage.src = 'data:image/jpeg;base64,' + fromByteArray(data);\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\t\tcanvas.getContext('2d')!.drawImage(image, 0, 0);\n\t\treturn canvas;\n\t};\n}\n\nexport function initializeCanvas(\n\tcreateCanvasMethod: (width: number, height: number) => HTMLCanvasElement,\n\tcreateCanvasFromDataMethod?: (data: Uint8Array) => HTMLCanvasElement,\n\tcreateImageDataMethod?: (width: number, height: number) => ImageData\n) {\n\tcreateCanvas = createCanvasMethod;\n\tcreateCanvasFromData = createCanvasFromDataMethod || createCanvasFromData;\n\tcreateImageData = createImageDataMethod || createImageData;\n}\n",null,"import { fromByteArray, toByteArray } from 'base64-js';\nimport { readEffects, writeEffects } from './effectsHelpers';\nimport { clamp, createEnum, layerColors } from './helpers';\nimport {\n\tLayerAdditionalInfo, LayerEffectShadow, LayerEffectsOuterGlow, LayerEffectInnerGlow, LayerEffectBevel,\n\tLayerEffectSolidFill, LayerEffectPatternOverlay, LayerEffectGradientOverlay, LayerEffectSatin, EffectContour,\n\tEffectNoiseGradient, BezierPath, Psd, VectorContent, LayerEffectStroke, ExtraGradientInfo, EffectPattern,\n\tExtraPatternInfo, ReadOptions, BrightnessAdjustment, ExposureAdjustment, VibranceAdjustment,\n\tColorBalanceAdjustment, BlackAndWhiteAdjustment, PhotoFilterAdjustment, ChannelMixerChannel,\n\tChannelMixerAdjustment, PosterizeAdjustment, ThresholdAdjustment, GradientMapAdjustment, CMYK,\n\tSelectiveColorAdjustment, ColorLookupAdjustment, LevelsAdjustmentChannel, LevelsAdjustment,\n\tCurvesAdjustment, CurvesAdjustmentChannel, HueSaturationAdjustment, HueSaturationAdjustmentChannel,\n\tPresetInfo, Color, ColorBalanceValues, WriteOptions, LinkedFile, PlacedLayerType, Warp, EffectSolidGradient, KeyDescriptorItem, BooleanOperation,\n} from './psd';\nimport {\n\tPsdReader, readSignature, readUnicodeString, skipBytes, readUint32, readUint8, readFloat64, readUint16,\n\treadBytes, readInt16, checkSignature, readFloat32, readFixedPointPath32, readSection, readColor, readInt32,\n\treadPascalString,\n} from './psdReader';\nimport {\n\tPsdWriter, writeZeros, writeSignature, writeBytes, writeUint32, writeUint16, writeFloat64, writeUint8,\n\twriteInt16, writeFloat32, writeFixedPointPath32, writeUnicodeString, writeSection, writeUnicodeStringWithPadding,\n\twriteColor, writePascalString, writeInt32,\n} from './psdWriter';\nimport {\n\tAnnt, BESl, BESs, BETE, BlnM, bvlT, ClrS, DesciptorGradient, DescriptorColor, DescriptorGradientContent,\n\tDescriptorPatternContent, DescriptorUnitsValue, DescriptorVectorContent, FrFl, FStl, GrdT, IGSr, Ornt,\n\tparseAngle, parsePercent, parsePercentOrAngle, parseUnits, parseUnitsOrNumber, readVersionAndDescriptor, StrokeDescriptor,\n\tstrokeStyleLineAlignment, strokeStyleLineCapType, strokeStyleLineJoinType, TextDescriptor, textGridding,\n\tunitsAngle, unitsPercent, unitsValue, WarpDescriptor, warpStyle, writeVersionAndDescriptor\n} from './descriptor';\nimport { serializeEngineData, parseEngineData } from './engineData';\nimport { encodeEngineData, decodeEngineData } from './text';\n\nconst MOCK_HANDLERS = false;\n\nexport interface ExtendedWriteOptions extends WriteOptions {\n\tlayerIds: number[];\n}\n\ntype HasMethod = (target: LayerAdditionalInfo) => boolean;\ntype ReadMethod = (reader: PsdReader, target: LayerAdditionalInfo, left: () => number, psd: Psd, options: ReadOptions) => void;\ntype WriteMethod = (writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) => void;\n\nexport interface InfoHandler {\n\tkey: string;\n\thas: HasMethod;\n\tread: ReadMethod;\n\twrite: WriteMethod;\n}\n\nexport const infoHandlers: InfoHandler[] = [];\nexport const infoHandlersMap: { [key: string]: InfoHandler } = {};\n\nfunction addHandler(key: string, has: HasMethod, read: ReadMethod, write: WriteMethod) {\n\tconst handler: InfoHandler = { key, has, read, write };\n\tinfoHandlers.push(handler);\n\tinfoHandlersMap[handler.key] = handler;\n}\n\nfunction addHandlerAlias(key: string, target: string) {\n\tinfoHandlersMap[key] = infoHandlersMap[target];\n}\n\nfunction hasKey(key: keyof LayerAdditionalInfo) {\n\treturn (target: LayerAdditionalInfo) => target[key] !== undefined;\n}\n\naddHandler(\n\t'TySh',\n\thasKey('text'),\n\t(reader, target, leftBytes) => {\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh version`);\n\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 6; i++) transform.push(readFloat64(reader));\n\n\t\tif (readInt16(reader) !== 50) throw new Error(`Invalid TySh text version`);\n\t\tconst text: TextDescriptor = readVersionAndDescriptor(reader);\n\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh warp version`);\n\t\tconst warp: WarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.text = {\n\t\t\ttransform,\n\t\t\tleft: readFloat32(reader),\n\t\t\ttop: readFloat32(reader),\n\t\t\tright: readFloat32(reader),\n\t\t\tbottom: readFloat32(reader),\n\t\t\ttext: text['Txt '].replace(/\\r/g, '\\n'),\n\t\t\tindex: text.TextIndex || 0,\n\t\t\tgridding: textGridding.decode(text.textGridding),\n\t\t\tantiAlias: Annt.decode(text.AntA),\n\t\t\torientation: Ornt.decode(text.Ornt),\n\t\t\twarp: {\n\t\t\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\t\t\tvalue: warp.warpValue || 0,\n\t\t\t\tperspective: warp.warpPerspective || 0,\n\t\t\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\t\t\trotate: Ornt.decode(warp.warpRotate),\n\t\t\t},\n\t\t};\n\n\t\tif (text.EngineData) {\n\t\t\tconst engineData = decodeEngineData(parseEngineData(text.EngineData));\n\n\t\t\t// const before = parseEngineData(text.EngineData);\n\t\t\t// const after = encodeEngineData(engineData);\n\t\t\t// require('fs').writeFileSync('before.txt', require('util').inspect(before, false, 99, false), 'utf8');\n\t\t\t// require('fs').writeFileSync('after.txt', require('util').inspect(after, false, 99, false), 'utf8');\n\n\t\t\t// console.log(require('util').inspect(parseEngineData(text.EngineData), false, 99, true));\n\t\t\ttarget.text = { ...target.text, ...engineData };\n\t\t\t// console.log(require('util').inspect(target.text, false, 99, true));\n\t\t}\n\n\t\tskipBytes(reader, leftBytes());\n\t},\n\t(writer, target) => {\n\t\tconst text = target.text!;\n\t\tconst warp = text.warp || {};\n\t\tconst transform = text.transform || [1, 0, 0, 1, 0, 0];\n\n\t\tconst textDescriptor: TextDescriptor = {\n\t\t\t'Txt ': (text.text || '').replace(/\\r?\\n/g, '\\r'),\n\t\t\ttextGridding: textGridding.encode(text.gridding),\n\t\t\tOrnt: Ornt.encode(text.orientation),\n\t\t\tAntA: Annt.encode(text.antiAlias),\n\t\t\tTextIndex: text.index || 0,\n\t\t\tEngineData: serializeEngineData(encodeEngineData(text)),\n\t\t};\n\n\t\twriteInt16(writer, 1); // version\n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\twriteFloat64(writer, transform[i]);\n\t\t}\n\n\t\twriteInt16(writer, 50); // text version\n\t\twriteVersionAndDescriptor(writer, '', 'TxLr', textDescriptor);\n\n\t\twriteInt16(writer, 1); // warp version\n\t\twriteVersionAndDescriptor(writer, '', 'warp', encodeWarp(warp));\n\n\t\twriteFloat32(writer, text.left!);\n\t\twriteFloat32(writer, text.top!);\n\t\twriteFloat32(writer, text.right!);\n\t\twriteFloat32(writer, text.bottom!);\n\n\t\t// writeZeros(writer, 2);\n\t},\n);\n\n// vector fills\n\naddHandler(\n\t'SoCo',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'color',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'GdFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\t(target.vectorFill.type === 'solid' || target.vectorFill.type === 'noise'),\n\t(reader, target, left) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'PtFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'pattern',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'vscg',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke !== undefined,\n\t(reader, target, left) => {\n\t\treadSignature(reader); // key\n\t\tconst desc = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(desc);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor, key } = serializeVectorContent(target.vectorFill!);\n\t\twriteSignature(writer, key);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\nfunction readBezierKnot(reader: PsdReader, width: number, height: number) {\n\tconst y0 = readFixedPointPath32(reader) * height;\n\tconst x0 = readFixedPointPath32(reader) * width;\n\tconst y1 = readFixedPointPath32(reader) * height;\n\tconst x1 = readFixedPointPath32(reader) * width;\n\tconst y2 = readFixedPointPath32(reader) * height;\n\tconst x2 = readFixedPointPath32(reader) * width;\n\treturn [x0, y0, x1, y1, x2, y2];\n}\n\nfunction writeBezierKnot(writer: PsdWriter, points: number[], width: number, height: number) {\n\twriteFixedPointPath32(writer, points[1] / height); // y0\n\twriteFixedPointPath32(writer, points[0] / width); // x0\n\twriteFixedPointPath32(writer, points[3] / height); // y1\n\twriteFixedPointPath32(writer, points[2] / width); // x1\n\twriteFixedPointPath32(writer, points[5] / height); // y2\n\twriteFixedPointPath32(writer, points[4] / width); // x2\n}\n\nconst booleanOperations: BooleanOperation[] = ['exclude', 'combine', 'subtract', 'intersect'];\n\naddHandler(\n\t'vmsk',\n\thasKey('vectorMask'),\n\t(reader, target, left, { width, height }) => {\n\t\tif (readUint32(reader) !== 3) throw new Error('Invalid vmsk version');\n\n\t\ttarget.vectorMask = { paths: [] };\n\t\tconst vectorMask = target.vectorMask;\n\n\t\tconst flags = readUint32(reader);\n\t\tvectorMask.invert = (flags & 1) !== 0;\n\t\tvectorMask.notLink = (flags & 2) !== 0;\n\t\tvectorMask.disable = (flags & 4) !== 0;\n\n\t\tconst paths = vectorMask.paths;\n\t\tlet path: BezierPath | undefined = undefined;\n\n\t\twhile (left() >= 26) {\n\t\t\tconst selector = readUint16(reader);\n\n\t\t\tswitch (selector) {\n\t\t\t\tcase 0: // Closed subpath length record\n\t\t\t\tcase 3: { // Open subpath length record\n\t\t\t\t\treadUint16(reader); // count\n\t\t\t\t\tconst boolOp = readUint16(reader);\n\t\t\t\t\treadUint16(reader); // always 1 ?\n\t\t\t\t\tskipBytes(reader, 18);\n\t\t\t\t\tpath = { open: selector === 3, operation: booleanOperations[boolOp], knots: [] };\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 1: // Closed subpath Bezier knot, linked\n\t\t\t\tcase 2: // Closed subpath Bezier knot, unlinked\n\t\t\t\tcase 4: // Open subpath Bezier knot, linked\n\t\t\t\tcase 5: // Open subpath Bezier knot, unlinked\n\t\t\t\t\tpath!.knots.push({ linked: (selector === 1 || selector === 4), points: readBezierKnot(reader, width, height) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // Path fill rule record\n\t\t\t\t\tskipBytes(reader, 24);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: { // Clipboard record\n\t\t\t\t\t// TODO: check if these need to be multiplied by document size\n\t\t\t\t\tconst top = readFixedPointPath32(reader);\n\t\t\t\t\tconst left = readFixedPointPath32(reader);\n\t\t\t\t\tconst bottom = readFixedPointPath32(reader);\n\t\t\t\t\tconst right = readFixedPointPath32(reader);\n\t\t\t\t\tconst resolution = readFixedPointPath32(reader);\n\t\t\t\t\tskipBytes(reader, 4);\n\t\t\t\t\tvectorMask.clipboard = { top, left, bottom, right, resolution };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 8: // Initial fill rule record\n\t\t\t\t\tvectorMask.fillStartsWithAllPixels = !!readUint16(reader);\n\t\t\t\t\tskipBytes(reader, 22);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: throw new Error('Invalid vmsk section');\n\t\t\t}\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, { width, height }) => {\n\t\tconst vectorMask = target.vectorMask!;\n\t\tconst flags =\n\t\t\t(vectorMask.invert ? 1 : 0) |\n\t\t\t(vectorMask.notLink ? 2 : 0) |\n\t\t\t(vectorMask.disable ? 4 : 0);\n\n\t\twriteUint32(writer, 3); // version\n\t\twriteUint32(writer, flags);\n\n\t\t// initial entry\n\t\twriteUint16(writer, 6);\n\t\twriteZeros(writer, 24);\n\n\t\tconst clipboard = vectorMask.clipboard;\n\t\tif (clipboard) {\n\t\t\twriteUint16(writer, 7);\n\t\t\twriteFixedPointPath32(writer, clipboard.top);\n\t\t\twriteFixedPointPath32(writer, clipboard.left);\n\t\t\twriteFixedPointPath32(writer, clipboard.bottom);\n\t\t\twriteFixedPointPath32(writer, clipboard.right);\n\t\t\twriteFixedPointPath32(writer, clipboard.resolution);\n\t\t\twriteZeros(writer, 4);\n\t\t}\n\n\t\tif (vectorMask.fillStartsWithAllPixels !== undefined) {\n\t\t\twriteUint16(writer, 8);\n\t\t\twriteUint16(writer, vectorMask.fillStartsWithAllPixels ? 1 : 0);\n\t\t\twriteZeros(writer, 22);\n\t\t}\n\n\t\tfor (const path of vectorMask.paths) {\n\t\t\twriteUint16(writer, path.open ? 3 : 0);\n\t\t\twriteUint16(writer, path.knots.length);\n\t\t\twriteUint16(writer, Math.abs(booleanOperations.indexOf(path.operation))); // default to 1 if not found\n\t\t\twriteUint16(writer, 1);\n\t\t\twriteZeros(writer, 18); // TODO: these are sometimes non-zero\n\n\t\t\tconst linkedKnot = path.open ? 4 : 1;\n\t\t\tconst unlinkedKnot = path.open ? 5 : 2;\n\n\t\t\tfor (const { linked, points } of path.knots) {\n\t\t\t\twriteUint16(writer, linked ? linkedKnot : unlinkedKnot);\n\t\t\t\twriteBezierKnot(writer, points, width, height);\n\t\t\t}\n\t\t}\n\t},\n);\n\n// TODO: need to write vmsk if has outline ?\naddHandlerAlias('vsms', 'vmsk');\n// addHandlerAlias('vmsk', 'vsms');\n\ninterface VogkDescriptor {\n\tkeyDescriptorList: {\n\t\tkeyShapeInvalidated?: boolean;\n\t\tkeyOriginType?: number;\n\t\tkeyOriginResolution?: number;\n\t\tkeyOriginRRectRadii?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\ttopRight: DescriptorUnitsValue;\n\t\t\ttopLeft: DescriptorUnitsValue;\n\t\t\tbottomLeft: DescriptorUnitsValue;\n\t\t\tbottomRight: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginShapeBBox?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\t'Top ': DescriptorUnitsValue;\n\t\t\tLeft: DescriptorUnitsValue;\n\t\t\tBtom: DescriptorUnitsValue;\n\t\t\tRght: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginIndex: number;\n\t}[];\n}\n\naddHandler(\n\t'vogk',\n\thasKey('vectorOrigination'),\n\t(reader, target, left) => {\n\t\tif (readInt32(reader) !== 1) throw new Error(`Invalid vogk version`);\n\t\tconst desc = readVersionAndDescriptor(reader) as VogkDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\t\ttarget.vectorOrigination = { keyDescriptorList: [] };\n\n\t\tfor (const i of desc.keyDescriptorList) {\n\t\t\tconst item: KeyDescriptorItem = {};\n\n\t\t\tif (i.keyShapeInvalidated != null) item.keyShapeInvalidated = i.keyShapeInvalidated;\n\t\t\tif (i.keyOriginType != null) item.keyOriginType = i.keyOriginType;\n\t\t\tif (i.keyOriginResolution != null) item.keyOriginResolution = i.keyOriginResolution;\n\t\t\tif (i.keyOriginShapeBBox != null) {\n\t\t\t\titem.keyOriginShapeBoundingBox = {\n\t\t\t\t\ttop: parseUnits(i.keyOriginShapeBBox['Top ']),\n\t\t\t\t\tleft: parseUnits(i.keyOriginShapeBBox.Left),\n\t\t\t\t\tbottom: parseUnits(i.keyOriginShapeBBox.Btom),\n\t\t\t\t\tright: parseUnits(i.keyOriginShapeBBox.Rght),\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (i.keyOriginRRectRadii != null) {\n\t\t\t\titem.keyOriginRRectRadii = {\n\t\t\t\t\ttopRight: parseUnits(i.keyOriginRRectRadii.topRight),\n\t\t\t\t\ttopLeft: parseUnits(i.keyOriginRRectRadii.topLeft),\n\t\t\t\t\tbottomLeft: parseUnits(i.keyOriginRRectRadii.bottomLeft),\n\t\t\t\t\tbottomRight: parseUnits(i.keyOriginRRectRadii.bottomRight),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttarget.vectorOrigination.keyDescriptorList.push(item);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\ttarget;\n\t\tconst orig = target.vectorOrigination!;\n\t\tconst desc: VogkDescriptor = { keyDescriptorList: [] };\n\n\t\tfor (let i = 0; i < orig.keyDescriptorList.length; i++) {\n\t\t\tconst item = orig.keyDescriptorList[i];\n\n\t\t\tif (item.keyShapeInvalidated) {\n\t\t\t\tdesc.keyDescriptorList.push({ keyShapeInvalidated: true, keyOriginIndex: i });\n\t\t\t} else {\n\t\t\t\tdesc.keyDescriptorList.push({\n\t\t\t\t\tkeyOriginType: item.keyOriginType ?? 4,\n\t\t\t\t\tkeyOriginResolution: item.keyOriginResolution ?? 72,\n\t\t\t\t} as any);\n\n\t\t\t\tconst out = desc.keyDescriptorList[desc.keyDescriptorList.length - 1];\n\n\t\t\t\tif (item.keyOriginRRectRadii) {\n\t\t\t\t\tout.keyOriginRRectRadii = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\ttopRight: unitsValue(item.keyOriginRRectRadii.topRight, 'topRight'),\n\t\t\t\t\t\ttopLeft: unitsValue(item.keyOriginRRectRadii.topLeft, 'topLeft'),\n\t\t\t\t\t\tbottomLeft: unitsValue(item.keyOriginRRectRadii.bottomLeft, 'bottomLeft'),\n\t\t\t\t\t\tbottomRight: unitsValue(item.keyOriginRRectRadii.bottomRight, 'bottomRight'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (item.keyOriginShapeBoundingBox) {\n\t\t\t\t\tout.keyOriginShapeBBox = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\t'Top ': unitsValue(item.keyOriginShapeBoundingBox.top, 'top'),\n\t\t\t\t\t\tLeft: unitsValue(item.keyOriginShapeBoundingBox.left, 'left'),\n\t\t\t\t\t\tBtom: unitsValue(item.keyOriginShapeBoundingBox.bottom, 'bottom'),\n\t\t\t\t\t\tRght: unitsValue(item.keyOriginShapeBoundingBox.right, 'right'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tout.keyOriginIndex = i;\n\t\t\t}\n\t\t}\n\n\t\twriteInt32(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t}\n);\n\naddHandler(\n\t'luni',\n\thasKey('name'),\n\t(reader, target, left) => {\n\t\ttarget.name = readUnicodeString(reader);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteUnicodeString(writer, target.name!);\n\t\t// writeUint16(writer, 0); // padding (but not extending string length)\n\t},\n);\n\naddHandler(\n\t'lnsr',\n\thasKey('nameSource'),\n\t(reader, target) => target.nameSource = readSignature(reader),\n\t(writer, target) => writeSignature(writer, target.nameSource!),\n);\n\naddHandler(\n\t'lyid',\n\thasKey('id'),\n\t(reader, target) => target.id = readUint32(reader),\n\t(writer, target, _psd, options) => {\n\t\tlet id = target.id!;\n\t\twhile (options.layerIds.indexOf(id) !== -1) id += 100; // make sure we don't have duplicate layer ids\n\t\twriteUint32(writer, id);\n\t\toptions.layerIds.push(id);\n\t},\n);\n\naddHandler(\n\t'lsct',\n\thasKey('sectionDivider'),\n\t(reader, target, left) => {\n\t\ttarget.sectionDivider = { type: readUint32(reader) };\n\n\t\tif (left()) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\ttarget.sectionDivider.key = readSignature(reader);\n\t\t}\n\n\t\tif (left()) {\n\t\t\t// 0 = normal\n\t\t\t// 1 = scene group, affects the animation timeline.\n\t\t\ttarget.sectionDivider.subType = readUint32(reader);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.sectionDivider!.type);\n\n\t\tif (target.sectionDivider!.key) {\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, target.sectionDivider!.key);\n\n\t\t\tif (target.sectionDivider!.subType !== undefined) {\n\t\t\t\twriteUint32(writer, target.sectionDivider!.subType);\n\t\t\t}\n\t\t}\n\t},\n);\n\naddHandler(\n\t'clbl',\n\thasKey('blendClippendElements'),\n\t(reader, target) => {\n\t\ttarget.blendClippendElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendClippendElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'infx',\n\thasKey('blendInteriorElements'),\n\t(reader, target) => {\n\t\ttarget.blendInteriorElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendInteriorElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'knko',\n\thasKey('knockout'),\n\t(reader, target) => {\n\t\ttarget.knockout = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.knockout ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'lspf',\n\thasKey('protected'),\n\t(reader, target) => {\n\t\tconst flags = readUint32(reader);\n\t\ttarget.protected = {\n\t\t\ttransparency: (flags & 0x01) !== 0,\n\t\t\tcomposite: (flags & 0x02) !== 0,\n\t\t\tposition: (flags & 0x04) !== 0,\n\t\t};\n\n\t\tif (flags & 0x08) target.protected.artboards = true;\n\t},\n\t(writer, target) => {\n\t\tconst flags =\n\t\t\t(target.protected!.transparency ? 0x01 : 0) |\n\t\t\t(target.protected!.composite ? 0x02 : 0) |\n\t\t\t(target.protected!.position ? 0x04 : 0) |\n\t\t\t(target.protected!.artboards ? 0x08 : 0);\n\n\t\twriteUint32(writer, flags);\n\t},\n);\n\naddHandler(\n\t'lclr',\n\thasKey('layerColor'),\n\t(reader, target) => {\n\t\tconst color = readUint16(reader);\n\t\tskipBytes(reader, 6);\n\t\ttarget.layerColor = layerColors[color];\n\t},\n\t(writer, target) => {\n\t\tconst index = layerColors.indexOf(target.layerColor!);\n\t\twriteUint16(writer, index === -1 ? 0 : index);\n\t\twriteZeros(writer, 6);\n\t},\n);\n\ninterface CustomDescriptor {\n\tlayerTime?: number;\n}\n\ninterface FrameListDescriptor {\n\tLaID: number;\n\tLaSt: {\n\t\tenab?: boolean;\n\t\tIMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tVMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tFXRf?: { Hrzn: number; Vrtc: number; };\n\t\tFrLs: number[];\n\t}[];\n}\n\naddHandler(\n\t'shmd',\n\thasKey('timestamp'),\n\t(reader, target, left, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\tconst key = readSignature(reader);\n\t\t\treadUint8(reader); // copy\n\t\t\tskipBytes(reader, 3);\n\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\tif (key === 'cust') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as CustomDescriptor;\n\t\t\t\t\tif (desc.layerTime !== undefined) target.timestamp = desc.layerTime;\n\t\t\t\t} else if (key === 'mlst') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\toptions.logDevFeatures && console.log('mlst', desc);\n\t\t\t\t\t// options.logDevFeatures && console.log('mlst', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else if (key === 'mdyn') {\n\t\t\t\t\t// frame flags\n\t\t\t\t\tconst unknown = readUint16(reader);\n\t\t\t\t\tconst propagate = readUint8(reader);\n\t\t\t\t\tconst flags = readUint8(reader);\n\t\t\t\t\tconst unifyLayerPosition = (flags & 1) !== 0;\n\t\t\t\t\tconst unifyLayerStyle = (flags & 2) !== 0;\n\t\t\t\t\tconst unifyLayerVisibility = (flags & 4) !== 0;\n\t\t\t\t\toptions.logDevFeatures && console.log(\n\t\t\t\t\t\t'mdyn', 'unknown:', unknown, 'propagate:', propagate,\n\t\t\t\t\t\t'flags:', flags, { unifyLayerPosition, unifyLayerStyle, unifyLayerVisibility });\n\n\t\t\t\t\t// const desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\t// console.log('mdyn', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else {\n\t\t\t\t\toptions.logDevFeatures && console.log('Unhandled metadata', key);\n\t\t\t\t}\n\n\t\t\t\tskipBytes(reader, left());\n\t\t\t});\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst desc: CustomDescriptor = {\n\t\t\tlayerTime: target.timestamp!,\n\t\t};\n\n\t\twriteUint32(writer, 1); // count\n\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'cust');\n\t\twriteUint8(writer, 0); // copy (always false)\n\t\twriteZeros(writer, 3);\n\t\twriteSection(writer, 2, () => writeVersionAndDescriptor(writer, '', 'metadata', desc), true);\n\t},\n);\n\naddHandler(\n\t'vstk',\n\thasKey('vectorStroke'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as StrokeDescriptor;\n\t\ttarget.vectorStroke = {\n\t\t\tstrokeEnabled: desc.strokeEnabled,\n\t\t\tfillEnabled: desc.fillEnabled,\n\t\t\tlineWidth: parseUnits(desc.strokeStyleLineWidth),\n\t\t\tlineDashOffset: parseUnits(desc.strokeStyleLineDashOffset),\n\t\t\tmiterLimit: desc.strokeStyleMiterLimit,\n\t\t\tlineCapType: strokeStyleLineCapType.decode(desc.strokeStyleLineCapType),\n\t\t\tlineJoinType: strokeStyleLineJoinType.decode(desc.strokeStyleLineJoinType),\n\t\t\tlineAlignment: strokeStyleLineAlignment.decode(desc.strokeStyleLineAlignment),\n\t\t\tscaleLock: desc.strokeStyleScaleLock,\n\t\t\tstrokeAdjust: desc.strokeStyleStrokeAdjust,\n\t\t\tlineDashSet: desc.strokeStyleLineDashSet.map(parseUnits),\n\t\t\tblendMode: BlnM.decode(desc.strokeStyleBlendMode),\n\t\t\topacity: parsePercent(desc.strokeStyleOpacity),\n\t\t\tcontent: parseVectorContent(desc.strokeStyleContent),\n\t\t\tresolution: desc.strokeStyleResolution,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst stroke = target.vectorStroke!;\n\t\tconst descriptor: StrokeDescriptor = {\n\t\t\tstrokeStyleVersion: 2,\n\t\t\tstrokeEnabled: !!stroke.strokeEnabled,\n\t\t\tfillEnabled: !!stroke.fillEnabled,\n\t\t\tstrokeStyleLineWidth: stroke.lineWidth || { value: 3, units: 'Points' },\n\t\t\tstrokeStyleLineDashOffset: stroke.lineDashOffset || { value: 0, units: 'Points' },\n\t\t\tstrokeStyleMiterLimit: stroke.miterLimit ?? 100,\n\t\t\tstrokeStyleLineCapType: strokeStyleLineCapType.encode(stroke.lineCapType),\n\t\t\tstrokeStyleLineJoinType: strokeStyleLineJoinType.encode(stroke.lineJoinType),\n\t\t\tstrokeStyleLineAlignment: strokeStyleLineAlignment.encode(stroke.lineAlignment),\n\t\t\tstrokeStyleScaleLock: !!stroke.scaleLock,\n\t\t\tstrokeStyleStrokeAdjust: !!stroke.strokeAdjust,\n\t\t\tstrokeStyleLineDashSet: stroke.lineDashSet || [],\n\t\t\tstrokeStyleBlendMode: BlnM.encode(stroke.blendMode),\n\t\t\tstrokeStyleOpacity: unitsPercent(stroke.opacity ?? 1),\n\t\t\tstrokeStyleContent: serializeVectorContent(\n\t\t\t\tstroke.content || { type: 'color', color: { r: 0, g: 0, b: 0 } }).descriptor,\n\t\t\tstrokeStyleResolution: stroke.resolution ?? 72,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'strokeStyle', descriptor);\n\t},\n);\n\ninterface ArtbDescriptor {\n\tartboardRect: { 'Top ': number; Left: number; Btom: number; Rght: number; };\n\tguideIndeces: any[];\n\tartboardPresetName: string;\n\t'Clr ': DescriptorColor;\n\tartboardBackgroundType: number;\n}\n\naddHandler(\n\t'artb', // per-layer arboard info\n\thasKey('artboard'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtbDescriptor;\n\t\ttarget.artboard = {\n\t\t\trect: { top: desc.artboardRect['Top '], left: desc.artboardRect.Left, bottom: desc.artboardRect.Btom, right: desc.artboardRect.Rght },\n\t\t\tguideIndices: desc.guideIndeces,\n\t\t\tpresetName: desc.artboardPresetName,\n\t\t\tcolor: parseColor(desc['Clr ']),\n\t\t\tbackgroundType: desc.artboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artb = target.artboard!;\n\t\tconst desc: ArtbDescriptor = {\n\t\t\tartboardRect: { 'Top ': artb.rect.top, Left: artb.rect.left, Btom: artb.rect.bottom, Rght: artb.rect.right },\n\t\t\tguideIndeces: artb.guideIndices || [],\n\t\t\tartboardPresetName: artb.presetName || '',\n\t\t\t'Clr ': serializeColor(artb.color),\n\t\t\tartboardBackgroundType: artb.backgroundType ?? 1,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'artboard', desc);\n\t},\n);\n\naddHandler(\n\t'sn2P',\n\thasKey('usingAlignedRendering'),\n\t(reader, target) => target.usingAlignedRendering = !!readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.usingAlignedRendering ? 1 : 0),\n);\n\nconst placedLayerTypes: PlacedLayerType[] = ['unknown', 'vector', 'raster', 'image stack'];\n\nfunction parseWarp(warp: WarpDescriptor): Warp {\n\treturn {\n\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\tvalue: warp.warpValue || 0,\n\t\tperspective: warp.warpPerspective || 0,\n\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\trotate: Ornt.decode(warp.warpRotate),\n\t\tbounds: warp.bounds && {\n\t\t\ttop: parseUnitsOrNumber(warp.bounds['Top ']),\n\t\t\tleft: parseUnitsOrNumber(warp.bounds.Left),\n\t\t\tbottom: parseUnitsOrNumber(warp.bounds.Btom),\n\t\t\tright: parseUnitsOrNumber(warp.bounds.Rght),\n\t\t},\n\t\tuOrder: warp.uOrder,\n\t\tvOrder: warp.vOrder,\n\t\tcustomEnvelopeWarp: warp.customEnvelopeWarp && {\n\t\t\tmeshPoints: warp.customEnvelopeWarp.meshPoints.map(pt => ({\n\t\t\t\ttype: pt.type === 'Hrzn' ? 'horizontal' : 'vertical',\n\t\t\t\tvalues: pt.values,\n\t\t\t})),\n\t\t},\n\t};\n}\n\nfunction encodeWarp(warp: Warp): WarpDescriptor {\n\tconst desc: WarpDescriptor = {\n\t\twarpStyle: warpStyle.encode(warp.style),\n\t\twarpValue: warp.value || 0,\n\t\twarpPerspective: warp.perspective || 0,\n\t\twarpPerspectiveOther: warp.perspectiveOther || 0,\n\t\twarpRotate: Ornt.encode(warp.rotate),\n\t\tbounds: {\n\t\t\t'Top ': unitsValue(warp.bounds?.top || { units: 'Pixels', value: 0 }, 'bounds.top'),\n\t\t\tLeft: unitsValue(warp.bounds?.left || { units: 'Pixels', value: 0 }, 'bounds.left'),\n\t\t\tBtom: unitsValue(warp.bounds?.bottom || { units: 'Pixels', value: 0 }, 'bounds.bottom'),\n\t\t\tRght: unitsValue(warp.bounds?.right || { units: 'Pixels', value: 0 }, 'bounds.right'),\n\t\t},\n\t\tuOrder: warp.uOrder || 0,\n\t\tvOrder: warp.vOrder || 0,\n\t};\n\n\tif (warp.customEnvelopeWarp) {\n\t\tdesc.customEnvelopeWarp = {\n\t\t\tmeshPoints: (warp.customEnvelopeWarp.meshPoints || []).map(pt => ({\n\t\t\t\ttype: pt.type === 'horizontal' ? 'Hrzn' : 'Vrtc',\n\t\t\t\tvalues: pt.values,\n\t\t\t})),\n\t\t};\n\t}\n\n\treturn desc;\n}\n\naddHandler(\n\t'PlLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'plcL') throw new Error(`Invalid PlLd signature`);\n\t\tif (readInt32(reader) !== 3) throw new Error(`Invalid PlLd version`);\n\t\tconst id = readPascalString(reader, 1);\n\t\treadInt32(reader); // pageNumber\n\t\treadInt32(reader); // totalPages, TODO: check how this works ?\n\t\treadInt32(reader); // anitAliasPolicy 16\n\t\tconst placedLayerType = readInt32(reader); // 0 = unknown, 1 = vector, 2 = raster, 3 = image stack\n\t\tif (!placedLayerTypes[placedLayerType]) throw new Error('Invalid PlLd type');\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 8; i++) transform.push(readFloat64(reader)); // x, y of 4 corners of the transform\n\t\tconst warpVersion = readInt32(reader);\n\t\tif (warpVersion !== 0) throw new Error(`Invalid Warp version ${warpVersion}`);\n\t\tconst warp: WarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.placedLayer = target.placedLayer || { // skip if SoLd already set it\n\t\t\tid,\n\t\t\ttype: placedLayerTypes[placedLayerType],\n\t\t\t// pageNumber,\n\t\t\t// totalPages,\n\t\t\ttransform,\n\t\t\twarp: parseWarp(warp),\n\t\t};\n\n\t\t// console.log('PlLd warp', require('util').inspect(warp, false, 99, true));\n\t\t// console.log('PlLd', require('util').inspect(target.placedLayer, false, 99, true));\n\n\t\tskipBytes(reader, left()); // HACK\n\t},\n\t(writer, target) => {\n\t\tconst placed = target.placedLayer!;\n\t\twriteSignature(writer, 'plcL');\n\t\twriteInt32(writer, 3); // version\n\t\twritePascalString(writer, placed.id, 1);\n\t\twriteInt32(writer, 1); // pageNumber\n\t\twriteInt32(writer, 1); // totalPages\n\t\twriteInt32(writer, 16); // anitAliasPolicy\n\t\tif (placedLayerTypes.indexOf(placed.type) === -1) throw new Error('Invalid placedLayer type');\n\t\twriteInt32(writer, placedLayerTypes.indexOf(placed.type));\n\t\tfor (let i = 0; i < 8; i++) writeFloat64(writer, placed.transform[i]);\n\t\twriteInt32(writer, 0); // warp version\n\t\twriteVersionAndDescriptor(writer, '', 'warp', encodeWarp(placed.warp || {}));\n\t},\n);\n\ninterface SoLdDescriptor {\n\tIdnt: string;\n\tplaced: string;\n\tPgNm: number;\n\ttotalPages: number;\n\tCrop?: number;\n\tframeStep: { numerator: number; denominator: number; };\n\tduration: { numerator: number; denominator: number; };\n\tframeCount: number;\n\tAnnt: number;\n\tType: number;\n\tTrnf: number[];\n\tnonAffineTransform: number[];\n\twarp: WarpDescriptor;\n\t'Sz  ': { Wdth: number; Hght: number; };\n\tRslt: DescriptorUnitsValue;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'SoLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'soLD') throw new Error(`Invalid SoLd type`);\n\t\tif (readInt32(reader) !== 4) throw new Error(`Invalid SoLd version`);\n\t\tconst desc: SoLdDescriptor = readVersionAndDescriptor(reader);\n\t\t// console.log('SoLd', require('util').inspect(desc, false, 99, true));\n\t\t// console.log('SoLd.warp', require('util').inspect(desc.warp, false, 99, true));\n\n\t\ttarget.placedLayer = {\n\t\t\tid: desc.Idnt,\n\t\t\tplaced: desc.placed,\n\t\t\ttype: placedLayerTypes[desc.Type],\n\t\t\t// pageNumber: info.PgNm,\n\t\t\t// totalPages: info.totalPages,\n\t\t\t// frameStep: info.frameStep,\n\t\t\t// duration: info.duration,\n\t\t\t// frameCount: info.frameCount,\n\t\t\ttransform: desc.Trnf,\n\t\t\twidth: desc['Sz  '].Wdth,\n\t\t\theight: desc['Sz  '].Hght,\n\t\t\tresolution: parseUnits(desc.Rslt),\n\t\t\twarp: parseWarp(desc.warp),\n\t\t};\n\n\t\tif (desc.Crop) target.placedLayer.crop = desc.Crop;\n\t\tif (desc.comp) target.placedLayer.comp = desc.comp;\n\t\tif (desc.compInfo) target.placedLayer.compInfo = desc.compInfo;\n\n\t\tskipBytes(reader, left()); // HACK\n\t},\n\t(writer, target) => {\n\t\twriteSignature(writer, 'soLD');\n\t\twriteInt32(writer, 4); // version\n\n\t\tconst placed = target.placedLayer!;\n\t\tconst desc: SoLdDescriptor = {\n\t\t\tIdnt: placed.id,\n\t\t\tplaced: placed.placed ?? placed.id, // ???\n\t\t\tPgNm: 1,\n\t\t\ttotalPages: 1,\n\t\t\t...(placed.crop ? { Crop: placed.crop } : {}),\n\t\t\tframeStep: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tduration: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tframeCount: 1,\n\t\t\tAnnt: 16,\n\t\t\tType: placedLayerTypes.indexOf(placed.type),\n\t\t\tTrnf: placed.transform,\n\t\t\tnonAffineTransform: placed.transform,\n\t\t\twarp: encodeWarp(placed.warp || {}),\n\t\t\t'Sz  ': {\n\t\t\t\tWdth: placed.width || 0, // TODO: find size ?\n\t\t\t\tHght: placed.height || 0, // TODO: find size ?\n\t\t\t},\n\t\t\tRslt: placed.resolution ? unitsValue(placed.resolution, 'resolution') : { units: 'Density', value: 72 }\n\t\t};\n\n\t\tif (placed.comp) desc.comp = placed.comp;\n\t\tif (placed.compInfo) desc.compInfo = placed.compInfo;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'fxrp',\n\thasKey('referencePoint'),\n\t(reader, target) => {\n\t\ttarget.referencePoint = {\n\t\t\tx: readFloat64(reader),\n\t\t\ty: readFloat64(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteFloat64(writer, target.referencePoint!.x);\n\t\twriteFloat64(writer, target.referencePoint!.y);\n\t},\n);\n\nif (MOCK_HANDLERS) {\n\taddHandler(\n\t\t'Patt',\n\t\ttarget => (target as any)._Patt !== undefined,\n\t\t(reader, target, left) => {\n\t\t\t// console.log('additional info: Patt');\n\t\t\t(target as any)._Patt = readBytes(reader, left());\n\t\t},\n\t\t(writer, target) => false && writeBytes(writer, (target as any)._Patt),\n\t);\n} else {\n\taddHandler(\n\t\t'Patt', // TODO: handle also Pat2 & Pat3\n\t\ttarget => !target,\n\t\t(reader, _target, left) => {\n\t\t\tif (!left()) return;\n\n\t\t\tskipBytes(reader, left()); return; // not supported yet\n\n\t\t\t// if (!target.patterns) target.patterns = [];\n\t\t\t// target.patterns.push(readPattern(reader));\n\t\t\t// skipBytes(reader, left());\n\t\t},\n\t\t(_writer, _target) => {\n\t\t},\n\t);\n}\n\ninterface FileOpenDescriptor {\n\tcompInfo: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'lnk2',\n\t(target: any) => !!(target as Psd).linkedFiles && (target as Psd).linkedFiles!.length > 0,\n\t(reader, target, left, _, options) => {\n\t\tconst psd = target as Psd;\n\t\tpsd.linkedFiles = [];\n\n\t\twhile (left() > 8) {\n\t\t\tlet size = readLength64(reader); // size\n\t\t\tconst startOffset = reader.offset;\n\t\t\tconst type = readSignature(reader) as 'liFD' | 'liFE' | 'liFA';\n\t\t\tconst version = readInt32(reader);\n\t\t\tconst id = readPascalString(reader, 1);\n\t\t\tconst name = readUnicodeString(reader);\n\t\t\tconst fileType = readSignature(reader).trim(); // '    ' if empty\n\t\t\tconst fileCreator = readSignature(reader).trim(); // '    ' or '\\0\\0\\0\\0' if empty\n\t\t\tconst dataSize = readLength64(reader);\n\t\t\tconst hasFileOpenDescriptor = readUint8(reader);\n\t\t\tconst fileOpenDescriptor = hasFileOpenDescriptor ? readVersionAndDescriptor(reader) as FileOpenDescriptor : undefined;\n\t\t\tconst linkedFileDescriptor = type === 'liFE' ? readVersionAndDescriptor(reader) : undefined;\n\t\t\tconst file: LinkedFile = { id, name, data: undefined };\n\n\t\t\tif (fileType) file.type = fileType;\n\t\t\tif (fileCreator) file.creator = fileCreator;\n\t\t\tif (fileOpenDescriptor) file.descriptor = fileOpenDescriptor;\n\n\t\t\tif (type === 'liFE' && version > 3) {\n\t\t\t\tconst year = readInt32(reader);\n\t\t\t\tconst month = readUint8(reader);\n\t\t\t\tconst day = readUint8(reader);\n\t\t\t\tconst hour = readUint8(reader);\n\t\t\t\tconst minute = readUint8(reader);\n\t\t\t\tconst seconds = readFloat64(reader);\n\t\t\t\tconst wholeSeconds = Math.floor(seconds);\n\t\t\t\tconst ms = (seconds - wholeSeconds) * 1000;\n\t\t\t\tfile.time = new Date(year, month, day, hour, minute, wholeSeconds, ms);\n\t\t\t}\n\n\t\t\tconst fileSize = type === 'liFE' ? readLength64(reader) : 0;\n\t\t\tif (type === 'liFA') skipBytes(reader, 8);\n\t\t\tif (type === 'liFD') file.data = readBytes(reader, dataSize);\n\t\t\tif (version >= 5) file.childDocumentID = readUnicodeString(reader);\n\t\t\tif (version >= 6) file.assetModTime = readFloat64(reader);\n\t\t\tif (version >= 7) file.assetLockedState = readUint8(reader);\n\t\t\tif (type === 'liFE') file.data = readBytes(reader, fileSize);\n\n\t\t\tif (options.skipLinkedFilesData) file.data = undefined;\n\n\t\t\tpsd.linkedFiles.push(file);\n\t\t\tlinkedFileDescriptor;\n\n\t\t\twhile (size % 4) size++;\n\t\t\treader.offset = startOffset + size;\n\t\t}\n\n\t\tskipBytes(reader, left()); // ?\n\t},\n\t(writer, target) => {\n\t\tconst psd = target as Psd;\n\n\t\tfor (const file of psd.linkedFiles!) {\n\t\t\tlet version = 2;\n\n\t\t\tif (file.assetLockedState != null) version = 7;\n\t\t\telse if (file.assetModTime != null) version = 6;\n\t\t\telse if (file.childDocumentID != null) version = 5;\n\t\t\t// TODO: else if (file.time != null) version = 3; (only for liFE)\n\n\t\t\twriteUint32(writer, 0);\n\t\t\twriteUint32(writer, 0); // size\n\t\t\tconst sizeOffset = writer.offset;\n\t\t\twriteSignature(writer, file.data ? 'liFD' : 'liFA');\n\t\t\twriteInt32(writer, version);\n\t\t\twritePascalString(writer, file.id || '', 1);\n\t\t\twriteUnicodeStringWithPadding(writer, file.name || '');\n\t\t\twriteSignature(writer, file.type ? `${file.type}    `.substr(0, 4) : '    ');\n\t\t\twriteSignature(writer, file.creator ? `${file.creator}    `.substr(0, 4) : '\\0\\0\\0\\0');\n\t\t\twriteLength64(writer, file.data ? file.data.byteLength : 0);\n\n\t\t\tif (file.descriptor && file.descriptor.compInfo) {\n\t\t\t\tconst desc: FileOpenDescriptor = {\n\t\t\t\t\tcompInfo: file.descriptor.compInfo,\n\t\t\t\t};\n\n\t\t\t\twriteUint8(writer, 1);\n\t\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t\t} else {\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\n\t\t\tif (file.data) writeBytes(writer, file.data);\n\t\t\telse writeLength64(writer, 0);\n\t\t\tif (version >= 5) writeUnicodeStringWithPadding(writer, file.childDocumentID || '');\n\t\t\tif (version >= 6) writeFloat64(writer, file.assetModTime || 0);\n\t\t\tif (version >= 7) writeUint8(writer, file.assetLockedState || 0);\n\n\t\t\tlet size = writer.offset - sizeOffset;\n\t\t\twriter.view.setUint32(sizeOffset - 4, size, false); // write size\n\n\t\t\twhile (size % 4) {\n\t\t\t\tsize++;\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\t\t}\n\t},\n);\naddHandlerAlias('lnkD', 'lnk2');\naddHandlerAlias('lnk3', 'lnk2');\n\n// this seems to just be zero size block, ignore it\naddHandler(\n\t'lnkE',\n\ttarget => (target as any)._lnkE !== undefined,\n\t(reader, target, left, _psds, options) => {\n\t\tif (options.logMissingFeatures && left()) {\n\t\t\tconsole.log(`Non-empty lnkE layer info (${left()} bytes)`);\n\t\t}\n\n\t\tif (MOCK_HANDLERS) {\n\t\t\t(target as any)._lnkE = readBytes(reader, left());\n\t\t}\n\t},\n\t(writer, target) => MOCK_HANDLERS && writeBytes(writer, (target as any)._lnkE),\n);\n\ninterface ExtensionDesc {\n\tgeneratorSettings: {\n\t\tgenerator_45_assets: { json: string; };\n\t\tlayerTime: number;\n\t};\n}\n\n// extension settings ?, ignore it\naddHandler(\n\t'extn',\n\ttarget => (target as any)._extn !== undefined,\n\t(reader, target) => {\n\t\tconst desc: ExtensionDesc = readVersionAndDescriptor(reader);\n\n\t\tif (MOCK_HANDLERS) {\n\t\t\t(target as any)._ext = desc;\n\t\t}\n\t},\n\t(_writer, _target) => {\n\t\t// TODO: need to add correct types for desc fields (resources/src.psd)\n\t\t// if (MOCK_HANDLERS) writeVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'pths',\n\thasKey('pathList'),\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.pathList = []; // TODO: read paths (find example with non-empty list)\n\n\t\tdescriptor;\n\t\t// console.log('pths', descriptor); // TODO: remove this\n\t},\n\t(writer, _target) => {\n\t\tconst descriptor = {\n\t\t\tpathList: [], // TODO: write paths\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'pathsDataClass', descriptor);\n\t},\n);\n\naddHandler(\n\t'lyvr',\n\thasKey('version'),\n\t(reader, target) => target.version = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.version!),\n);\n\naddHandler(\n\t'lrFX',\n\thasKey('effects'),\n\t(reader, target, left) => {\n\t\tif (!target.effects) {\n\t\t\ttarget.effects = readEffects(reader);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteEffects(writer, target.effects!);\n\t},\n);\n\nfunction adjustmentType(type: string) {\n\treturn (target: LayerAdditionalInfo) => !!target.adjustment && target.adjustment.type === type;\n}\n\naddHandler(\n\t'brit',\n\tadjustmentType('brightness/contrast'),\n\t(reader, target, left) => {\n\t\tif (!target.adjustment) { // ignore if got one from CgEd block\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: readInt16(reader),\n\t\t\t\tcontrast: readInt16(reader),\n\t\t\t\tmeanValue: readInt16(reader),\n\t\t\t\tlabColorOnly: !!readUint8(reader),\n\t\t\t\tuseLegacy: true,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BrightnessAdjustment;\n\t\twriteInt16(writer, info.brightness || 0);\n\t\twriteInt16(writer, info.contrast || 0);\n\t\twriteInt16(writer, info.meanValue ?? 127);\n\t\twriteUint8(writer, info.labColorOnly ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\nfunction readLevelsChannel(reader: PsdReader): LevelsAdjustmentChannel {\n\tconst shadowInput = readInt16(reader);\n\tconst highlightInput = readInt16(reader);\n\tconst shadowOutput = readInt16(reader);\n\tconst highlightOutput = readInt16(reader);\n\tconst midtoneInput = readInt16(reader) / 100;\n\treturn { shadowInput, highlightInput, shadowOutput, highlightOutput, midtoneInput };\n}\n\nfunction writeLevelsChannel(writer: PsdWriter, channel: LevelsAdjustmentChannel) {\n\twriteInt16(writer, channel.shadowInput);\n\twriteInt16(writer, channel.highlightInput);\n\twriteInt16(writer, channel.shadowOutput);\n\twriteInt16(writer, channel.highlightOutput);\n\twriteInt16(writer, Math.round(channel.midtoneInput * 100));\n}\n\naddHandler(\n\t'levl',\n\tadjustmentType('levels'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid levl version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'levels',\n\t\t\trgb: readLevelsChannel(reader),\n\t\t\tred: readLevelsChannel(reader),\n\t\t\tgreen: readLevelsChannel(reader),\n\t\t\tblue: readLevelsChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as LevelsAdjustment;\n\t\tconst defaultChannel = {\n\t\t\tshadowInput: 0,\n\t\t\thighlightInput: 255,\n\t\t\tshadowOutput: 0,\n\t\t\thighlightOutput: 255,\n\t\t\tmidtoneInput: 1,\n\t\t};\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteLevelsChannel(writer, info.rgb || defaultChannel);\n\t\twriteLevelsChannel(writer, info.red || defaultChannel);\n\t\twriteLevelsChannel(writer, info.blue || defaultChannel);\n\t\twriteLevelsChannel(writer, info.green || defaultChannel);\n\t\tfor (let i = 0; i < 59; i++) writeLevelsChannel(writer, defaultChannel);\n\t},\n);\n\nfunction readCurveChannel(reader: PsdReader) {\n\tconst nodes = readUint16(reader);\n\tconst channel: CurvesAdjustmentChannel = [];\n\n\tfor (let j = 0; j < nodes; j++) {\n\t\tconst output = readInt16(reader);\n\t\tconst input = readInt16(reader);\n\t\tchannel.push({ input, output });\n\t}\n\n\treturn channel;\n}\n\nfunction writeCurveChannel(writer: PsdWriter, channel: CurvesAdjustmentChannel) {\n\twriteUint16(writer, channel.length);\n\n\tfor (const n of channel) {\n\t\twriteUint16(writer, n.output);\n\t\twriteUint16(writer, n.input);\n\t}\n}\n\naddHandler(\n\t'curv',\n\tadjustmentType('curves'),\n\t(reader, target, left) => {\n\t\treadUint8(reader);\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid curv version');\n\t\treadUint16(reader);\n\t\tconst channels = readUint16(reader);\n\t\tconst info: CurvesAdjustment = { type: 'curves' };\n\n\t\tif (channels & 1) info.rgb = readCurveChannel(reader);\n\t\tif (channels & 2) info.red = readCurveChannel(reader);\n\t\tif (channels & 4) info.green = readCurveChannel(reader);\n\t\tif (channels & 8) info.blue = readCurveChannel(reader);\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\t...info,\n\t\t};\n\n\t\t// ignoring, duplicate information\n\t\t// checkSignature(reader, 'Crv ');\n\n\t\t// const cVersion = readUint16(reader);\n\t\t// readUint16(reader);\n\t\t// const channelCount = readUint16(reader);\n\n\t\t// for (let i = 0; i < channelCount; i++) {\n\t\t// \tconst index = readUint16(reader);\n\t\t// \tconst nodes = readUint16(reader);\n\n\t\t// \tfor (let j = 0; j < nodes; j++) {\n\t\t// \t\tconst output = readInt16(reader);\n\t\t// \t\tconst input = readInt16(reader);\n\t\t// \t}\n\t\t// }\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as CurvesAdjustment;\n\t\tconst { rgb, red, green, blue } = info;\n\t\tlet channels = 0;\n\t\tlet channelCount = 0;\n\n\t\tif (rgb && rgb.length) { channels |= 1; channelCount++; }\n\t\tif (red && red.length) { channels |= 2; channelCount++; }\n\t\tif (green && green.length) { channels |= 4; channelCount++; }\n\t\tif (blue && blue.length) { channels |= 8; channelCount++; }\n\n\t\twriteUint8(writer, 0);\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channels);\n\n\t\tif (rgb && rgb.length) writeCurveChannel(writer, rgb);\n\t\tif (red && red.length) writeCurveChannel(writer, red);\n\t\tif (green && green.length) writeCurveChannel(writer, green);\n\t\tif (blue && blue.length) writeCurveChannel(writer, blue);\n\n\t\twriteSignature(writer, 'Crv ');\n\t\twriteUint16(writer, 4); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channelCount);\n\n\t\tif (rgb && rgb.length) { writeUint16(writer, 0); writeCurveChannel(writer, rgb); }\n\t\tif (red && red.length) { writeUint16(writer, 1); writeCurveChannel(writer, red); }\n\t\tif (green && green.length) { writeUint16(writer, 2); writeCurveChannel(writer, green); }\n\t\tif (blue && blue.length) { writeUint16(writer, 3); writeCurveChannel(writer, blue); }\n\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'expA',\n\tadjustmentType('exposure'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid expA version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'exposure',\n\t\t\texposure: readFloat32(reader),\n\t\t\toffset: readFloat32(reader),\n\t\t\tgamma: readFloat32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ExposureAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteFloat32(writer, info.exposure!);\n\t\twriteFloat32(writer, info.offset!);\n\t\twriteFloat32(writer, info.gamma!);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\ninterface VibranceDescriptor {\n\tvibrance?: number;\n\tStrt?: number;\n}\n\naddHandler(\n\t'vibA',\n\tadjustmentType('vibrance'),\n\t(reader, target, left) => {\n\t\tconst desc: VibranceDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'vibrance' };\n\t\tif (desc.vibrance !== undefined) target.adjustment.vibrance = desc.vibrance;\n\t\tif (desc.Strt !== undefined) target.adjustment.saturation = desc.Strt;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as VibranceAdjustment;\n\t\tconst desc: VibranceDescriptor = {};\n\t\tif (info.vibrance !== undefined) desc.vibrance = info.vibrance;\n\t\tif (info.saturation !== undefined) desc.Strt = info.saturation;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\nfunction readHueChannel(reader: PsdReader): HueSaturationAdjustmentChannel {\n\treturn {\n\t\ta: readInt16(reader),\n\t\tb: readInt16(reader),\n\t\tc: readInt16(reader),\n\t\td: readInt16(reader),\n\t\thue: readInt16(reader),\n\t\tsaturation: readInt16(reader),\n\t\tlightness: readInt16(reader),\n\t};\n}\n\nfunction writeHueChannel(writer: PsdWriter, channel: HueSaturationAdjustmentChannel | undefined) {\n\tconst c = channel || {} as Partial<HueSaturationAdjustmentChannel>;\n\twriteInt16(writer, c.a || 0);\n\twriteInt16(writer, c.b || 0);\n\twriteInt16(writer, c.c || 0);\n\twriteInt16(writer, c.d || 0);\n\twriteInt16(writer, c.hue || 0);\n\twriteInt16(writer, c.saturation || 0);\n\twriteInt16(writer, c.lightness || 0);\n}\n\naddHandler(\n\t'hue2',\n\tadjustmentType('hue/saturation'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid hue2 version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'hue/saturation',\n\t\t\tmaster: readHueChannel(reader),\n\t\t\treds: readHueChannel(reader),\n\t\t\tyellows: readHueChannel(reader),\n\t\t\tgreens: readHueChannel(reader),\n\t\t\tcyans: readHueChannel(reader),\n\t\t\tblues: readHueChannel(reader),\n\t\t\tmagentas: readHueChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as HueSaturationAdjustment;\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteHueChannel(writer, info.master);\n\t\twriteHueChannel(writer, info.reds);\n\t\twriteHueChannel(writer, info.yellows);\n\t\twriteHueChannel(writer, info.greens);\n\t\twriteHueChannel(writer, info.cyans);\n\t\twriteHueChannel(writer, info.blues);\n\t\twriteHueChannel(writer, info.magentas);\n\t},\n);\n\nfunction readColorBalance(reader: PsdReader): ColorBalanceValues {\n\treturn {\n\t\tcyanRed: readInt16(reader),\n\t\tmagentaGreen: readInt16(reader),\n\t\tyellowBlue: readInt16(reader),\n\t};\n}\n\nfunction writeColorBalance(writer: PsdWriter, value: Partial<ColorBalanceValues>) {\n\twriteInt16(writer, value.cyanRed || 0);\n\twriteInt16(writer, value.magentaGreen || 0);\n\twriteInt16(writer, value.yellowBlue || 0);\n}\n\naddHandler(\n\t'blnc',\n\tadjustmentType('color balance'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'color balance',\n\t\t\tshadows: readColorBalance(reader),\n\t\t\tmidtones: readColorBalance(reader),\n\t\t\thighlights: readColorBalance(reader),\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorBalanceAdjustment;\n\t\twriteColorBalance(writer, info.shadows || {});\n\t\twriteColorBalance(writer, info.midtones || {});\n\t\twriteColorBalance(writer, info.highlights || {});\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\ninterface BlackAndWhiteDescriptor {\n\t'Rd  ': number;\n\tYllw: number;\n\t'Grn ': number;\n\t'Cyn ': number;\n\t'Bl  ': number;\n\tMgnt: number;\n\tuseTint: boolean;\n\ttintColor?: DescriptorColor;\n\tbwPresetKind: number;\n\tblackAndWhitePresetFileName: string;\n}\n\naddHandler(\n\t'blwh',\n\tadjustmentType('black & white'),\n\t(reader, target, left) => {\n\t\tconst desc: BlackAndWhiteDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = {\n\t\t\ttype: 'black & white',\n\t\t\treds: desc['Rd  '],\n\t\t\tyellows: desc.Yllw,\n\t\t\tgreens: desc['Grn '],\n\t\t\tcyans: desc['Cyn '],\n\t\t\tblues: desc['Bl  '],\n\t\t\tmagentas: desc.Mgnt,\n\t\t\tuseTint: !!desc.useTint,\n\t\t\tpresetKind: desc.bwPresetKind,\n\t\t\tpresetFileName: desc.blackAndWhitePresetFileName,\n\t\t};\n\n\t\tif (desc.tintColor !== undefined) target.adjustment.tintColor = parseColor(desc.tintColor);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BlackAndWhiteAdjustment;\n\t\tconst desc: BlackAndWhiteDescriptor = {\n\t\t\t'Rd  ': info.reds || 0,\n\t\t\tYllw: info.yellows || 0,\n\t\t\t'Grn ': info.greens || 0,\n\t\t\t'Cyn ': info.cyans || 0,\n\t\t\t'Bl  ': info.blues || 0,\n\t\t\tMgnt: info.magentas || 0,\n\t\t\tuseTint: !!info.useTint,\n\t\t\ttintColor: serializeColor(info.tintColor),\n\t\t\tbwPresetKind: info.presetKind || 0,\n\t\t\tblackAndWhitePresetFileName: info.presetFileName || '',\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'phfl',\n\tadjustmentType('photo filter'),\n\t(reader, target, left) => {\n\t\tconst version = readUint16(reader);\n\t\tif (version !== 2 && version !== 3) throw new Error('Invalid phfl version');\n\n\t\tlet color: Color;\n\n\t\tif (version === 2) {\n\t\t\tcolor = readColor(reader);\n\t\t} else { // version 3\n\t\t\t// TODO: test this, this is probably wrong\n\t\t\tcolor = {\n\t\t\t\tl: readInt32(reader) / 100,\n\t\t\t\ta: readInt32(reader) / 100,\n\t\t\t\tb: readInt32(reader) / 100,\n\t\t\t};\n\t\t}\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'photo filter',\n\t\t\tcolor,\n\t\t\tdensity: readUint32(reader) / 100,\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PhotoFilterAdjustment;\n\t\twriteUint16(writer, 2); // version\n\t\twriteColor(writer, info.color || { l: 0, a: 0, b: 0 });\n\t\twriteUint32(writer, (info.density || 0) * 100);\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\nfunction readMixrChannel(reader: PsdReader): ChannelMixerChannel {\n\tconst red = readInt16(reader);\n\tconst green = readInt16(reader);\n\tconst blue = readInt16(reader);\n\tskipBytes(reader, 2);\n\tconst constant = readInt16(reader);\n\treturn { red, green, blue, constant };\n}\n\nfunction writeMixrChannel(writer: PsdWriter, channel: ChannelMixerChannel | undefined) {\n\tconst c = channel || {} as Partial<ChannelMixerChannel>;\n\twriteInt16(writer, c.red!);\n\twriteInt16(writer, c.green!);\n\twriteInt16(writer, c.blue!);\n\twriteZeros(writer, 2);\n\twriteInt16(writer, c.constant!);\n}\n\naddHandler(\n\t'mixr',\n\tadjustmentType('channel mixer'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid mixr version');\n\n\t\tconst adjustment: ChannelMixerAdjustment = target.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'channel mixer',\n\t\t\tmonochrome: !!readUint16(reader),\n\t\t};\n\n\t\tif (!adjustment.monochrome) {\n\t\t\tadjustment.red = readMixrChannel(reader);\n\t\t\tadjustment.green = readMixrChannel(reader);\n\t\t\tadjustment.blue = readMixrChannel(reader);\n\t\t}\n\n\t\tadjustment.gray = readMixrChannel(reader);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ChannelMixerAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.monochrome ? 1 : 0);\n\n\t\tif (info.monochrome) {\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t\twriteZeros(writer, 3 * 5 * 2);\n\t\t} else {\n\t\t\twriteMixrChannel(writer, info.red);\n\t\t\twriteMixrChannel(writer, info.green);\n\t\t\twriteMixrChannel(writer, info.blue);\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t}\n\t},\n);\n\nconst colorLookupType = createEnum<'3dlut' | 'abstractProfile' | 'deviceLinkProfile'>('colorLookupType', '3DLUT', {\n\t'3dlut': '3DLUT',\n\tabstractProfile: 'abstractProfile',\n\tdeviceLinkProfile: 'deviceLinkProfile',\n});\n\nconst LUTFormatType = createEnum<'look' | 'cube' | '3dl'>('LUTFormatType', 'look', {\n\tlook: 'LUTFormatLOOK',\n\tcube: 'LUTFormatCUBE',\n\t'3dl': 'LUTFormat3DL',\n});\n\nconst colorLookupOrder = createEnum<'rgb' | 'bgr'>('colorLookupOrder', 'rgb', {\n\trgb: 'rgbOrder',\n\tbgr: 'bgrOrder',\n});\n\ninterface ColorLookupDescriptor {\n\tlookupType?: string;\n\t'Nm  '?: string;\n\tDthr?: boolean;\n\tprofile?: Uint8Array;\n\tLUTFormat?: string;\n\tdataOrder?: string;\n\ttableOrder?: string;\n\tLUT3DFileData?: Uint8Array;\n\tLUT3DFileName?: string;\n}\n\naddHandler(\n\t'clrL',\n\tadjustmentType('color lookup'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid clrL version');\n\n\t\tconst desc: ColorLookupDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'color lookup' };\n\t\tconst info = target.adjustment;\n\n\t\tif (desc.lookupType !== undefined) info.lookupType = colorLookupType.decode(desc.lookupType);\n\t\tif (desc['Nm  '] !== undefined) info.name = desc['Nm  '];\n\t\tif (desc.Dthr !== undefined) info.dither = desc.Dthr;\n\t\tif (desc.profile !== undefined) info.profile = desc.profile;\n\t\tif (desc.LUTFormat !== undefined) info.lutFormat = LUTFormatType.decode(desc.LUTFormat);\n\t\tif (desc.dataOrder !== undefined) info.dataOrder = colorLookupOrder.decode(desc.dataOrder);\n\t\tif (desc.tableOrder !== undefined) info.tableOrder = colorLookupOrder.decode(desc.tableOrder);\n\t\tif (desc.LUT3DFileData !== undefined) info.lut3DFileData = desc.LUT3DFileData;\n\t\tif (desc.LUT3DFileName !== undefined) info.lut3DFileName = desc.LUT3DFileName;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorLookupAdjustment;\n\t\tconst desc: ColorLookupDescriptor = {};\n\n\t\tif (info.lookupType !== undefined) desc.lookupType = colorLookupType.encode(info.lookupType);\n\t\tif (info.name !== undefined) desc['Nm  '] = info.name;\n\t\tif (info.dither !== undefined) desc.Dthr = info.dither;\n\t\tif (info.profile !== undefined) desc.profile = info.profile;\n\t\tif (info.lutFormat !== undefined) desc.LUTFormat = LUTFormatType.encode(info.lutFormat);\n\t\tif (info.dataOrder !== undefined) desc.dataOrder = colorLookupOrder.encode(info.dataOrder);\n\t\tif (info.tableOrder !== undefined) desc.tableOrder = colorLookupOrder.encode(info.tableOrder);\n\t\tif (info.lut3DFileData !== undefined) desc.LUT3DFileData = info.lut3DFileData;\n\t\tif (info.lut3DFileName !== undefined) desc.LUT3DFileName = info.lut3DFileName;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'nvrt',\n\tadjustmentType('invert'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = { type: 'invert' };\n\t\tskipBytes(reader, left());\n\t},\n\t() => {\n\t\t// nothing to write here\n\t},\n);\n\naddHandler(\n\t'post',\n\tadjustmentType('posterize'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'posterize',\n\t\t\tlevels: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PosterizeAdjustment;\n\t\twriteUint16(writer, info.levels ?? 4);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'thrs',\n\tadjustmentType('threshold'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'threshold',\n\t\t\tlevel: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ThresholdAdjustment;\n\t\twriteUint16(writer, info.level ?? 128);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\nconst grdmColorModels = ['', '', '', 'rgb', 'hsb', '', 'lab'];\n\naddHandler(\n\t'grdm',\n\tadjustmentType('gradient map'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid grdm version');\n\n\t\tconst info: GradientMapAdjustment = {\n\t\t\ttype: 'gradient map',\n\t\t\tgradientType: 'solid',\n\t\t};\n\n\t\tinfo.reverse = !!readUint8(reader);\n\t\tinfo.dither = !!readUint8(reader);\n\t\tinfo.name = readUnicodeString(reader);\n\t\tinfo.colorStops = [];\n\t\tinfo.opacityStops = [];\n\n\t\tconst stopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < stopsCount; i++) {\n\t\t\tinfo.colorStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\tcolor: readColor(reader),\n\t\t\t});\n\t\t\tskipBytes(reader, 2);\n\t\t}\n\n\t\tconst opacityStopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < opacityStopsCount; i++) {\n\t\t\tinfo.opacityStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\topacity: readUint16(reader) / 0xff,\n\t\t\t});\n\t\t}\n\n\t\tconst expansionCount = readUint16(reader);\n\t\tif (expansionCount !== 2) throw new Error('Invalid grdm expansion count');\n\n\t\tconst interpolation = readUint16(reader);\n\t\tinfo.smoothness = interpolation / 4096;\n\n\t\tconst length = readUint16(reader);\n\t\tif (length !== 32) throw new Error('Invalid grdm length');\n\n\t\tinfo.gradientType = readUint16(reader) ? 'noise' : 'solid';\n\t\tinfo.randomSeed = readUint32(reader);\n\t\tinfo.addTransparency = !!readUint16(reader);\n\t\tinfo.restrictColors = !!readUint16(reader);\n\t\tinfo.roughness = readUint32(reader) / 4096;\n\t\tinfo.colorModel = (grdmColorModels[readUint16(reader)] || 'rgb') as 'rgb' | 'hsb' | 'lab';\n\n\t\tinfo.min = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tinfo.max = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tskipBytes(reader, left());\n\n\t\tfor (const s of info.colorStops) s.location /= interpolation;\n\t\tfor (const s of info.opacityStops) s.location /= interpolation;\n\n\t\ttarget.adjustment = info;\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as GradientMapAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint8(writer, info.reverse ? 1 : 0);\n\t\twriteUint8(writer, info.dither ? 1 : 0);\n\t\twriteUnicodeStringWithPadding(writer, info.name || '');\n\t\twriteUint16(writer, info.colorStops && info.colorStops.length || 0);\n\n\t\tconst interpolation = Math.round((info.smoothness ?? 1) * 4096);\n\n\t\tfor (const s of info.colorStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteColor(writer, s.color);\n\t\t\twriteZeros(writer, 2);\n\t\t}\n\n\t\twriteUint16(writer, info.opacityStops && info.opacityStops.length || 0);\n\n\t\tfor (const s of info.opacityStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteUint16(writer, Math.round(s.opacity * 0xff));\n\t\t}\n\n\t\twriteUint16(writer, 2); // expansion count\n\t\twriteUint16(writer, interpolation);\n\t\twriteUint16(writer, 32); // length\n\t\twriteUint16(writer, info.gradientType === 'noise' ? 1 : 0);\n\t\twriteUint32(writer, info.randomSeed || 0);\n\t\twriteUint16(writer, info.addTransparency ? 1 : 0);\n\t\twriteUint16(writer, info.restrictColors ? 1 : 0);\n\t\twriteUint32(writer, Math.round((info.roughness ?? 1) * 4096));\n\t\tconst colorModel = grdmColorModels.indexOf(info.colorModel ?? 'rgb');\n\t\twriteUint16(writer, colorModel === -1 ? 3 : colorModel);\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.min && info.min[i] || 0) * 0x8000));\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.max && info.max[i] || 0) * 0x8000));\n\n\t\twriteZeros(writer, 4);\n\t},\n);\n\nfunction readSelectiveColors(reader: PsdReader): CMYK {\n\treturn {\n\t\tc: readInt16(reader),\n\t\tm: readInt16(reader),\n\t\ty: readInt16(reader),\n\t\tk: readInt16(reader),\n\t};\n}\n\nfunction writeSelectiveColors(writer: PsdWriter, cmyk: CMYK | undefined) {\n\tconst c = cmyk || {} as Partial<CMYK>;\n\twriteInt16(writer, c.c!);\n\twriteInt16(writer, c.m!);\n\twriteInt16(writer, c.y!);\n\twriteInt16(writer, c.k!);\n}\n\naddHandler(\n\t'selc',\n\tadjustmentType('selective color'),\n\t(reader, target) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid selc version');\n\n\t\tconst mode = readUint16(reader) ? 'absolute' : 'relative';\n\t\tskipBytes(reader, 8);\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'selective color',\n\t\t\tmode,\n\t\t\treds: readSelectiveColors(reader),\n\t\t\tyellows: readSelectiveColors(reader),\n\t\t\tgreens: readSelectiveColors(reader),\n\t\t\tcyans: readSelectiveColors(reader),\n\t\t\tblues: readSelectiveColors(reader),\n\t\t\tmagentas: readSelectiveColors(reader),\n\t\t\twhites: readSelectiveColors(reader),\n\t\t\tneutrals: readSelectiveColors(reader),\n\t\t\tblacks: readSelectiveColors(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as SelectiveColorAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.mode === 'absolute' ? 1 : 0);\n\t\twriteZeros(writer, 8);\n\t\twriteSelectiveColors(writer, info.reds);\n\t\twriteSelectiveColors(writer, info.yellows);\n\t\twriteSelectiveColors(writer, info.greens);\n\t\twriteSelectiveColors(writer, info.cyans);\n\t\twriteSelectiveColors(writer, info.blues);\n\t\twriteSelectiveColors(writer, info.magentas);\n\t\twriteSelectiveColors(writer, info.whites);\n\t\twriteSelectiveColors(writer, info.neutrals);\n\t\twriteSelectiveColors(writer, info.blacks);\n\t},\n);\n\ninterface BrightnessContrastDescriptor {\n\tVrsn: number;\n\tBrgh: number;\n\tCntr: number;\n\tmeans: number;\n\t'Lab ': boolean;\n\tuseLegacy: boolean;\n\tAuto: boolean;\n}\n\ninterface PresetDescriptor {\n\tVrsn: number;\n\tpresetKind: number;\n\tpresetFileName: string;\n}\n\ninterface CurvesPresetDescriptor {\n\tVrsn: number;\n\tcurvesPresetKind: number;\n\tcurvesPresetFileName: string;\n}\n\ninterface MixerPresetDescriptor {\n\tVrsn: number;\n\tmixerPresetKind: number;\n\tmixerPresetFileName: string;\n}\n\naddHandler(\n\t'CgEd',\n\ttarget => {\n\t\tconst a = target.adjustment;\n\n\t\tif (!a) return false;\n\n\t\treturn (a.type === 'brightness/contrast' && !a.useLegacy) ||\n\t\t\t((a.type === 'levels' || a.type === 'curves' || a.type === 'exposure' || a.type === 'channel mixer' ||\n\t\t\t\ta.type === 'hue/saturation') && a.presetFileName !== undefined);\n\t},\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as\n\t\t\tBrightnessContrastDescriptor | PresetDescriptor | CurvesPresetDescriptor | MixerPresetDescriptor;\n\t\tif (desc.Vrsn !== 1) throw new Error('Invalid CgEd version');\n\n\t\t// this section can specify preset file name for other adjustment types\n\t\tif ('presetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as LevelsAdjustment | ExposureAdjustment | HueSaturationAdjustment,\n\t\t\t\tpresetKind: desc.presetKind,\n\t\t\t\tpresetFileName: desc.presetFileName,\n\t\t\t};\n\t\t} else if ('curvesPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.curvesPresetKind,\n\t\t\t\tpresetFileName: desc.curvesPresetFileName,\n\t\t\t};\n\t\t} else if ('mixerPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.mixerPresetKind,\n\t\t\t\tpresetFileName: desc.mixerPresetFileName,\n\t\t\t};\n\t\t} else {\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: desc.Brgh,\n\t\t\t\tcontrast: desc.Cntr,\n\t\t\t\tmeanValue: desc.means,\n\t\t\t\tuseLegacy: !!desc.useLegacy,\n\t\t\t\tlabColorOnly: !!desc['Lab '],\n\t\t\t\tauto: !!desc.Auto,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment!;\n\n\t\tif (info.type === 'levels' || info.type === 'exposure' || info.type === 'hue/saturation') {\n\t\t\tconst desc: PresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tpresetKind: info.presetKind ?? 1,\n\t\t\t\tpresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'curves') {\n\t\t\tconst desc: CurvesPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tcurvesPresetKind: info.presetKind ?? 1,\n\t\t\t\tcurvesPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'channel mixer') {\n\t\t\tconst desc: MixerPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tmixerPresetKind: info.presetKind ?? 1,\n\t\t\t\tmixerPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'brightness/contrast') {\n\t\t\tconst desc: BrightnessContrastDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tBrgh: info.brightness || 0,\n\t\t\t\tCntr: info.contrast || 0,\n\t\t\t\tmeans: info.meanValue ?? 127,\n\t\t\t\t'Lab ': !!info.labColorOnly,\n\t\t\t\tuseLegacy: !!info.useLegacy,\n\t\t\t\tAuto: !!info.auto,\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else {\n\t\t\tthrow new Error('Unhandled CgEd case');\n\t\t}\n\t},\n);\n\naddHandler(\n\t'Txt2',\n\thasKey('engineData'),\n\t(reader, target, left) => {\n\t\tconst data = readBytes(reader, left());\n\t\ttarget.engineData = fromByteArray(data);\n\t\t// const engineData = parseEngineData(data);\n\t\t// console.log(require('util').inspect(engineData, false, 99, true));\n\t\t// require('fs').writeFileSync('resources/engineData2Simple.txt', require('util').inspect(engineData, false, 99, false), 'utf8');\n\t\t// require('fs').writeFileSync('test_data.json', JSON.stringify(ed, null, 2), 'utf8');\n\t},\n\t(writer, target) => {\n\t\tconst buffer = toByteArray(target.engineData!);\n\t\twriteBytes(writer, buffer);\n\t},\n);\n\naddHandler(\n\t'FMsk',\n\thasKey('filterMask'),\n\t(reader, target) => {\n\t\ttarget.filterMask = {\n\t\t\tcolorSpace: readColor(reader),\n\t\t\topacity: readUint16(reader) / 0xff,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteColor(writer, target.filterMask!.colorSpace);\n\t\twriteUint16(writer, clamp(target.filterMask!.opacity ?? 1, 0, 1) * 0xff);\n\t},\n);\n\ninterface ArtdDescriptor {\n\t'Cnt ': number;\n\tautoExpandOffset: { Hrzn: number; Vrtc: number; };\n\torigin: { Hrzn: number; Vrtc: number; };\n\tautoExpandEnabled: boolean;\n\tautoNestEnabled: boolean;\n\tautoPositionEnabled: boolean;\n\tshrinkwrapOnSaveEnabled: boolean;\n\tdocDefaultNewArtboardBackgroundColor: DescriptorColor;\n\tdocDefaultNewArtboardBackgroundType: number;\n}\n\naddHandler(\n\t'artd', // document-wide artboard info\n\ttarget => (target as Psd).artboards !== undefined,\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtdDescriptor;\n\t\t(target as Psd).artboards = {\n\t\t\tcount: desc['Cnt '],\n\t\t\tautoExpandOffset: { horizontal: desc.autoExpandOffset.Hrzn, vertical: desc.autoExpandOffset.Vrtc },\n\t\t\torigin: { horizontal: desc.origin.Hrzn, vertical: desc.origin.Vrtc },\n\t\t\tautoExpandEnabled: desc.autoExpandEnabled,\n\t\t\tautoNestEnabled: desc.autoNestEnabled,\n\t\t\tautoPositionEnabled: desc.autoPositionEnabled,\n\t\t\tshrinkwrapOnSaveEnabled: desc.shrinkwrapOnSaveEnabled,\n\t\t\tdocDefaultNewArtboardBackgroundColor: parseColor(desc.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: desc.docDefaultNewArtboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artb = (target as Psd).artboards!;\n\t\tconst desc: ArtdDescriptor = {\n\t\t\t'Cnt ': artb.count,\n\t\t\tautoExpandOffset: artb.autoExpandOffset ? { Hrzn: artb.autoExpandOffset.horizontal, Vrtc: artb.autoExpandOffset.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\torigin: artb.origin ? { Hrzn: artb.origin.horizontal, Vrtc: artb.origin.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\tautoExpandEnabled: artb.autoExpandEnabled ?? true,\n\t\t\tautoNestEnabled: artb.autoNestEnabled ?? true,\n\t\t\tautoPositionEnabled: artb.autoPositionEnabled ?? true,\n\t\t\tshrinkwrapOnSaveEnabled: artb.shrinkwrapOnSaveEnabled ?? true,\n\t\t\tdocDefaultNewArtboardBackgroundColor: serializeColor(artb.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: artb.docDefaultNewArtboardBackgroundType ?? 1,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc, 'artd');\n\t},\n);\n\naddHandler(\n\t'lfx2',\n\thasKey('effects'),\n\t(reader, target, left, _, options) => {\n\t\tconst log = !!options.logMissingFeatures;\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 0) throw new Error(`Invalid lfx2 version`);\n\n\t\tconst info = readVersionAndDescriptor(reader);\n\n\t\ttarget.effects = {}; // discard if read in 'lrFX' section\n\t\tconst effects = target.effects;\n\n\t\tif (!info.masterFXSwitch) effects.disabled = true;\n\t\tif (info['Scl ']) effects.scale = parsePercent(info['Scl ']);\n\t\tif (info.DrSh) effects.dropShadow = parseEffectObject(info.DrSh, log);\n\t\tif (info.IrSh) effects.innerShadow = parseEffectObject(info.IrSh, log);\n\t\tif (info.OrGl) effects.outerGlow = parseEffectObject(info.OrGl, log);\n\t\tif (info.IrGl) effects.innerGlow = parseEffectObject(info.IrGl, log);\n\t\tif (info.ebbl) effects.bevel = parseEffectObject(info.ebbl, log);\n\t\tif (info.SoFi) effects.solidFill = parseEffectObject(info.SoFi, log);\n\t\tif (info.patternFill) effects.patternOverlay = parseEffectObject(info.patternFill, log);\n\t\tif (info.GrFl) effects.gradientOverlay = parseEffectObject(info.GrFl, log);\n\t\tif (info.ChFX) effects.satin = parseEffectObject(info.ChFX, log);\n\t\tif (info.FrFX) {\n\t\t\teffects.stroke = {\n\t\t\t\tenabled: !!info.FrFX.enab,\n\t\t\t\tposition: FStl.decode(info.FrFX.Styl),\n\t\t\t\tfillType: FrFl.decode(info.FrFX.PntT),\n\t\t\t\tblendMode: BlnM.decode(info.FrFX['Md  ']),\n\t\t\t\topacity: parsePercent(info.FrFX.Opct),\n\t\t\t\tsize: parseUnits(info.FrFX['Sz  ']),\n\t\t\t};\n\n\t\t\tif (info.FrFX['Clr ']) effects.stroke.color = parseColor(info.FrFX['Clr ']);\n\t\t\tif (info.FrFX.Grad) effects.stroke.gradient = parseGradientContent(info.FrFX);\n\t\t\tif (info.FrFX.Ptrn) effects.stroke.pattern = parsePatternContent(info.FrFX);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, _, options) => {\n\t\tconst log = !!options.logMissingFeatures;\n\t\tconst effects = target.effects!;\n\t\tconst info: any = {\n\t\t\tmasterFXSwitch: !effects.disabled,\n\t\t\t'Scl ': unitsPercent(effects.scale ?? 1),\n\t\t};\n\n\t\tif (effects.dropShadow) info.DrSh = serializeEffectObject(effects.dropShadow, 'dropShadow', log);\n\t\tif (effects.innerShadow) info.IrSh = serializeEffectObject(effects.innerShadow, 'innerShadow', log);\n\t\tif (effects.outerGlow) info.OrGl = serializeEffectObject(effects.outerGlow, 'outerGlow', log);\n\t\tif (effects.innerGlow) info.IrGl = serializeEffectObject(effects.innerGlow, 'innerGlow', log);\n\t\tif (effects.bevel) info.ebbl = serializeEffectObject(effects.bevel, 'bevel', log);\n\t\tif (effects.solidFill) info.SoFi = serializeEffectObject(effects.solidFill, 'solidFill', log);\n\t\tif (effects.patternOverlay) info.patternFill = serializeEffectObject(effects.patternOverlay, 'patternOverlay', log);\n\t\tif (effects.gradientOverlay) info.GrFl = serializeEffectObject(effects.gradientOverlay, 'gradientOverlay', log);\n\t\tif (effects.satin) info.ChFX = serializeEffectObject(effects.satin, 'satin', log);\n\n\t\tconst stroke = effects.stroke;\n\n\t\tif (stroke) {\n\t\t\tinfo.FrFX = {\n\t\t\t\tenab: !!stroke.enabled,\n\t\t\t\tStyl: FStl.encode(stroke.position),\n\t\t\t\tPntT: FrFl.encode(stroke.fillType),\n\t\t\t\t'Md  ': BlnM.encode(stroke.blendMode),\n\t\t\t\tOpct: unitsPercent(stroke.opacity),\n\t\t\t\t'Sz  ': unitsValue(stroke.size, 'size'),\n\t\t\t};\n\n\t\t\tif (stroke.color)\n\t\t\t\tinfo.FrFX['Clr '] = serializeColor(stroke.color);\n\t\t\tif (stroke.gradient)\n\t\t\t\tinfo.FrFX = { ...info.FrFX, ...serializeGradientContent(stroke.gradient) };\n\t\t\tif (stroke.pattern)\n\t\t\t\tinfo.FrFX = { ...info.FrFX, ...serializePatternContent(stroke.pattern) };\n\t\t}\n\n\t\twriteUint32(writer, 0); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', info);\n\t},\n);\n\nfunction readLength64(reader: PsdReader) {\n\tif (readUint32(reader)) throw new Error(`Resource size above 4 GB limit at ${reader.offset.toString(16)}`);\n\treturn readUint32(reader);\n}\n\nfunction writeLength64(writer: PsdWriter, length: number) {\n\twriteUint32(writer, 0);\n\twriteUint32(writer, length);\n}\n\n// addHandler(\n// \t'lmfx',\n// \ttarget => !target,\n// \t(reader, _target) => {\n// \t\tconst version = readUint32(reader);\n// \t\tif (version !== 0) throw new Error('Invalid lmfx version');\n\n// \t\tconst descriptor = readVersionAndDescriptor(reader);\n// \t\tconsole.log(require('util').inspect(descriptor, false, 99, true));\n// \t},\n// \t(_writer, _target) => {\n// \t},\n// );\n\ninterface CinfDescriptor {\n\tVrsn: { major: number; minor: number; fix: number; };\n\tpsVersion?: { major: number; minor: number; fix: number; };\n\tdescription: string;\n\treason: string;\n\tEngn: string; // 'Engn.compCore';\n\tenableCompCore: string; // 'enable.feature';\n\tenableCompCoreGPU: string; // 'enable.feature';\n\tcompCoreSupport: string; // 'reason.supported';\n\tcompCoreGPUSupport: string; // 'reason.featureDisabled';\n}\n\naddHandler(\n\t'cinf',\n\thasKey('compositorUsed'),\n\t(reader, target) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as CinfDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\t\ttarget.compositorUsed = {\n\t\t\tdescription: desc.description,\n\t\t\treason: desc.reason,\n\t\t\tengine: desc.Engn.split('.')[1],\n\t\t\tenableCompCore: desc.enableCompCore.split('.')[1],\n\t\t\tenableCompCoreGPU: desc.enableCompCoreGPU.split('.')[1],\n\t\t\tcompCoreSupport: desc.compCoreSupport.split('.')[1],\n\t\t\tcompCoreGPUSupport: desc.compCoreGPUSupport.split('.')[1],\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst cinf = target.compositorUsed!;\n\t\tconst desc: CinfDescriptor = {\n\t\t\tVrsn: { major: 1, minor: 0, fix: 0 },\n\t\t\t// psVersion: { major: 22, minor: 1, fix: 0 }, // TESTING\n\t\t\tdescription: cinf.description,\n\t\t\treason: cinf.reason,\n\t\t\tEngn: `Engn.${cinf.engine}`,\n\t\t\tenableCompCore: `enable.${cinf.enableCompCore}`,\n\t\t\tenableCompCoreGPU: `enable.${cinf.enableCompCoreGPU}`,\n\t\t\tcompCoreSupport: `reason.${cinf.compCoreSupport}`,\n\t\t\tcompCoreGPUSupport: `reason.${cinf.compCoreGPUSupport}`,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\n// descriptor helpers\n\nfunction parseGradient(grad: DesciptorGradient): EffectSolidGradient | EffectNoiseGradient {\n\tif (grad.GrdF === 'GrdF.CstS') {\n\t\tconst samples: number = grad.Intr || 4096;\n\n\t\treturn {\n\t\t\ttype: 'solid',\n\t\t\tname: grad['Nm  '],\n\t\t\tsmoothness: grad.Intr / 4096,\n\t\t\tcolorStops: grad.Clrs.map(s => ({\n\t\t\t\tcolor: parseColor(s['Clr ']),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t\topacityStops: grad.Trns.map(s => ({\n\t\t\t\topacity: parsePercent(s.Opct),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\ttype: 'noise',\n\t\t\tname: grad['Nm  '],\n\t\t\troughness: grad.Smth / 4096,\n\t\t\tcolorModel: ClrS.decode(grad.ClrS),\n\t\t\trandomSeed: grad.RndS,\n\t\t\trestrictColors: !!grad.VctC,\n\t\t\taddTransparency: !!grad.ShTr,\n\t\t\tmin: grad['Mnm '].map(x => x / 100),\n\t\t\tmax: grad['Mxm '].map(x => x / 100),\n\t\t};\n\t}\n}\n\nfunction serializeGradient(grad: EffectSolidGradient | EffectNoiseGradient): DesciptorGradient {\n\tif (grad.type === 'solid') {\n\t\tconst samples = Math.round((grad.smoothness ?? 1) * 4096);\n\n\t\treturn {\n\t\t\t'Nm  ': grad.name,\n\t\t\tGrdF: 'GrdF.CstS',\n\t\t\tIntr: samples,\n\t\t\tClrs: grad.colorStops.map(s => ({\n\t\t\t\t'Clr ': serializeColor(s.color),\n\t\t\t\tType: 'Clry.UsrS',\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t\tTrns: grad.opacityStops.map(s => ({\n\t\t\t\tOpct: unitsPercent(s.opacity),\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tGrdF: 'GrdF.ClNs',\n\t\t\t'Nm  ': grad.name,\n\t\t\tShTr: !!grad.addTransparency,\n\t\t\tVctC: !!grad.restrictColors,\n\t\t\tClrS: ClrS.encode(grad.colorModel),\n\t\t\tRndS: grad.randomSeed || 0,\n\t\t\tSmth: Math.round((grad.roughness ?? 1) * 4096),\n\t\t\t'Mnm ': (grad.min || [0, 0, 0, 0]).map(x => x * 100),\n\t\t\t'Mxm ': (grad.max || [1, 1, 1, 1]).map(x => x * 100),\n\t\t};\n\t}\n}\n\nfunction parseGradientContent(descriptor: DescriptorGradientContent) {\n\tconst result = parseGradient(descriptor.Grad) as (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tresult.style = GrdT.decode(descriptor.Type);\n\tif (descriptor.Dthr !== undefined) result.dither = descriptor.Dthr;\n\tif (descriptor.Rvrs !== undefined) result.reverse = descriptor.Rvrs;\n\tif (descriptor.Angl !== undefined) result.angle = parseAngle(descriptor.Angl);\n\tif (descriptor['Scl '] !== undefined) result.scale = parsePercent(descriptor['Scl ']);\n\tif (descriptor.Algn !== undefined) result.align = descriptor.Algn;\n\tif (descriptor.Ofst !== undefined) {\n\t\tresult.offset = {\n\t\t\tx: parsePercent(descriptor.Ofst.Hrzn),\n\t\t\ty: parsePercent(descriptor.Ofst.Vrtc)\n\t\t};\n\t}\n\treturn result;\n}\n\nfunction parsePatternContent(descriptor: DescriptorPatternContent) {\n\tconst result: EffectPattern & ExtraPatternInfo = {\n\t\tname: descriptor.Ptrn['Nm  '],\n\t\tid: descriptor.Ptrn.Idnt,\n\t};\n\tif (descriptor.Lnkd !== undefined) result.linked = descriptor.Lnkd;\n\tif (descriptor.phase !== undefined) result.phase = { x: descriptor.phase.Hrzn, y: descriptor.phase.Vrtc };\n\treturn result;\n}\n\nfunction parseVectorContent(descriptor: DescriptorVectorContent): VectorContent {\n\tif ('Grad' in descriptor) {\n\t\treturn parseGradientContent(descriptor);\n\t} else if ('Ptrn' in descriptor) {\n\t\treturn { type: 'pattern', ...parsePatternContent(descriptor) };\n\t} else if ('Clr ' in descriptor) {\n\t\treturn { type: 'color', color: parseColor(descriptor['Clr ']) };\n\t} else {\n\t\tthrow new Error('Invalid vector content');\n\t}\n}\n\nfunction serializeGradientContent(content: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo) {\n\tconst result: DescriptorGradientContent = {} as any;\n\tif (content.dither !== undefined) result.Dthr = content.dither;\n\tif (content.reverse !== undefined) result.Rvrs = content.reverse;\n\tif (content.angle !== undefined) result.Angl = unitsAngle(content.angle);\n\tresult.Type = GrdT.encode(content.style);\n\tif (content.align !== undefined) result.Algn = content.align;\n\tif (content.scale !== undefined) result['Scl '] = unitsPercent(content.scale);\n\tif (content.offset) {\n\t\tresult.Ofst = {\n\t\t\tHrzn: unitsPercent(content.offset.x),\n\t\t\tVrtc: unitsPercent(content.offset.y),\n\t\t};\n\t}\n\tresult.Grad = serializeGradient(content);\n\treturn result;\n}\n\nfunction serializePatternContent(content: EffectPattern & ExtraPatternInfo) {\n\tconst result: DescriptorPatternContent = {\n\t\tPtrn: {\n\t\t\t'Nm  ': content.name || '',\n\t\t\tIdnt: content.id || '',\n\t\t}\n\t};\n\tif (content.linked !== undefined) result.Lnkd = !!content.linked;\n\tif (content.phase !== undefined) result.phase = { Hrzn: content.phase.x, Vrtc: content.phase.y };\n\treturn result;\n}\n\nfunction serializeVectorContent(content: VectorContent): { descriptor: DescriptorVectorContent; key: string; } {\n\tif (content.type === 'color') {\n\t\treturn { key: 'SoCo', descriptor: { 'Clr ': serializeColor(content.color) } };\n\t} else if (content.type === 'pattern') {\n\t\treturn { key: 'PtFl', descriptor: serializePatternContent(content) };\n\t} else {\n\t\treturn { key: 'GdFl', descriptor: serializeGradientContent(content) };\n\t}\n}\n\nfunction parseColor(color: DescriptorColor): Color {\n\tif ('H   ' in color) {\n\t\treturn { h: parsePercentOrAngle(color['H   ']), s: color.Strt, b: color.Brgh };\n\t} else if ('Rd  ' in color) {\n\t\treturn { r: color['Rd  '], g: color['Grn '], b: color['Bl  '] };\n\t} else if ('Cyn ' in color) {\n\t\treturn { c: color['Cyn '], m: color.Mgnt, y: color['Ylw '], k: color.Blck };\n\t} else if ('Gry ' in color) {\n\t\treturn { k: color['Gry '] };\n\t} else if ('Lmnc' in color) {\n\t\treturn { l: color.Lmnc, a: color['A   '], b: color['B   '] };\n\t} else {\n\t\tthrow new Error('Unsupported color descriptor');\n\t}\n}\n\nfunction serializeColor(color: Color | undefined): DescriptorColor {\n\tif (!color) {\n\t\treturn { 'Rd  ': 0, 'Grn ': 0, 'Bl  ': 0 };\n\t} else if ('r' in color) {\n\t\treturn { 'Rd  ': color.r || 0, 'Grn ': color.g || 0, 'Bl  ': color.b || 0 };\n\t} else if ('h' in color) {\n\t\treturn { 'H   ': unitsAngle(color.h * 360), Strt: color.s || 0, Brgh: color.b || 0 };\n\t} else if ('c' in color) {\n\t\treturn { 'Cyn ': color.c || 0, Mgnt: color.m || 0, 'Ylw ': color.y || 0, Blck: color.k || 0 };\n\t} else if ('l' in color) {\n\t\treturn { Lmnc: color.l || 0, 'A   ': color.a || 0, 'B   ': color.b || 0 };\n\t} else if ('k' in color) {\n\t\treturn { 'Gry ': color.k };\n\t} else {\n\t\tthrow new Error('Invalid color value');\n\t}\n}\n\ntype AllEffects = LayerEffectShadow & LayerEffectsOuterGlow & LayerEffectStroke &\n\tLayerEffectInnerGlow & LayerEffectBevel & LayerEffectSolidFill &\n\tLayerEffectPatternOverlay & LayerEffectSatin & LayerEffectGradientOverlay;\n\nfunction parseEffectObject(obj: any, reportErrors: boolean) {\n\tconst result: AllEffects = {} as any;\n\n\tfor (const key of Object.keys(obj)) {\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enab': result.enabled = !!val; break;\n\t\t\tcase 'uglg': result.useGlobalLight = !!val; break;\n\t\t\tcase 'AntA': result.antialiased = !!val; break;\n\t\t\tcase 'Algn': result.align = !!val; break;\n\t\t\tcase 'Dthr': result.dither = !!val; break;\n\t\t\tcase 'Invr': result.invert = !!val; break;\n\t\t\tcase 'Rvrs': result.reverse = !!val; break;\n\t\t\tcase 'Clr ': result.color = parseColor(val); break;\n\t\t\tcase 'hglC': result.highlightColor = parseColor(val); break;\n\t\t\tcase 'sdwC': result.shadowColor = parseColor(val); break;\n\t\t\tcase 'Styl': result.position = FStl.decode(val); break;\n\t\t\tcase 'Md  ': result.blendMode = BlnM.decode(val); break;\n\t\t\tcase 'hglM': result.highlightBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'sdwM': result.shadowBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'bvlS': result.style = BESl.decode(val); break;\n\t\t\tcase 'bvlD': result.direction = BESs.decode(val); break;\n\t\t\tcase 'bvlT': result.technique = bvlT.decode(val) as any; break;\n\t\t\tcase 'GlwT': result.technique = BETE.decode(val) as any; break;\n\t\t\tcase 'glwS': result.source = IGSr.decode(val); break;\n\t\t\tcase 'Type': result.type = GrdT.decode(val); break;\n\t\t\tcase 'Opct': result.opacity = parsePercent(val); break;\n\t\t\tcase 'hglO': result.highlightOpacity = parsePercent(val); break;\n\t\t\tcase 'sdwO': result.shadowOpacity = parsePercent(val); break;\n\t\t\tcase 'lagl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Angl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Lald': result.altitude = parseAngle(val); break;\n\t\t\tcase 'Sftn': result.soften = parseUnits(val); break;\n\t\t\tcase 'srgR': result.strength = parsePercent(val); break;\n\t\t\tcase 'blur': result.size = parseUnits(val); break;\n\t\t\tcase 'Nose': result.noise = parsePercent(val); break;\n\t\t\tcase 'Inpr': result.range = parsePercent(val); break;\n\t\t\tcase 'Ckmt': result.choke = parseUnits(val); break;\n\t\t\tcase 'ShdN': result.jitter = parsePercent(val); break;\n\t\t\tcase 'Dstn': result.distance = parseUnits(val); break;\n\t\t\tcase 'Scl ': result.scale = parsePercent(val); break;\n\t\t\tcase 'Ptrn': result.pattern = { name: val['Nm  '], id: val.Idnt }; break;\n\t\t\tcase 'phase': result.phase = { x: val.Hrzn, y: val.Vrtc }; break;\n\t\t\tcase 'Ofst': result.offset = { x: parsePercent(val.Hrzn), y: parsePercent(val.Vrtc) }; break;\n\t\t\tcase 'MpgS':\n\t\t\tcase 'TrnS':\n\t\t\t\tresult.contour = {\n\t\t\t\t\tname: val['Nm  '],\n\t\t\t\t\tcurve: (val['Crv '] as any[]).map(p => ({ x: p.Hrzn, y: p.Vrtc })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'Grad': result.gradient = parseGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss': result[key] = val; break;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}':`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction serializeEffectObject(obj: any, objName: string, reportErrors: boolean) {\n\tconst result: any = {};\n\n\tfor (const objKey of Object.keys(obj)) {\n\t\tconst key: keyof AllEffects = objKey as any;\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enabled': result.enab = !!val; break;\n\t\t\tcase 'useGlobalLight': result.uglg = !!val; break;\n\t\t\tcase 'antialiased': result.AntA = !!val; break;\n\t\t\tcase 'align': result.Algn = !!val; break;\n\t\t\tcase 'dither': result.Dthr = !!val; break;\n\t\t\tcase 'invert': result.Invr = !!val; break;\n\t\t\tcase 'reverse': result.Rvrs = !!val; break;\n\t\t\tcase 'color': result['Clr '] = serializeColor(val); break;\n\t\t\tcase 'highlightColor': result.hglC = serializeColor(val); break;\n\t\t\tcase 'shadowColor': result.sdwC = serializeColor(val); break;\n\t\t\tcase 'position': result.Styl = FStl.encode(val); break;\n\t\t\tcase 'blendMode': result['Md  '] = BlnM.encode(val); break;\n\t\t\tcase 'highlightBlendMode': result.hglM = BlnM.encode(val); break;\n\t\t\tcase 'shadowBlendMode': result.sdwM = BlnM.encode(val); break;\n\t\t\tcase 'style': result.bvlS = BESl.encode(val); break;\n\t\t\tcase 'direction': result.bvlD = BESs.encode(val); break;\n\t\t\tcase 'technique':\n\t\t\t\tif (objName === 'bevel') {\n\t\t\t\t\tresult.bvlT = bvlT.encode(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.GlwT = BETE.encode(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'source': result.glwS = IGSr.encode(val); break;\n\t\t\tcase 'type': result.Type = GrdT.encode(val); break;\n\t\t\tcase 'opacity': result.Opct = unitsPercent(val); break;\n\t\t\tcase 'highlightOpacity': result.hglO = unitsPercent(val); break;\n\t\t\tcase 'shadowOpacity': result.sdwO = unitsPercent(val); break;\n\t\t\tcase 'angle':\n\t\t\t\tif (objName === 'gradientOverlay') {\n\t\t\t\t\tresult.Angl = unitsAngle(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.lagl = unitsAngle(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'altitude': result.Lald = unitsAngle(val); break;\n\t\t\tcase 'soften': result.Sftn = unitsValue(val, key); break;\n\t\t\tcase 'strength': result.srgR = unitsPercent(val); break;\n\t\t\tcase 'size': result.blur = unitsValue(val, key); break;\n\t\t\tcase 'noise': result.Nose = unitsPercent(val); break;\n\t\t\tcase 'range': result.Inpr = unitsPercent(val); break;\n\t\t\tcase 'choke': result.Ckmt = unitsValue(val, key); break;\n\t\t\tcase 'jitter': result.ShdN = unitsPercent(val); break;\n\t\t\tcase 'distance': result.Dstn = unitsValue(val, key); break;\n\t\t\tcase 'scale': result['Scl '] = unitsPercent(val); break;\n\t\t\tcase 'pattern': result.Ptrn = { 'Nm  ': val.name, Idnt: val.id }; break;\n\t\t\tcase 'phase': result.phase = { Hrzn: val.x, Vrtc: val.y }; break;\n\t\t\tcase 'offset': result.Ofst = { Hrzn: unitsPercent(val.x), Vrtc: unitsPercent(val.y) }; break;\n\t\t\tcase 'contour': {\n\t\t\t\tresult[objName === 'satin' ? 'MpgS' : 'TrnS'] = {\n\t\t\t\t\t'Nm  ': (val as EffectContour).name,\n\t\t\t\t\t'Crv ': (val as EffectContour).curve.map(p => ({ Hrzn: p.x, Vrtc: p.y })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'gradient': result.Grad = serializeGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss':\n\t\t\t\tresult[key] = val;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}' value:`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n",null,"import { LayerEffectsInfo, BevelStyle, LayerEffectShadow } from './psd';\nimport { toBlendMode, fromBlendMode } from './helpers';\nimport {\n\tPsdReader, checkSignature, readSignature, skipBytes, readUint16, readUint8,\n\treadUint32, readFixedPoint32, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writeSignature, writeUint16, writeZeros, writeFixedPoint32,\n\twriteUint8, writeUint32, writeColor\n} from './psdWriter';\n\nconst bevelStyles: BevelStyle[] = [\n\tundefined as any, 'outer bevel', 'inner bevel', 'emboss', 'pillow emboss', 'stroke emboss'\n];\n\nfunction readBlendMode(reader: PsdReader) {\n\tcheckSignature(reader, '8BIM');\n\treturn toBlendMode[readSignature(reader)] || 'normal';\n}\n\nfunction writeBlendMode(writer: PsdWriter, mode: string | undefined) {\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, fromBlendMode[mode!] || 'norm');\n}\n\nfunction readFixedPoint8(reader: PsdReader) {\n\treturn readUint8(reader) / 0xff;\n}\n\nfunction writeFixedPoint8(writer: PsdWriter, value: number) {\n\twriteUint8(writer, Math.round(value * 0xff) | 0);\n}\n\nexport function readEffects(reader: PsdReader) {\n\tconst version = readUint16(reader);\n\n\tif (version !== 0)\n\t\tthrow new Error(`Invalid effects layer version: ${version}`);\n\n\tconst effectsCount = readUint16(reader);\n\tconst effects: LayerEffectsInfo = <any>{};\n\n\tfor (let i = 0; i < effectsCount; i++) {\n\t\tcheckSignature(reader, '8BIM');\n\t\tconst type = readSignature(reader);\n\n\t\tswitch (type) {\n\t\t\tcase 'cmnS': { // common state (see See Effects layer, common state info)\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\t\t\t\tconst visible = !!readUint8(reader);\n\t\t\t\tskipBytes(reader, 2);\n\n\t\t\t\tif (size !== 7 || version !== 0 || !visible) throw new Error(`Invalid effects common state`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'dsdw': // drop shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\tcase 'isdw': { // inner shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 41 && blockSize !== 51) throw new Error(`Invalid shadow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid shadow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst distance = readFixedPoint32(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 51) readColor(reader); // native color\n\t\t\t\tconst shadowInfo: LayerEffectShadow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tdistance: { units: 'Pixels', value: distance },\n\t\t\t\t\tangle, color, blendMode, enabled, useGlobalLight, opacity\n\t\t\t\t};\n\n\t\t\t\tif (type === 'dsdw') {\n\t\t\t\t\teffects.dropShadow = shadowInfo;\n\t\t\t\t} else {\n\t\t\t\t\teffects.innerShadow = shadowInfo;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'oglw': { // outer glow (see See Effects layer, outer glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 42) throw new Error(`Invalid outer glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid outer glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 42) readColor(reader); // native color\n\n\t\t\t\teffects.outerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'iglw': { // inner glow (see See Effects layer, inner glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 43) throw new Error(`Invalid inner glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid inner glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\n\t\t\t\tif (blockSize >= 43) {\n\t\t\t\t\treadUint8(reader); // inverted\n\t\t\t\t\treadColor(reader); // native color\n\t\t\t\t}\n\n\t\t\t\teffects.innerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'bevl': { // bevel (see See Effects layer, bevel info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 58 && blockSize !== 78) throw new Error(`Invalid bevel size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid bevel version: ${version}`);\n\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst strength = readFixedPoint32(reader);\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\tconst highlightBlendMode = readBlendMode(reader);\n\t\t\t\tconst shadowBlendMode = readBlendMode(reader);\n\t\t\t\tconst highlightColor = readColor(reader);\n\t\t\t\tconst shadowColor = readColor(reader);\n\t\t\t\tconst style = bevelStyles[readUint8(reader)] || 'inner bevel';\n\t\t\t\tconst highlightOpacity = readFixedPoint8(reader);\n\t\t\t\tconst shadowOpacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst direction = readUint8(reader) ? 'down' : 'up';\n\n\t\t\t\tif (blockSize >= 78) {\n\t\t\t\t\treadColor(reader); // real highlight color\n\t\t\t\t\treadColor(reader); // real shadow color\n\t\t\t\t}\n\n\t\t\t\teffects.bevel = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tangle, strength, highlightBlendMode, shadowBlendMode, highlightColor, shadowColor,\n\t\t\t\t\tstyle, highlightOpacity, shadowOpacity, enabled, useGlobalLight, direction,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'sofi': { // solid fill (Photoshop 7.0) (see See Effects layer, solid fill (added in Photoshop 7.0))\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (size !== 34) throw new Error(`Invalid effects solid fill info size: ${size}`);\n\t\t\t\tif (version !== 2) throw new Error(`Invalid effects solid fill info version: ${version}`);\n\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\treadColor(reader); // native color\n\n\t\t\t\teffects.solidFill = { blendMode, color, opacity, enabled };\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid effect type: '${type}'`);\n\t\t}\n\t}\n\n\treturn effects;\n}\n\nfunction writeShadowInfo(writer: PsdWriter, shadow: LayerEffectShadow) {\n\twriteUint32(writer, 51);\n\twriteUint32(writer, 2);\n\twriteFixedPoint32(writer, shadow.size && shadow.size.value || 0);\n\twriteFixedPoint32(writer, 0); // intensity\n\twriteFixedPoint32(writer, shadow.angle || 0);\n\twriteFixedPoint32(writer, shadow.distance && shadow.distance.value || 0);\n\twriteColor(writer, shadow.color);\n\twriteBlendMode(writer, shadow.blendMode);\n\twriteUint8(writer, shadow.enabled ? 1 : 0);\n\twriteUint8(writer, shadow.useGlobalLight ? 1 : 0);\n\twriteFixedPoint8(writer, shadow.opacity ?? 1);\n\twriteColor(writer, shadow.color); // native color\n}\n\nexport function writeEffects(writer: PsdWriter, effects: LayerEffectsInfo) {\n\twriteUint16(writer, 0);\n\n\tlet count = 1;\n\tif (effects.dropShadow) count++;\n\tif (effects.innerShadow) count++;\n\tif (effects.outerGlow) count++;\n\tif (effects.innerGlow) count++;\n\tif (effects.bevel) count++;\n\tif (effects.solidFill) count++;\n\n\twriteUint16(writer, count);\n\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, 'cmnS');\n\twriteUint32(writer, 7); // size\n\twriteUint32(writer, 0); // version\n\twriteUint8(writer, 1); // visible\n\twriteZeros(writer, 2);\n\n\tif (effects.dropShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'dsdw');\n\t\twriteShadowInfo(writer, effects.dropShadow);\n\t}\n\n\tif (effects.innerShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'isdw');\n\t\twriteShadowInfo(writer, effects.innerShadow);\n\t}\n\n\tif (effects.outerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'oglw');\n\t\twriteUint32(writer, 42);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.outerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, effects.outerGlow.color);\n\t\twriteBlendMode(writer, effects.outerGlow.blendMode);\n\t\twriteUint8(writer, effects.outerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, effects.outerGlow.opacity || 0);\n\t\twriteColor(writer, effects.outerGlow.color);\n\t}\n\n\tif (effects.innerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'iglw');\n\t\twriteUint32(writer, 43);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.innerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, effects.innerGlow.color);\n\t\twriteBlendMode(writer, effects.innerGlow.blendMode);\n\t\twriteUint8(writer, effects.innerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, effects.innerGlow.opacity || 0);\n\t\twriteUint8(writer, 0); // inverted\n\t\twriteColor(writer, effects.innerGlow.color);\n\t}\n\n\tif (effects.bevel) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'bevl');\n\t\twriteUint32(writer, 78);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, effects.bevel.angle || 0);\n\t\twriteFixedPoint32(writer, effects.bevel.strength || 0);\n\t\twriteFixedPoint32(writer, effects.bevel.size?.value || 0);\n\t\twriteBlendMode(writer, effects.bevel.highlightBlendMode);\n\t\twriteBlendMode(writer, effects.bevel.shadowBlendMode);\n\t\twriteColor(writer, effects.bevel.highlightColor);\n\t\twriteColor(writer, effects.bevel.shadowColor);\n\t\tconst style = bevelStyles.indexOf(effects.bevel.style!);\n\t\twriteUint8(writer, style <= 0 ? 1 : style);\n\t\twriteFixedPoint8(writer, effects.bevel.highlightOpacity || 0);\n\t\twriteFixedPoint8(writer, effects.bevel.shadowOpacity || 0);\n\t\twriteUint8(writer, effects.bevel.enabled ? 1 : 0);\n\t\twriteUint8(writer, effects.bevel.useGlobalLight ? 1 : 0);\n\t\twriteUint8(writer, effects.bevel.direction === 'down' ? 1 : 0);\n\t\twriteColor(writer, effects.bevel.highlightColor);\n\t\twriteColor(writer, effects.bevel.shadowColor);\n\t}\n\n\tif (effects.solidFill) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'sofi');\n\t\twriteUint32(writer, 34);\n\t\twriteUint32(writer, 2);\n\t\twriteBlendMode(writer, effects.solidFill.blendMode);\n\t\twriteColor(writer, effects.solidFill.color);\n\t\twriteFixedPoint8(writer, effects.solidFill.opacity || 0);\n\t\twriteUint8(writer, effects.solidFill.enabled ? 1 : 0);\n\t\twriteColor(writer, effects.solidFill.color);\n\t}\n}\n",null,"import {\n\tPsd, Layer, ColorMode, SectionDividerType, LayerAdditionalInfo, ReadOptions, LayerMaskData, Color,\n\tPatternInfo, GlobalLayerMaskInfo\n} from './psd';\nimport {\n\tresetImageData, offsetForChannel, decodeBitmap, PixelData, createCanvas, createImageData,\n\ttoBlendMode, ChannelID, Compression, LayerMaskFlags, MaskParams, ColorSpace\n} from './helpers';\nimport { infoHandlersMap } from './additionalInfo';\nimport { resourceHandlersMap } from './imageResources';\n\ninterface ChannelInfo {\n\tid: ChannelID;\n\tlength: number;\n}\n\nexport const supportedColorModes = [ColorMode.Bitmap, ColorMode.Grayscale, ColorMode.RGB];\nconst colorModes = ['bitmap', 'grayscale', 'indexed', 'RGB', 'CMYK', 'multichannel', 'duotone', 'lab'];\n\nconst RAW_IMAGE_DATA = false;\n\nfunction setupGrayscale(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 0; i < size; i += 4) {\n\t\tdata.data[i + 1] = data.data[i];\n\t\tdata.data[i + 2] = data.data[i];\n\t}\n}\n\nexport interface PsdReader {\n\toffset: number;\n\tview: DataView;\n}\n\nexport function createReader(buffer: ArrayBuffer, offset?: number, length?: number): PsdReader {\n\tconst view = new DataView(buffer, offset, length);\n\treturn { view, offset: 0 };\n}\n\nexport function readUint8(reader: PsdReader) {\n\treader.offset += 1;\n\treturn reader.view.getUint8(reader.offset - 1);\n}\n\nexport function peekUint8(reader: PsdReader) {\n\treturn reader.view.getUint8(reader.offset);\n}\n\nexport function readInt16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getInt16(reader.offset - 2, false);\n}\n\nexport function readUint16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getUint16(reader.offset - 2, false);\n}\n\nexport function readInt32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, false);\n}\n\nexport function readInt32LE(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, true);\n}\n\nexport function readUint32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getUint32(reader.offset - 4, false);\n}\n\nexport function readFloat32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getFloat32(reader.offset - 4, false);\n}\n\nexport function readFloat64(reader: PsdReader) {\n\treader.offset += 8;\n\treturn reader.view.getFloat64(reader.offset - 8, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function readFixedPoint32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 16);\n}\n\n// 32-bit fixed-point number 8.24\nexport function readFixedPointPath32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 24);\n}\n\nexport function readBytes(reader: PsdReader, length: number) {\n\treader.offset += length;\n\treturn new Uint8Array(reader.view.buffer, reader.view.byteOffset + reader.offset - length, length);\n}\n\nexport function readSignature(reader: PsdReader) {\n\treturn readShortString(reader, 4);\n}\n\nexport function readPascalString(reader: PsdReader, padTo: number) {\n\tlet length = readUint8(reader);\n\tconst text = readShortString(reader, length);\n\n\twhile (++length % padTo) {\n\t\tskipBytes(reader, 1);\n\t}\n\n\treturn text;\n}\n\nexport function readUnicodeString(reader: PsdReader) {\n\tconst length = readUint32(reader);\n\treturn readUnicodeStringWithLength(reader, length);\n}\n\nexport function readUnicodeStringWithLength(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\tconst value = readUint16(reader);\n\n\t\tif (value || length > 0) { // remove trailing \\0\n\t\t\ttext += String.fromCharCode(value);\n\t\t}\n\t}\n\n\treturn text;\n}\n\nexport function readAsciiString(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\ttext += String.fromCharCode(readUint8(reader));\n\t}\n\n\treturn text;\n}\n\nexport function skipBytes(reader: PsdReader, count: number) {\n\treader.offset += count;\n}\n\nexport function checkSignature(reader: PsdReader, a: string, b?: string) {\n\tconst offset = reader.offset;\n\tconst signature = readSignature(reader);\n\n\tif (signature !== a && signature !== b) {\n\t\tthrow new Error(`Invalid signature: '${signature}' at 0x${offset.toString(16)}`);\n\t}\n}\n\nfunction readShortString(reader: PsdReader, length: number) {\n\tconst buffer: any = readBytes(reader, length);\n\treturn String.fromCharCode(...buffer);\n}\n\nexport function readPsd(reader: PsdReader, options: ReadOptions = {}) {\n\t// header\n\tcheckSignature(reader, '8BPS');\n\tconst version = readUint16(reader);\n\tif (version !== 1) throw new Error(`Invalid PSD file version: ${version}`);\n\n\tskipBytes(reader, 6);\n\tconst channels = readUint16(reader);\n\tconst height = readUint32(reader);\n\tconst width = readUint32(reader);\n\tconst bitsPerChannel = readUint16(reader);\n\tconst colorMode = readUint16(reader);\n\n\tif (supportedColorModes.indexOf(colorMode) === -1)\n\t\tthrow new Error(`Color mode not supported: ${colorModes[colorMode] ?? colorMode}`);\n\n\tconst psd: Psd = { width, height, channels, bitsPerChannel, colorMode };\n\n\t// color mode data\n\treadSection(reader, 1, left => {\n\t\tif (options.throwForMissingFeatures) throw new Error('Color mode data not supported');\n\t\tskipBytes(reader, left());\n\t});\n\n\t// image resources\n\treadSection(reader, 1, left => {\n\t\twhile (left()) {\n\t\t\tcheckSignature(reader, '8BIM');\n\n\t\t\tconst id = readUint16(reader);\n\t\t\treadPascalString(reader, 2); // name\n\n\t\t\treadSection(reader, 2, left => {\n\t\t\t\tconst handler = resourceHandlersMap[id];\n\t\t\t\tconst skip = id === 1036 && !!options.skipThumbnail;\n\n\t\t\t\tif (!psd.imageResources) {\n\t\t\t\t\tpsd.imageResources = {};\n\t\t\t\t}\n\n\t\t\t\tif (handler && !skip) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandler.read(reader, psd.imageResources, left, options);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (options.throwForMissingFeatures) throw e;\n\t\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// options.logMissingFeatures && console.log(`Unhandled image resource: ${id}`);\n\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// layer and mask info\n\tlet globalAlpha = false;\n\n\treadSection(reader, 1, left => {\n\t\tglobalAlpha = readLayerInfo(reader, psd, options);\n\n\t\t// SAI does not include this section\n\t\tif (left() > 0) {\n\t\t\tconst globalLayerMaskInfo = readGlobalLayerMaskInfo(reader);\n\t\t\tif (globalLayerMaskInfo) psd.globalLayerMaskInfo = globalLayerMaskInfo;\n\t\t} else {\n\t\t\t// revert back to end of section if exceeded section limits\n\t\t\t// options.logMissingFeatures && console.log('reverting to end of section');\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\twhile (left() > 0) {\n\t\t\t// sometimes there are empty bytes here\n\t\t\twhile (left() && peekUint8(reader) === 0) {\n\t\t\t\t// options.logMissingFeatures && console.log('skipping 0 byte');\n\t\t\t\tskipBytes(reader, 1);\n\t\t\t}\n\n\t\t\tif (left() >= 12) {\n\t\t\t\treadAdditionalLayerInfo(reader, psd, psd, options);\n\t\t\t} else {\n\t\t\t\t// options.logMissingFeatures && console.log('skipping leftover bytes', left());\n\t\t\t\tskipBytes(reader, left());\n\t\t\t}\n\t\t}\n\t});\n\n\tconst hasChildren = psd.children && psd.children.length;\n\tconst skipComposite = options.skipCompositeImageData && (options.skipLayerImageData || hasChildren);\n\n\tif (!skipComposite) {\n\t\treadImageData(reader, psd, globalAlpha, options);\n\t}\n\n\treturn psd;\n}\n\nfunction readLayerInfo(reader: PsdReader, psd: Psd, options: ReadOptions) {\n\tlet globalAlpha = false;\n\n\treadSection(reader, 2, left => {\n\t\tlet layerCount = readInt16(reader);\n\n\t\tif (layerCount < 0) {\n\t\t\tglobalAlpha = true;\n\t\t\tlayerCount = -layerCount;\n\t\t}\n\n\t\tconst layers: Layer[] = [];\n\t\tconst layerChannels: ChannelInfo[][] = [];\n\n\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\tconst { layer, channels } = readLayerRecord(reader, psd, options);\n\t\t\tlayers.push(layer);\n\t\t\tlayerChannels.push(channels);\n\t\t}\n\n\t\tif (!options.skipLayerImageData) {\n\t\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\t\treadLayerChannelImageData(reader, psd, layers[i], layerChannels[i], options);\n\t\t\t}\n\t\t}\n\n\t\tskipBytes(reader, left());\n\n\t\tif (!psd.children) psd.children = [];\n\n\t\tconst stack: (Layer | Psd)[] = [psd];\n\n\t\tfor (let i = layers.length - 1; i >= 0; i--) {\n\t\t\tconst l = layers[i];\n\t\t\tconst type = l.sectionDivider ? l.sectionDivider.type : SectionDividerType.Other;\n\n\t\t\tif (type === SectionDividerType.OpenFolder || type === SectionDividerType.ClosedFolder) {\n\t\t\t\tl.opened = type === SectionDividerType.OpenFolder;\n\t\t\t\tl.children = [];\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t\tstack.push(l);\n\t\t\t} else if (type === SectionDividerType.BoundingSectionDivider) {\n\t\t\t\tstack.pop();\n\t\t\t} else {\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn globalAlpha;\n}\n\nfunction readLayerRecord(reader: PsdReader, psd: Psd, options: ReadOptions) {\n\tconst layer: Layer = {};\n\tlayer.top = readInt32(reader);\n\tlayer.left = readInt32(reader);\n\tlayer.bottom = readInt32(reader);\n\tlayer.right = readInt32(reader);\n\n\tconst channelCount = readUint16(reader);\n\tconst channels: ChannelInfo[] = [];\n\n\tfor (let i = 0; i < channelCount; i++) {\n\t\tconst channelID = readInt16(reader) as ChannelID;\n\t\tconst channelLength = readInt32(reader);\n\t\tchannels.push({ id: channelID, length: channelLength });\n\t}\n\n\tcheckSignature(reader, '8BIM');\n\tconst blendMode = readSignature(reader);\n\tif (!toBlendMode[blendMode]) throw new Error(`Invalid blend mode: '${blendMode}'`);\n\tlayer.blendMode = toBlendMode[blendMode];\n\n\tlayer.opacity = readUint8(reader) / 0xff;\n\tlayer.clipping = readUint8(reader) === 1;\n\n\tconst flags = readUint8(reader);\n\tlayer.transparencyProtected = (flags & 0x01) !== 0;\n\tlayer.hidden = (flags & 0x02) !== 0;\n\t// 0x04 - obsolete\n\t// 0x08 - 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t// 0x10 - pixel data irrelevant to appearance of document\n\n\tskipBytes(reader, 1);\n\n\treadSection(reader, 1, left => {\n\t\tconst mask = readLayerMaskData(reader, options);\n\t\tif (mask) layer.mask = mask;\n\n\t\t/*const blendingRanges =*/ readLayerBlendingRanges(reader);\n\t\tlayer.name = readPascalString(reader, 4);\n\n\t\twhile (left()) {\n\t\t\treadAdditionalLayerInfo(reader, layer, psd, options);\n\t\t}\n\t});\n\n\treturn { layer, channels };\n}\n\nfunction readLayerMaskData(reader: PsdReader, options: ReadOptions) {\n\treturn readSection<LayerMaskData | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst mask: LayerMaskData = {};\n\t\tmask.top = readInt32(reader);\n\t\tmask.left = readInt32(reader);\n\t\tmask.bottom = readInt32(reader);\n\t\tmask.right = readInt32(reader);\n\t\tmask.defaultColor = readUint8(reader);\n\n\t\tconst flags = readUint8(reader);\n\t\tmask.positionRelativeToLayer = (flags & LayerMaskFlags.PositionRelativeToLayer) !== 0;\n\t\tmask.disabled = (flags & LayerMaskFlags.LayerMaskDisabled) !== 0;\n\t\tmask.fromVectorData = (flags & LayerMaskFlags.LayerMaskFromRenderingOtherData) !== 0;\n\n\t\tif (flags & LayerMaskFlags.MaskHasParametersAppliedToIt) {\n\t\t\tconst params = readUint8(reader);\n\t\t\tif (params & MaskParams.UserMaskDensity) mask.userMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.UserMaskFeather) mask.userMaskFeather = readFloat64(reader);\n\t\t\tif (params & MaskParams.VectorMaskDensity) mask.vectorMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.VectorMaskFeather) mask.vectorMaskFeather = readFloat64(reader);\n\t\t}\n\n\t\tif (left() > 2) {\n\t\t\toptions.logMissingFeatures && console.log('Unhandled extra mask params');\n\t\t\t// TODO: handle these values\n\t\t\t/*const realFlags =*/ readUint8(reader);\n\t\t\t/*const realUserMaskBackground =*/ readUint8(reader);\n\t\t\t/*const top2 =*/ readInt32(reader);\n\t\t\t/*const left2 =*/ readInt32(reader);\n\t\t\t/*const bottom2 =*/ readInt32(reader);\n\t\t\t/*const right2 =*/ readInt32(reader);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t\treturn mask;\n\t});\n}\n\nfunction readLayerBlendingRanges(reader: PsdReader) {\n\treturn readSection(reader, 1, left => {\n\t\tconst compositeGrayBlendSource = readUint32(reader);\n\t\tconst compositeGraphBlendDestinationRange = readUint32(reader);\n\t\tconst ranges = [];\n\n\t\twhile (left()) {\n\t\t\tconst sourceRange = readUint32(reader);\n\t\t\tconst destRange = readUint32(reader);\n\t\t\tranges.push({ sourceRange, destRange });\n\t\t}\n\n\t\treturn { compositeGrayBlendSource, compositeGraphBlendDestinationRange, ranges };\n\t});\n}\n\nfunction readLayerChannelImageData(reader: PsdReader, psd: Psd, layer: Layer, channels: ChannelInfo[], options: ReadOptions) {\n\tconst layerWidth = (layer.right || 0) - (layer.left || 0);\n\tconst layerHeight = (layer.bottom || 0) - (layer.top || 0);\n\n\tlet imageData: ImageData | undefined;\n\n\tif (layerWidth && layerHeight) {\n\t\timageData = createImageData(layerWidth, layerHeight);\n\t\tresetImageData(imageData);\n\t}\n\n\tif (RAW_IMAGE_DATA) {\n\t\t(layer as any).imageDataRaw = [];\n\t}\n\n\tfor (const channel of channels) {\n\t\tconst compression = readUint16(reader) as Compression;\n\n\t\tif (channel.id === ChannelID.UserMask) {\n\t\t\tconst mask = layer.mask;\n\n\t\t\tif (!mask) throw new Error(`Missing layer mask data`);\n\n\t\t\tconst maskWidth = (mask.right || 0) - (mask.left || 0);\n\t\t\tconst maskHeight = (mask.bottom || 0) - (mask.top || 0);\n\n\t\t\tif (maskWidth && maskHeight) {\n\t\t\t\tconst maskData = createImageData(maskWidth, maskHeight);\n\t\t\t\tresetImageData(maskData);\n\n\t\t\t\tconst start = reader.offset;\n\t\t\t\treadData(reader, maskData, compression, maskWidth, maskHeight, 0);\n\n\t\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t\t(layer as any).maskDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t\t}\n\n\t\t\t\tsetupGrayscale(maskData);\n\n\t\t\t\tif (options.useImageData) {\n\t\t\t\t\tmask.imageData = maskData;\n\t\t\t\t} else {\n\t\t\t\t\tmask.canvas = createCanvas(maskWidth, maskHeight);\n\t\t\t\t\tmask.canvas.getContext('2d')!.putImageData(maskData, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst offset = offsetForChannel(channel.id);\n\t\t\tlet targetData = imageData;\n\n\t\t\tif (offset < 0) {\n\t\t\t\ttargetData = undefined;\n\n\t\t\t\tif (options.throwForMissingFeatures) {\n\t\t\t\t\tthrow new Error(`Channel not supported: ${channel.id}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst start = reader.offset;\n\t\t\treadData(reader, targetData, compression, layerWidth, layerHeight, offset);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(layer as any).imageDataRaw[channel.id] = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\n\t\t\tif (targetData && psd.colorMode === ColorMode.Grayscale) {\n\t\t\t\tsetupGrayscale(targetData);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (imageData) {\n\t\tif (options.useImageData) {\n\t\t\tlayer.imageData = imageData;\n\t\t} else {\n\t\t\tlayer.canvas = createCanvas(layerWidth, layerHeight);\n\t\t\tlayer.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t\t}\n\t}\n}\n\nfunction readData(\n\treader: PsdReader, data: ImageData | undefined, compression: Compression, width: number, height: number,\n\toffset: number\n) {\n\tif (compression === Compression.RawData) {\n\t\treadDataRaw(reader, data, offset, width, height);\n\t} else if (compression === Compression.RleCompressed) {\n\t\treadDataRLE(reader, data, width, height, 4, [offset]);\n\t} else {\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\t}\n}\n\nfunction readGlobalLayerMaskInfo(reader: PsdReader) {\n\treturn readSection<GlobalLayerMaskInfo | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst overlayColorSpace = readUint16(reader);\n\t\tconst colorSpace1 = readUint16(reader);\n\t\tconst colorSpace2 = readUint16(reader);\n\t\tconst colorSpace3 = readUint16(reader);\n\t\tconst colorSpace4 = readUint16(reader);\n\t\tconst opacity = readUint16(reader) / 0xff;\n\t\tconst kind = readUint8(reader);\n\t\tskipBytes(reader, left()); // 3 bytes of padding ?\n\t\treturn { overlayColorSpace, colorSpace1, colorSpace2, colorSpace3, colorSpace4, opacity, kind };\n\t});\n}\n\nfunction readAdditionalLayerInfo(reader: PsdReader, target: LayerAdditionalInfo, psd: Psd, options: ReadOptions) {\n\tcheckSignature(reader, '8BIM', '8B64');\n\tconst key = readSignature(reader);\n\n\treadSection(reader, 2, left => {\n\t\tconst handler = infoHandlersMap[key];\n\n\t\tif (handler) {\n\t\t\ttry {\n\t\t\t\thandler.read(reader, target, left, psd, options);\n\t\t\t} catch (e) {\n\t\t\t\tif (options.throwForMissingFeatures) throw e;\n\t\t\t}\n\t\t} else {\n\t\t\toptions.logMissingFeatures && console.log(`Unhandled additional info: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\tif (left()) {\n\t\t\toptions.logMissingFeatures && console.log(`Unread ${left()} bytes left for tag: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\t}, false);\n}\n\nfunction readImageData(reader: PsdReader, psd: Psd, globalAlpha: boolean, options: ReadOptions) {\n\tconst compression = readUint16(reader) as Compression;\n\n\tif (supportedColorModes.indexOf(psd.colorMode!) === -1)\n\t\tthrow new Error(`Color mode not supported: ${psd.colorMode}`);\n\n\tif (compression !== Compression.RawData && compression !== Compression.RleCompressed)\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\n\tconst imageData = createImageData(psd.width, psd.height);\n\tresetImageData(imageData);\n\n\tif (psd.colorMode === ColorMode.Bitmap) {\n\t\tlet bytes: Uint8Array;\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tbytes = readBytes(reader, Math.ceil(psd.width / 8) * psd.height);\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tbytes = new Uint8Array(psd.width * psd.height);\n\t\t\treadDataRLE(reader, { data: bytes, width: psd.width, height: psd.height }, psd.width, psd.height, 1, [0]);\n\t\t} else {\n\t\t\tthrow new Error(`Bitmap compression not supported: ${compression}`);\n\t\t}\n\n\t\tdecodeBitmap(bytes, imageData.data, psd.width, psd.height);\n\t} else {\n\t\tconst channels = psd.colorMode === ColorMode.Grayscale ? [0] : [0, 1, 2];\n\n\t\tif (psd.channels && psd.channels > 3) {\n\t\t\tfor (let i = 3; i < psd.channels; i++) {\n\t\t\t\t// TODO: store these channels in additional image data\n\t\t\t\tchannels.push(i);\n\t\t\t}\n\t\t} else if (globalAlpha) {\n\t\t\tchannels.push(3);\n\t\t}\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tfor (let i = 0; i < channels.length; i++) {\n\t\t\t\treadDataRaw(reader, imageData, channels[i], psd.width, psd.height);\n\t\t\t}\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tconst start = reader.offset;\n\t\t\treadDataRLE(reader, imageData, psd.width, psd.height, 4, channels);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(psd as any).imageDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\t\t}\n\n\t\tif (psd.colorMode === ColorMode.Grayscale) {\n\t\t\tsetupGrayscale(imageData);\n\t\t}\n\t}\n\n\tif (options.useImageData) {\n\t\tpsd.imageData = imageData;\n\t} else {\n\t\tpsd.canvas = createCanvas(psd.width, psd.height);\n\t\tpsd.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t}\n}\n\nfunction readDataRaw(reader: PsdReader, pixelData: PixelData | undefined, offset: number, width: number, height: number) {\n\tconst size = width * height;\n\tconst buffer = readBytes(reader, size);\n\n\tif (pixelData && offset < 4) {\n\t\tconst data = pixelData.data;\n\n\t\tfor (let i = 0, p = offset | 0; i < size; i++, p = (p + 4) | 0) {\n\t\t\tdata[p] = buffer[i];\n\t\t}\n\t}\n}\n\nexport function readDataRLE(\n\treader: PsdReader, pixelData: PixelData | undefined, _width: number, height: number, step: number, offsets: number[]\n) {\n\tconst lengths = new Uint16Array(offsets.length * height);\n\tconst data = pixelData && pixelData.data;\n\n\tfor (let o = 0, li = 0; o < offsets.length; o++) {\n\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\tlengths[li] = readUint16(reader);\n\t\t}\n\t}\n\n\tfor (let c = 0, li = 0; c < offsets.length; c++) {\n\t\tconst offset = offsets[c] | 0;\n\t\tconst extra = c > 3 || offset > 3;\n\n\t\tif (!data || extra) {\n\t\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\t\tskipBytes(reader, lengths[li]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let y = 0, p = offset | 0; y < height; y++, li++) {\n\t\t\t\tconst length = lengths[li];\n\t\t\t\tconst buffer = readBytes(reader, length);\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet header = buffer[i];\n\n\t\t\t\t\tif (header > 128) {\n\t\t\t\t\t\tconst value = buffer[++i];\n\t\t\t\t\t\theader = (256 - header) | 0;\n\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = value;\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (header < 128) {\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = buffer[++i];\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ignore 128\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\tthrow new Error(`Invalid RLE data: exceeded buffer size ${i}/${length}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function readSection<T>(reader: PsdReader, round: number, func: (left: () => number) => T, skipEmpty = true): T | undefined {\n\tconst length = readInt32(reader);\n\n\tif (length <= 0 && skipEmpty) return undefined;\n\n\tlet end = reader.offset + length;\n\tconst result = func(() => end - reader.offset);\n\n\tif (reader.offset > end)\n\t\tthrow new Error('Exceeded section limits');\n\n\tif (reader.offset !== end)\n\t\tthrow new Error(`Unread section data: ${end - reader.offset} bytes at 0x${reader.offset.toString(16)}`);\n\n\twhile (end % round) end++;\n\n\treader.offset = end;\n\treturn result;\n}\n\nexport function readColor(reader: PsdReader): Color {\n\tconst colorSpace = readUint16(reader) as ColorSpace;\n\n\tswitch (colorSpace) {\n\t\tcase ColorSpace.RGB: {\n\t\t\tconst r = readUint16(reader) / 257;\n\t\t\tconst g = readUint16(reader) / 257;\n\t\t\tconst b = readUint16(reader) / 257;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { r, g, b };\n\t\t}\n\t\tcase ColorSpace.Lab: {\n\t\t\tconst l = readInt16(reader) / 100;\n\t\t\tconst a = readInt16(reader) / 100;\n\t\t\tconst b = readInt16(reader) / 100;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { l, a, b };\n\t\t}\n\t\tcase ColorSpace.CMYK: {\n\t\t\tconst c = readInt16(reader);\n\t\t\tconst m = readInt16(reader);\n\t\t\tconst y = readInt16(reader);\n\t\t\tconst k = readInt16(reader);\n\t\t\treturn { c, m, y, k };\n\t\t}\n\t\tcase ColorSpace.Grayscale: {\n\t\t\tconst k = readInt16(reader);\n\t\t\tskipBytes(reader, 6);\n\t\t\treturn { k };\n\t\t}\n\t\tcase ColorSpace.HSB: {\n\t\t\tconst h = readInt16(reader);\n\t\t\tconst s = readInt16(reader);\n\t\t\tconst b = readInt16(reader);\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { h, s, b };\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error('Invalid color space');\n\t}\n}\n\nexport function readPattern(reader: PsdReader): PatternInfo {\n\treadUint32(reader); // length\n\tconst version = readUint32(reader);\n\tif (version !== 1) throw new Error(`Invalid pattern version: ${version}`);\n\n\tconst colorMode = readUint32(reader) as ColorMode;\n\tconst x = readInt16(reader);\n\tconst y = readInt16(reader);\n\n\t// we only support RGB and grayscale for now\n\tif (colorMode !== ColorMode.RGB && colorMode !== ColorMode.Grayscale) throw new Error('Unsupported pattern color mode');\n\n\tconst name = readUnicodeString(reader);\n\tconst id = readPascalString(reader, 1);\n\n\t// TODO: index color table here (only for indexed color mode, not supported right now)\n\n\t// virtual memory array list\n\tconst version2 = readUint32(reader);\n\tif (version2 !== 3) throw new Error(`Invalid pattern VMAL version: ${version2}`);\n\n\treadUint32(reader); // length\n\tconst top = readUint32(reader);\n\tconst left = readUint32(reader);\n\tconst bottom = readUint32(reader);\n\tconst right = readUint32(reader);\n\tconst channelsCount = readUint32(reader);\n\tconst width = right - left;\n\tconst height = bottom - top;\n\tconst data = new Uint8Array(width * height * 4);\n\n\tfor (let i = 3; i < data.byteLength; i += 4) {\n\t\tdata[i] = 255;\n\t}\n\n\tfor (let i = 0, ch = 0; i < (channelsCount + 2); i++) {\n\t\tconst has = readUint32(reader);\n\n\t\tif (has) {\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst pixelDepth = readUint32(reader);\n\t\t\tconst ctop = readUint32(reader);\n\t\t\tconst cleft = readUint32(reader);\n\t\t\tconst cbottom = readUint32(reader);\n\t\t\tconst cright = readUint32(reader);\n\t\t\tconst pixelDepth2 = readUint16(reader);\n\t\t\tconst compressionMode = readUint8(reader); // 0 - raw, 1 - zip\n\t\t\tconst dataLength = length - (4 + 16 + 2 + 1);\n\t\t\tconst cdata = readBytes(reader, dataLength);\n\n\t\t\tif (pixelDepth !== 8 || pixelDepth2 !== 8) throw new Error('16bit pixel depth not supported in palettes');\n\t\t\tif (compressionMode !== 0) throw new Error('Zip compression not supported in palettes');\n\n\t\t\tconst w = cright - cleft;\n\t\t\tconst h = cbottom - ctop;\n\t\t\tconst ox = cleft - left;\n\t\t\tconst oy = ctop - top;\n\n\t\t\tif (colorMode === ColorMode.RGB && ch < 3) {\n\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\tdata[dst + ch] = cdata[src];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (colorMode === ColorMode.Grayscale && ch < 1) {\n\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\tconst value = cdata[src];\n\t\t\t\t\t\tdata[dst + 0] = value;\n\t\t\t\t\t\tdata[dst + 1] = value;\n\t\t\t\t\t\tdata[dst + 2] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tch++;\n\t\t}\n\t}\n\n\t// TODO: use canvas instead of data ?\n\n\treturn { id, name, x, y, bounds: { x: left, y: top, w: width, h: height }, data };\n}\n",null,"import { toByteArray } from 'base64-js';\nimport { ImageResources, ReadOptions, RenderingIntent } from './psd';\nimport {\n\tPsdReader, readPascalString, readUnicodeString, readUint32, readUint16, readUint8, readFloat64,\n\treadBytes, skipBytes, readFloat32, readInt16, readFixedPoint32, readSignature, checkSignature,\n\treadSection, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writePascalString, writeUnicodeString, writeUint32, writeUint8, writeFloat64, writeUint16,\n\twriteBytes, writeInt16, writeFloat32, writeFixedPoint32, writeUnicodeStringWithPadding, writeColor,\n} from './psdWriter';\nimport { createCanvasFromData, createEnum } from './helpers';\nimport { decodeString, encodeString } from './utf8';\nimport { readVersionAndDescriptor, writeVersionAndDescriptor } from './descriptor';\n\nexport interface ResourceHandler {\n\tkey: number;\n\thas: (target: ImageResources) => boolean;\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void;\n\twrite: (writer: PsdWriter, target: ImageResources) => void;\n}\n\nexport const resourceHandlers: ResourceHandler[] = [];\nexport const resourceHandlersMap: { [key: number]: ResourceHandler } = {};\n\nfunction addHandler(\n\tkey: number,\n\thas: (target: ImageResources) => boolean,\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void,\n\twrite: (writer: PsdWriter, target: ImageResources) => void,\n) {\n\tconst handler: ResourceHandler = { key, has, read, write };\n\tresourceHandlers.push(handler);\n\tresourceHandlersMap[handler.key] = handler;\n}\n\nconst MOCK_HANDLERS = false;\nconst LOG_MOCK_HANDLERS = false;\nconst RESOLUTION_UNITS = [undefined, 'PPI', 'PPCM'];\nconst MEASUREMENT_UNITS = [undefined, 'Inches', 'Centimeters', 'Points', 'Picas', 'Columns'];\nconst hex = '0123456789abcdef';\n\nfunction charToNibble(code: number) {\n\treturn code <= 57 ? code - 48 : code - 87;\n}\n\nfunction byteAt(value: string, index: number) {\n\treturn (charToNibble(value.charCodeAt(index)) << 4) | charToNibble(value.charCodeAt(index + 1));\n}\n\nfunction readUtf8String(reader: PsdReader, length: number) {\n\tconst buffer = readBytes(reader, length);\n\treturn decodeString(buffer);\n}\n\nfunction writeUtf8String(writer: PsdWriter, value: string) {\n\tconst buffer = encodeString(value);\n\twriteBytes(writer, buffer);\n}\n\nMOCK_HANDLERS && addHandler(\n\t1028, // IPTC-NAA record\n\ttarget => (target as any)._ir1028 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1028', left());\n\t\t(target as any)._ir1028 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1028);\n\t},\n);\n\naddHandler(\n\t1061,\n\ttarget => target.captionDigest !== undefined,\n\t(reader, target) => {\n\t\tlet captionDigest = '';\n\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tconst byte = readUint8(reader);\n\t\t\tcaptionDigest += hex[byte >> 4];\n\t\t\tcaptionDigest += hex[byte & 0xf];\n\t\t}\n\n\t\ttarget.captionDigest = captionDigest;\n\t},\n\t(writer, target) => {\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\twriteUint8(writer, byteAt(target.captionDigest!, i * 2));\n\t\t}\n\t},\n);\n\naddHandler(\n\t1060,\n\ttarget => target.xmpMetadata !== undefined,\n\t(reader, target, left) => target.xmpMetadata = readUtf8String(reader, left()),\n\t(writer, target) => writeUtf8String(writer, target.xmpMetadata!),\n);\n\nconst Inte = createEnum<RenderingIntent>('Inte', 'perceptual', {\n\t'perceptual': 'Img ',\n\t'saturation': 'Grp ',\n\t'relative colorimetric': 'Clrm',\n\t'absolute colorimetric': 'AClr',\n});\n\ninterface PrintInformationDescriptor {\n\t'Nm  '?: string;\n\tClrS?: string;\n\tPstS?: boolean;\n\tMpBl?: boolean;\n\tInte?: string;\n\thardProof?: boolean;\n\tprintSixteenBit?: boolean;\n\tprinterName?: string;\n\tprintProofSetup?: {\n\t\tBltn: string;\n\t} | {\n\t\tprofile: string;\n\t\tInte: string;\n\t\tMpBl: boolean;\n\t\tpaperWhite: boolean;\n\t};\n}\n\naddHandler(\n\t1082,\n\ttarget => target.printInformation !== undefined,\n\t(reader, target) => {\n\t\tconst desc: PrintInformationDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.printInformation = {\n\t\t\tprinterName: desc.printerName || '',\n\t\t\trenderingIntent: Inte.decode(desc.Inte ?? 'Inte.Img '),\n\t\t};\n\n\t\tconst info = target.printInformation;\n\n\t\tif (desc.PstS !== undefined) info.printerManagesColors = desc.PstS;\n\t\tif (desc['Nm  '] !== undefined) info.printerProfile = desc['Nm  '];\n\t\tif (desc.MpBl !== undefined) info.blackPointCompensation = desc.MpBl;\n\t\tif (desc.printSixteenBit !== undefined) info.printSixteenBit = desc.printSixteenBit;\n\t\tif (desc.hardProof !== undefined) info.hardProof = desc.hardProof;\n\t\tif (desc.printProofSetup) {\n\t\t\tif ('Bltn' in desc.printProofSetup) {\n\t\t\t\tinfo.proofSetup = { builtin: desc.printProofSetup.Bltn.split('.')[1] };\n\t\t\t} else {\n\t\t\t\tinfo.proofSetup = {\n\t\t\t\t\tprofile: desc.printProofSetup.profile,\n\t\t\t\t\trenderingIntent: Inte.decode(desc.printProofSetup.Inte ?? 'Inte.Img '),\n\t\t\t\t\tblackPointCompensation: !!desc.printProofSetup.MpBl,\n\t\t\t\t\tpaperWhite: !!desc.printProofSetup.paperWhite,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.printInformation!;\n\t\tconst desc: PrintInformationDescriptor = {};\n\n\t\tif (info.printerManagesColors) {\n\t\t\tdesc.PstS = true;\n\t\t} else {\n\t\t\tif (info.hardProof !== undefined) desc.hardProof = !!info.hardProof;\n\t\t\tdesc.ClrS = 'ClrS.RGBC'; // TODO: ???\n\t\t\tdesc['Nm  '] = info.printerProfile ?? 'CIE RGB';\n\t\t}\n\n\t\tdesc.Inte = Inte.encode(info.renderingIntent);\n\n\t\tif (!info.printerManagesColors) desc.MpBl = !!info.blackPointCompensation;\n\n\t\tdesc.printSixteenBit = !!info.printSixteenBit;\n\t\tdesc.printerName = info.printerName || '';\n\n\t\tif (info.proofSetup && 'profile' in info.proofSetup) {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tprofile: info.proofSetup.profile || '',\n\t\t\t\tInte: Inte.encode(info.proofSetup.renderingIntent),\n\t\t\t\tMpBl: !!info.proofSetup.blackPointCompensation,\n\t\t\t\tpaperWhite: !!info.proofSetup.paperWhite,\n\t\t\t};\n\t\t} else {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tBltn: info.proofSetup?.builtin ? `builtinProof.${info.proofSetup.builtin}` : 'builtinProof.proofCMYK',\n\t\t\t};\n\t\t}\n\n\t\twriteVersionAndDescriptor(writer, '', 'printOutput', desc);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1083, // Print style\n\ttarget => (target as any)._ir1083 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1083', left());\n\t\t(target as any)._ir1083 = readBytes(reader, left());\n\n\t\t// TODO:\n\t\t// const desc = readVersionAndDescriptor(reader);\n\t\t// console.log('1083', require('util').inspect(desc, false, 99, true));\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1083);\n\t},\n);\n\naddHandler(\n\t1005,\n\ttarget => target.resolutionInfo !== undefined,\n\t(reader, target) => {\n\t\tconst horizontalResolution = readFixedPoint32(reader);\n\t\tconst horizontalResolutionUnit = readUint16(reader);\n\t\tconst widthUnit = readUint16(reader);\n\t\tconst verticalResolution = readFixedPoint32(reader);\n\t\tconst verticalResolutionUnit = readUint16(reader);\n\t\tconst heightUnit = readUint16(reader);\n\n\t\ttarget.resolutionInfo = {\n\t\t\thorizontalResolution,\n\t\t\thorizontalResolutionUnit: RESOLUTION_UNITS[horizontalResolutionUnit] || 'PPI' as any,\n\t\t\twidthUnit: MEASUREMENT_UNITS[widthUnit] || 'Inches' as any,\n\t\t\tverticalResolution,\n\t\t\tverticalResolutionUnit: RESOLUTION_UNITS[verticalResolutionUnit] || 'PPI' as any,\n\t\t\theightUnit: MEASUREMENT_UNITS[heightUnit] || 'Inches' as any,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.resolutionInfo!;\n\n\t\twriteFixedPoint32(writer, info.horizontalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.horizontalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.widthUnit)));\n\t\twriteFixedPoint32(writer, info.verticalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.verticalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.heightUnit)));\n\t},\n);\n\nconst printScaleStyles = ['centered', 'size to fit', 'user defined'];\n\naddHandler(\n\t1062,\n\ttarget => target.printScale !== undefined,\n\t(reader, target) => {\n\t\ttarget.printScale = {\n\t\t\tstyle: printScaleStyles[readInt16(reader)] as any,\n\t\t\tx: readFloat32(reader),\n\t\t\ty: readFloat32(reader),\n\t\t\tscale: readFloat32(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst { style, x, y, scale } = target.printScale!;\n\t\twriteInt16(writer, Math.max(0, printScaleStyles.indexOf(style!)));\n\t\twriteFloat32(writer, x || 0);\n\t\twriteFloat32(writer, y || 0);\n\t\twriteFloat32(writer, scale || 0);\n\t},\n);\n\naddHandler(\n\t1006,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\tconst value = readPascalString(reader, 1);\n\t\t\ttarget.alphaChannelNames.push(value);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twritePascalString(writer, name, 1);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1045,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.alphaChannelNames.push(readUnicodeString(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twriteUnicodeStringWithPadding(writer, name);\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1077,\n\ttarget => (target as any)._ir1077 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1077', left());\n\t\t(target as any)._ir1077 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1077);\n\t},\n);\n\naddHandler(\n\t1053,\n\ttarget => target.alphaIdentifiers !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaIdentifiers = [];\n\n\t\twhile (left() >= 4) {\n\t\t\ttarget.alphaIdentifiers.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.alphaIdentifiers!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1010,\n\ttarget => target.backgroundColor !== undefined,\n\t(reader, target) => target.backgroundColor = readColor(reader),\n\t(writer, target) => writeColor(writer, target.backgroundColor!),\n);\n\naddHandler(\n\t1037,\n\ttarget => target.globalAngle !== undefined,\n\t(reader, target) => target.globalAngle = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAngle!),\n);\n\naddHandler(\n\t1049,\n\ttarget => target.globalAltitude !== undefined,\n\t(reader, target) => target.globalAltitude = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAltitude!),\n);\n\naddHandler(\n\t1011,\n\ttarget => target.printFlags !== undefined,\n\t(reader, target) => {\n\t\ttarget.printFlags = {\n\t\t\tlabels: !!readUint8(reader),\n\t\t\tcropMarks: !!readUint8(reader),\n\t\t\tcolorBars: !!readUint8(reader),\n\t\t\tregistrationMarks: !!readUint8(reader),\n\t\t\tnegative: !!readUint8(reader),\n\t\t\tflip: !!readUint8(reader),\n\t\t\tinterpolate: !!readUint8(reader),\n\t\t\tcaption: !!readUint8(reader),\n\t\t\tprintFlags: !!readUint8(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst flags = target.printFlags!;\n\t\twriteUint8(writer, flags.labels ? 1 : 0);\n\t\twriteUint8(writer, flags.cropMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.colorBars ? 1 : 0);\n\t\twriteUint8(writer, flags.registrationMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.negative ? 1 : 0);\n\t\twriteUint8(writer, flags.flip ? 1 : 0);\n\t\twriteUint8(writer, flags.interpolate ? 1 : 0);\n\t\twriteUint8(writer, flags.caption ? 1 : 0);\n\t\twriteUint8(writer, flags.printFlags ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t10000, // Print flags\n\ttarget => (target as any)._ir10000 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 10000', left());\n\t\t(target as any)._ir10000 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir10000);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1013, // Color halftoning\n\ttarget => (target as any)._ir1013 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1013', left());\n\t\t(target as any)._ir1013 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1013);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1016, // Color transfer functions\n\ttarget => (target as any)._ir1016 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1016', left());\n\t\t(target as any)._ir1016 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1016);\n\t},\n);\n\naddHandler(\n\t1024,\n\ttarget => target.layerState !== undefined,\n\t(reader, target) => target.layerState = readUint16(reader),\n\t(writer, target) => writeUint16(writer, target.layerState!),\n);\n\naddHandler(\n\t1026,\n\ttarget => target.layersGroup !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layersGroup = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layersGroup.push(readUint16(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const g of target.layersGroup!) {\n\t\t\twriteUint16(writer, g);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1072,\n\ttarget => target.layerGroupsEnabledId !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layerGroupsEnabledId = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layerGroupsEnabledId.push(readUint8(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.layerGroupsEnabledId!) {\n\t\t\twriteUint8(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1069,\n\ttarget => target.layerSelectionIds !== undefined,\n\t(reader, target) => {\n\t\tlet count = readUint16(reader);\n\t\ttarget.layerSelectionIds = [];\n\n\t\twhile (count--) {\n\t\t\ttarget.layerSelectionIds.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint16(writer, target.layerSelectionIds!.length);\n\n\t\tfor (const id of target.layerSelectionIds!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1032,\n\ttarget => target.gridAndGuidesInformation !== undefined,\n\t(reader, target) => {\n\t\tconst version = readUint32(reader);\n\t\tconst horizontal = readUint32(reader);\n\t\tconst vertical = readUint32(reader);\n\t\tconst count = readUint32(reader);\n\n\t\tif (version !== 1) throw new Error(`Invalid 1032 resource version: ${version}`);\n\n\t\ttarget.gridAndGuidesInformation = {\n\t\t\tgrid: { horizontal, vertical },\n\t\t\tguides: [],\n\t\t};\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\ttarget.gridAndGuidesInformation.guides!.push({\n\t\t\t\tlocation: readUint32(reader) / 32,\n\t\t\t\tdirection: readUint8(reader) ? 'horizontal' : 'vertical'\n\t\t\t});\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.gridAndGuidesInformation!;\n\t\tconst grid = info.grid || { horizontal: 18 * 32, vertical: 18 * 32 };\n\t\tconst guides = info.guides || [];\n\n\t\twriteUint32(writer, 1);\n\t\twriteUint32(writer, grid.horizontal);\n\t\twriteUint32(writer, grid.vertical);\n\t\twriteUint32(writer, guides.length);\n\n\t\tfor (const g of guides) {\n\t\t\twriteUint32(writer, g.location * 32);\n\t\t\twriteUint8(writer, g.direction === 'horizontal' ? 1 : 0);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1054,\n\ttarget => target.urlsList !== undefined,\n\t(reader, target, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tif (count) {\n\t\t\tif (!options.throwForMissingFeatures) return;\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\n\t\t// TODO: read actual URL list\n\t\ttarget.urlsList = [];\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.urlsList!.length);\n\n\t\t// TODO: write actual URL list\n\t\tif (target.urlsList!.length) {\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1050, // Slices\n\ttarget => (target as any)._ir1050 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1050', left());\n\t\t(target as any)._ir1050 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1050);\n\t},\n);\n\naddHandler(\n\t1064,\n\ttarget => target.pixelAspectRatio !== undefined,\n\t(reader, target) => {\n\t\tif (readUint32(reader) > 2) throw new Error('Invalid pixelAspectRatio version');\n\t\ttarget.pixelAspectRatio = { aspect: readFloat64(reader) };\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, 2); // version\n\t\twriteFloat64(writer, target.pixelAspectRatio!.aspect);\n\t},\n);\n\naddHandler(\n\t1041,\n\ttarget => target.iccUntaggedProfile !== undefined,\n\t(reader, target) => {\n\t\ttarget.iccUntaggedProfile = !!readUint8(reader);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.iccUntaggedProfile ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1039, // ICC Profile\n\ttarget => (target as any)._ir1039 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1039', left());\n\t\t(target as any)._ir1039 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1039);\n\t},\n);\n\naddHandler(\n\t1044,\n\ttarget => target.idsSeedNumber !== undefined,\n\t(reader, target) => target.idsSeedNumber = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.idsSeedNumber!),\n);\n\naddHandler(\n\t1036,\n\ttarget => target.thumbnail !== undefined || target.thumbnailRaw !== undefined,\n\t(reader, target, left, options) => {\n\t\tconst format = readUint32(reader); // 1 = kJpegRGB, 0 = kRawRGB\n\t\tconst width = readUint32(reader);\n\t\tconst height = readUint32(reader);\n\t\treadUint32(reader); // widthBytes = (width * bits_per_pixel + 31) / 32 * 4.\n\t\treadUint32(reader); // totalSize = widthBytes * height * planes\n\t\treadUint32(reader); // sizeAfterCompression\n\t\tconst bitsPerPixel = readUint16(reader); // 24\n\t\tconst planes = readUint16(reader); // 1\n\n\t\tif (format !== 1 || bitsPerPixel !== 24 || planes !== 1) {\n\t\t\toptions.logMissingFeatures && console.log(`Invalid thumbnail data (format: ${format}, bitsPerPixel: ${bitsPerPixel}, planes: ${planes})`);\n\t\t\tskipBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst size = left();\n\t\tconst data = readBytes(reader, size);\n\n\t\tif (options.useRawThumbnail) {\n\t\t\ttarget.thumbnailRaw = { width, height, data };\n\t\t} else {\n\t\t\ttarget.thumbnail = createCanvasFromData(data);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet data: Uint8Array;\n\n\t\tif (target.thumbnailRaw) {\n\t\t\twidth = target.thumbnailRaw.width;\n\t\t\theight = target.thumbnailRaw.height;\n\t\t\tdata = target.thumbnailRaw.data;\n\t\t} else {\n\t\t\twidth = target.thumbnail!.width;\n\t\t\theight = target.thumbnail!.height;\n\t\t\tdata = toByteArray(target.thumbnail!.toDataURL('image/jpeg', 1).substr('data:image/jpeg;base64,'.length));\n\t\t}\n\n\t\tconst bitsPerPixel = 24;\n\t\tconst widthBytes = Math.floor((width * bitsPerPixel + 31) / 32) * 4;\n\t\tconst planes = 1;\n\t\tconst totalSize = widthBytes * height * planes;\n\t\tconst sizeAfterCompression = data.length;\n\n\t\twriteUint32(writer, 1); // 1 = kJpegRGB\n\t\twriteUint32(writer, width);\n\t\twriteUint32(writer, height);\n\t\twriteUint32(writer, widthBytes);\n\t\twriteUint32(writer, totalSize);\n\t\twriteUint32(writer, sizeAfterCompression);\n\t\twriteUint16(writer, bitsPerPixel);\n\t\twriteUint16(writer, planes);\n\t\twriteBytes(writer, data);\n\t},\n);\n\naddHandler(\n\t1057,\n\ttarget => target.versionInfo !== undefined,\n\t(reader, target, left) => {\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 1) throw new Error('Invalid versionInfo version');\n\n\t\ttarget.versionInfo = {\n\t\t\thasRealMergedData: !!readUint8(reader),\n\t\t\twriterName: readUnicodeString(reader),\n\t\t\treaderName: readUnicodeString(reader),\n\t\t\tfileVersion: readUint32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst versionInfo = target.versionInfo!;\n\t\twriteUint32(writer, 1); // version\n\t\twriteUint8(writer, versionInfo.hasRealMergedData ? 1 : 0);\n\t\twriteUnicodeString(writer, versionInfo.writerName);\n\t\twriteUnicodeString(writer, versionInfo.readerName);\n\t\twriteUint32(writer, versionInfo.fileVersion);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1058, // EXIF data 1.\n\ttarget => (target as any)._ir1058 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1058', left());\n\t\t(target as any)._ir1058 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1058);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1025,\n\ttarget => (target as any)._ir1025 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1025', left());\n\t\t(target as any)._ir1025 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1025);\n\t},\n);\n\nconst FrmD = createEnum<'auto' | 'none' | 'dispose'>('FrmD', '', {\n\tauto: 'Auto',\n\tnone: 'None',\n\tdispose: 'Disp',\n});\n\ninterface AnimationDescriptor {\n\tAFSt: number;\n\tFrIn: {\n\t\tFrID: number;\n\t\tFrDl: number;\n\t\tFrDs: string;\n\t\tFrGA?: number;\n\t}[];\n\tFSts: {\n\t\tFsID: number;\n\t\tAFrm: number;\n\t\tFsFr: number[];\n\t\tLCnt: number;\n\t}[];\n}\n\ninterface Animations {\n\tframes: {\n\t\tid: number;\n\t\tdelay: number;\n\t\tdispose?: 'auto' | 'none' | 'dispose';\n\t}[];\n\tanimations: {\n\t\tid: number;\n\t\tframes: number[];\n\t\trepeats?: number;\n\t}[];\n}\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4000,\n\ttarget => (target as any)._ir4000 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4000', left());\n\t\t\t(target as any)._ir4000 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mani') {\n\t\t\tcheckSignature(reader, 'IRFR');\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\twhile (left()) {\n\t\t\t\t\tcheckSignature(reader, '8BIM');\n\t\t\t\t\tconst key = readSignature(reader);\n\n\t\t\t\t\treadSection(reader, 1, left => {\n\t\t\t\t\t\tif (key === 'AnDs') {\n\t\t\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as AnimationDescriptor;\n\t\t\t\t\t\t\t// console.log('AnDs', desc);\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs', desc);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs', require('util').inspect(desc, false, 99, true));\n\n\t\t\t\t\t\t\tconst result: Animations = {\n\t\t\t\t\t\t\t\t// desc.AFSt ???\n\t\t\t\t\t\t\t\tframes: desc.FrIn.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FrID,\n\t\t\t\t\t\t\t\t\tdelay: x.FrDl / 100,\n\t\t\t\t\t\t\t\t\tdispose: x.FrDs ? FrmD.decode(x.FrDs) : 'auto', // missing == auto\n\t\t\t\t\t\t\t\t\t// x.FrGA ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\tanimations: desc.FSts.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FsID,\n\t\t\t\t\t\t\t\t\tframes: x.FsFr,\n\t\t\t\t\t\t\t\t\trepeats: x.LCnt,\n\t\t\t\t\t\t\t\t\t// x.AFrm ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs:result', result);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs:result', require('util').inspect(result, false, 99, true));\n\t\t\t\t\t\t} else if (key === 'Roll') {\n\t\t\t\t\t\t\tconst bytes = readBytes(reader, left());\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 Roll', bytes);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogMissingFeatures && console.log('Unhandled subsection in #4000', key);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (key === 'mopt') {\n\t\t\tconst bytes = readBytes(reader, left());\n\t\t\tlogDevFeatures && console.log('#4000 mopt', bytes);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4000:', key);\n\t\t\treturn;\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4000);\n\t},\n);\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4001,\n\ttarget => (target as any)._ir4001 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4001', left());\n\t\t\t(target as any)._ir4001 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mfri') {\n\t\t\tconst version = readUint32(reader);\n\t\t\tif (version !== 2) throw new Error('Invalid mfri version');\n\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst bytes = readBytes(reader, length);\n\t\t\tlogDevFeatures && console.log('mfri', bytes);\n\t\t} else if (key === 'mset') {\n\t\t\tconst desc = readVersionAndDescriptor(reader);\n\t\t\tlogDevFeatures && console.log('mset', desc);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4001', key);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4001);\n\t},\n);\n",null,"function charLengthInBytes(code: number): number {\r\n\tif ((code & 0xffffff80) === 0) {\r\n\t\treturn 1;\r\n\t} else if ((code & 0xfffff800) === 0) {\r\n\t\treturn 2;\r\n\t} else if ((code & 0xffff0000) === 0) {\r\n\t\treturn 3;\r\n\t} else {\r\n\t\treturn 4;\r\n\t}\r\n}\r\n\r\nexport function stringLengthInBytes(value: string): number {\r\n\tlet result = 0;\r\n\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tresult += charLengthInBytes(((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult += charLengthInBytes(code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction writeCharacter(buffer: Uint8Array | Buffer, offset: number, code: number): number {\r\n\tconst length = charLengthInBytes(code);\r\n\r\n\tswitch (length) {\r\n\t\tcase 1:\r\n\t\t\tbuffer[offset] = code;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tbuffer[offset] = ((code >> 6) & 0x1f) | 0xc0;\r\n\t\t\tbuffer[offset + 1] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tbuffer[offset] = ((code >> 12) & 0x0f) | 0xe0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbuffer[offset] = ((code >> 18) & 0x07) | 0xf0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 12) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 3] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn length;\r\n}\r\n\r\nexport function encodeStringTo(buffer: Uint8Array | Buffer, offset: number, value: string): number {\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tconst fullCode = ((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n\t\t\t\t\toffset += writeCharacter(buffer, offset, fullCode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toffset += writeCharacter(buffer, offset, code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn offset;\r\n}\r\n\r\nexport function encodeString(value: string): Uint8Array {\r\n\tconst buffer = new Uint8Array(stringLengthInBytes(value));\r\n\tencodeStringTo(buffer, 0, value);\r\n\treturn buffer;\r\n}\r\n\r\nfunction continuationByte(buffer: Uint8Array, index: number): number {\r\n\tif (index >= buffer.length) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tconst continuationByte = buffer[index];\r\n\r\n\tif ((continuationByte & 0xC0) === 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t} else {\r\n\t\tthrow Error('Invalid continuation byte');\r\n\t}\r\n}\r\n\r\nexport function decodeString(value: Uint8Array): string {\r\n\tlet result = '';\r\n\r\n\tfor (let i = 0; i < value.length;) {\r\n\t\tconst byte1 = value[i++];\r\n\t\tlet code: number;\r\n\r\n\t\tif ((byte1 & 0x80) === 0) {\r\n\t\t\tcode = byte1;\r\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x1f) << 6) | byte2;\r\n\r\n\t\t\tif (code < 0x80) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 12) | (byte2 << 6) | byte3;\r\n\r\n\t\t\tif (code < 0x0800) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\r\n\t\t\tif (code >= 0xd800 && code <= 0xdfff) {\r\n\t\t\t\tthrow Error(`Lone surrogate U+${code.toString(16).toUpperCase()} is not a scalar value`);\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tconst byte4 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\r\n\r\n\t\t\tif (code < 0x010000 || code > 0x10ffff) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid UTF-8 detected');\r\n\t\t}\r\n\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tresult += String.fromCharCode(code >>> 10 & 0x3ff | 0xd800);\r\n\t\t\tcode = 0xdc00 | code & 0x3ff;\r\n\t\t}\r\n\r\n\t\tresult += String.fromCharCode(code);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n",null,"import { createEnum } from './helpers';\r\nimport {\r\n\tAntiAlias, BevelDirection, BevelStyle, BevelTechnique, BlendMode, GlowSource, GlowTechnique, GradientStyle,\r\n\tLineAlignment, LineCapType, LineJoinType, Orientation, TextGridding, Units, UnitsValue, WarpStyle\r\n} from './psd';\r\nimport {\r\n\tPsdReader, readSignature, readUnicodeString, readUint32, readUint8, readFloat64,\r\n\treadBytes, readAsciiString, readInt32, readFloat32, readInt32LE, readUnicodeStringWithLength\r\n} from './psdReader';\r\nimport {\r\n\tPsdWriter, writeSignature, writeBytes, writeUint32, writeFloat64, writeUint8,\r\n\twriteUnicodeStringWithPadding, writeInt32, writeFloat32\r\n} from './psdWriter';\r\n\r\ninterface Dict { [key: string]: string; }\r\ninterface NameClassID { name: string; classID: string; }\r\ninterface ExtTypeDict { [key: string]: NameClassID; }\r\n\r\nfunction revMap(map: Dict) {\r\n\tconst result: Dict = {};\r\n\tObject.keys(map).forEach(key => result[map[key]] = key);\r\n\treturn result;\r\n}\r\n\r\nconst unitsMap: Dict = {\r\n\t'#Ang': 'Angle',\r\n\t'#Rsl': 'Density',\r\n\t'#Rlt': 'Distance',\r\n\t'#Nne': 'None',\r\n\t'#Prc': 'Percent',\r\n\t'#Pxl': 'Pixels',\r\n\t'#Mlm': 'Millimeters',\r\n\t'#Pnt': 'Points',\r\n\t'RrPi': 'Picas',\r\n\t'RrIn': 'Inches',\r\n\t'RrCm': 'Centimeters',\r\n};\r\n\r\nconst unitsMapRev = revMap(unitsMap);\r\nlet logErrors = false;\r\n\r\nexport function setLogErrors(value: boolean) {\r\n\tlogErrors = value;\r\n}\r\n\r\nfunction makeType(name: string, classID: string) {\r\n\treturn { name, classID };\r\n}\r\n\r\nconst fieldToExtType: ExtTypeDict = {\r\n\tstrokeStyleContent: makeType('', 'solidColorLayer'),\r\n\t// printProofSetup: makeType('校样设置', 'proofSetup'), // TESTING\r\n\tprintProofSetup: makeType('Proof Setup', 'proofSetup'),\r\n\tpatternFill: makeType('', 'patternFill'),\r\n\tGrad: makeType('Gradient', 'Grdn'),\r\n\tebbl: makeType('', 'ebbl'),\r\n\tSoFi: makeType('', 'SoFi'),\r\n\tGrFl: makeType('', 'GrFl'),\r\n\tsdwC: makeType('', 'RGBC'),\r\n\thglC: makeType('', 'RGBC'),\r\n\t'Clr ': makeType('', 'RGBC'),\r\n\t'tintColor': makeType('', 'RGBC'),\r\n\tOfst: makeType('', 'Pnt '),\r\n\tChFX: makeType('', 'ChFX'),\r\n\tMpgS: makeType('', 'ShpC'),\r\n\tDrSh: makeType('', 'DrSh'),\r\n\tIrSh: makeType('', 'IrSh'),\r\n\tOrGl: makeType('', 'OrGl'),\r\n\tIrGl: makeType('', 'IrGl'),\r\n\tTrnS: makeType('', 'ShpC'),\r\n\tPtrn: makeType('', 'Ptrn'),\r\n\tFrFX: makeType('', 'FrFX'),\r\n\tphase: makeType('', 'Pnt '),\r\n\tframeStep: makeType('', 'null'),\r\n\tduration: makeType('', 'null'),\r\n\tbounds: makeType('', 'Rctn'),\r\n\tcustomEnvelopeWarp: makeType('', 'customEnvelopeWarp'),\r\n\twarp: makeType('', 'warp'),\r\n\t'Sz  ': makeType('', 'Pnt '),\r\n\torigin: makeType('', 'Pnt '),\r\n\tautoExpandOffset: makeType('', 'Pnt '),\r\n\tkeyOriginShapeBBox: makeType('', 'unitRect'),\r\n\tVrsn: makeType('', 'null'),\r\n\tpsVersion: makeType('', 'null'),\r\n\tdocDefaultNewArtboardBackgroundColor: makeType('', 'RGBC'),\r\n\tartboardRect: makeType('', 'classFloatRect'),\r\n\tkeyOriginRRectRadii: makeType('', 'radii'),\r\n\tcompInfo: makeType('', 'null'),\r\n\tgeneratorSettings: makeType('', 'null'),\r\n};\r\n\r\nconst fieldToArrayExtType: ExtTypeDict = {\r\n\t'Crv ': makeType('', 'CrPt'),\r\n\t'Clrs': makeType('', 'Clrt'),\r\n\t'Trns': makeType('', 'TrnS'),\r\n\t'keyDescriptorList': makeType('', 'null'),\r\n};\r\n\r\nconst typeToField: { [key: string]: string[]; } = {\r\n\t'TEXT': [\r\n\t\t'Txt ', 'printerName', 'Nm  ', 'Idnt', 'blackAndWhitePresetFileName', 'LUT3DFileName',\r\n\t\t'presetFileName', 'curvesPresetFileName', 'mixerPresetFileName', 'placed', 'description', 'reason',\r\n\t\t'artboardPresetName',\r\n\t],\r\n\t'tdta': ['EngineData', 'LUT3DFileData'],\r\n\t'long': [\r\n\t\t'TextIndex', 'RndS', 'Mdpn', 'Smth', 'Lctn', 'strokeStyleVersion', 'LaID', 'Vrsn', 'Cnt ',\r\n\t\t'Brgh', 'Cntr', 'means', 'vibrance', 'Strt', 'bwPresetKind', 'presetKind', 'comp', 'compID', 'originalCompID',\r\n\t\t'curvesPresetKind', 'mixerPresetKind', 'uOrder', 'vOrder', 'PgNm', 'totalPages', 'Crop',\r\n\t\t'numerator', 'denominator', 'frameCount', 'Annt', 'keyOriginType', 'unitValueQuadVersion',\r\n\t\t'keyOriginIndex', 'major', 'minor', 'fix', 'docDefaultNewArtboardBackgroundType', 'artboardBackgroundType',\r\n\t],\r\n\t'enum': [\r\n\t\t'textGridding', 'Ornt', 'warpStyle', 'warpRotate', 'Inte', 'Bltn', 'ClrS',\r\n\t\t'sdwM', 'hglM', 'bvlT', 'bvlS', 'bvlD', 'Md  ', 'glwS', 'GrdF', 'GlwT',\r\n\t\t'strokeStyleLineCapType', 'strokeStyleLineJoinType', 'strokeStyleLineAlignment',\r\n\t\t'strokeStyleBlendMode', 'PntT', 'Styl', 'lookupType', 'LUTFormat', 'dataOrder',\r\n\t\t'tableOrder', 'enableCompCore', 'enableCompCoreGPU', 'compCoreSupport', 'compCoreGPUSupport', 'Engn',\r\n\t],\r\n\t'bool': [\r\n\t\t'PstS', 'printSixteenBit', 'masterFXSwitch', 'enab', 'uglg', 'antialiasGloss',\r\n\t\t'useShape', 'useTexture', 'masterFXSwitch', 'uglg', 'antialiasGloss', 'useShape',\r\n\t\t'useTexture', 'Algn', 'Rvrs', 'Dthr', 'Invr', 'VctC', 'ShTr', 'layerConceals',\r\n\t\t'strokeEnabled', 'fillEnabled', 'strokeStyleScaleLock', 'strokeStyleStrokeAdjust',\r\n\t\t'hardProof', 'MpBl', 'paperWhite', 'useLegacy', 'Auto', 'Lab ', 'useTint', 'keyShapeInvalidated',\r\n\t\t'autoExpandEnabled', 'autoNestEnabled', 'autoPositionEnabled', 'shrinkwrapOnSaveEnabled',\r\n\t],\r\n\t'doub': [\r\n\t\t'warpValue', 'warpPerspective', 'warpPerspectiveOther', 'Intr', 'Wdth', 'Hght',\r\n\t\t'strokeStyleMiterLimit', 'strokeStyleResolution', 'layerTime', 'keyOriginResolution',\r\n\t],\r\n\t'UntF': [\r\n\t\t'Scl ', 'sdwO', 'hglO', 'lagl', 'Lald', 'srgR', 'blur', 'Sftn', 'Opct', 'Dstn', 'Angl',\r\n\t\t'Ckmt', 'Nose', 'Inpr', 'ShdN', 'strokeStyleLineWidth', 'strokeStyleLineDashOffset',\r\n\t\t'strokeStyleOpacity', 'H   ', 'Top ', 'Left', 'Btom', 'Rght', 'Rslt',\r\n\t\t'topRight', 'topLeft', 'bottomLeft', 'bottomRight',\r\n\t],\r\n\t'VlLs': [\r\n\t\t'Crv ', 'Clrs', 'Mnm ', 'Mxm ', 'Trns', 'pathList', 'strokeStyleLineDashSet', 'FrLs',\r\n\t\t'LaSt', 'Trnf', 'nonAffineTransform', 'keyDescriptorList', 'guideIndeces',\r\n\t],\r\n\t'ObAr': ['meshPoints'],\r\n};\r\n\r\nconst channels = [\r\n\t'Rd  ', 'Grn ', 'Bl  ', 'Yllw', 'Ylw ', 'Cyn ', 'Mgnt', 'Blck', 'Gry ', 'Lmnc', 'A   ', 'B   ',\r\n];\r\n\r\nconst fieldToArrayType: Dict = {\r\n\t'Mnm ': 'long',\r\n\t'Mxm ': 'long',\r\n\t'FrLs': 'long',\r\n\t'strokeStyleLineDashSet': 'UntF',\r\n\t'Trnf': 'doub',\r\n\t'nonAffineTransform': 'doub',\r\n\t'keyDescriptorList': 'Objc',\r\n};\r\n\r\nconst fieldToType: Dict = {};\r\n\r\nfor (const type of Object.keys(typeToField)) {\r\n\tfor (const field of typeToField[type]) {\r\n\t\tfieldToType[field] = type;\r\n\t}\r\n}\r\n\r\nfor (const field of Object.keys(fieldToExtType)) {\r\n\tfieldToType[field] = 'Objc';\r\n}\r\n\r\nfor (const field of Object.keys(fieldToArrayExtType)) {\r\n\tfieldToArrayType[field] = 'Objc';\r\n}\r\n\r\nfunction getTypeByKey(key: string, value: any, root: string) {\r\n\tif (key === 'Sz  ') {\r\n\t\treturn ('Wdth' in value) ? 'Objc' : (('units' in value) ? 'UntF' : 'doub');\r\n\t} else if (key === 'Type') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'long';\r\n\t} else if (key === 'AntA') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'bool';\r\n\t} else if (key === 'Hrzn' || key === 'Vrtc' || key === 'Top ' || key === 'Left' || key === 'Btom' || key === 'Rght') {\r\n\t\treturn typeof value === 'number' ? 'doub' : 'UntF';\r\n\t} else if (key === 'Vrsn') {\r\n\t\treturn typeof value === 'number' ? 'long' : 'Objc';\r\n\t} else if (key === 'Rd  ' || key === 'Grn ' || key === 'Bl  ') {\r\n\t\treturn root === 'artd' ? 'long' : 'doub';\r\n\t} else {\r\n\t\treturn fieldToType[key];\r\n\t}\r\n}\r\n\r\nexport function readAsciiStringOrClassId(reader: PsdReader) {\r\n\tconst length = readInt32(reader);\r\n\treturn readAsciiString(reader, length || 4);\r\n}\r\n\r\nfunction writeAsciiStringOrClassId(writer: PsdWriter, value: string) {\r\n\tif (value.length === 4 && value !== 'warp') {\r\n\t\t// write classId\r\n\t\twriteInt32(writer, 0);\r\n\t\twriteSignature(writer, value);\r\n\t} else {\r\n\t\t// write ascii string\r\n\t\twriteInt32(writer, value.length);\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twriteUint8(writer, value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function readDescriptorStructure(reader: PsdReader) {\r\n\tconst object: any = {};\r\n\t// object.__struct =\r\n\treadClassStructure(reader);\r\n\tconst itemsCount = readUint32(reader);\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst key = readAsciiStringOrClassId(reader);\r\n\t\tconst type = readSignature(reader);\r\n\t\t// console.log(`> '${key}' '${type}'`);\r\n\t\tconst data = readOSType(reader, type);\r\n\t\t// if (!getTypeByKey(key, data)) console.log(`> '${key}' '${type}'`, data);\r\n\t\tobject[key] = data;\r\n\t}\r\n\t// console.log('//', struct);\r\n\treturn object;\r\n}\r\n\r\nexport function writeDescriptorStructure(writer: PsdWriter, name: string, classId: string, value: any, root: string) {\r\n\tif (logErrors && !classId) console.log('Missing classId for: ', name, classId, value);\r\n\r\n\t// write class structure\r\n\twriteUnicodeStringWithPadding(writer, name);\r\n\twriteAsciiStringOrClassId(writer, classId);\r\n\r\n\tconst keys = Object.keys(value);\r\n\twriteUint32(writer, keys.length);\r\n\r\n\tfor (const key of keys) {\r\n\t\tlet type = getTypeByKey(key, value[key], root);\r\n\t\tlet extType = fieldToExtType[key];\r\n\r\n\t\tif ((key === 'Strt' || key === 'Brgh') && 'H   ' in value) {\r\n\t\t\ttype = 'doub';\r\n\t\t} else if (channels.indexOf(key) !== -1) {\r\n\t\t\ttype = (classId === 'RGBC' && root !== 'artd') ? 'doub' : 'long';\r\n\t\t} else if (key === 'profile') {\r\n\t\t\ttype = classId === 'printOutput' ? 'TEXT' : 'tdta';\r\n\t\t} else if (key === 'strokeStyleContent') {\r\n\t\t\tif (value[key]['Clr ']) {\r\n\t\t\t\textType = makeType('', 'solidColorLayer');\r\n\t\t\t} else if (value[key].Grad) {\r\n\t\t\t\textType = makeType('', 'gradientLayer');\r\n\t\t\t} else if (value[key].Ptrn) {\r\n\t\t\t\textType = makeType('', 'patternLayer');\r\n\t\t\t} else {\r\n\t\t\t\tlogErrors && console.log('Invalid strokeStyleContent value', value[key]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (extType && extType.classID === 'RGBC') {\r\n\t\t\tif ('H   ' in value[key]) extType = { classID: 'HSBC', name: '' };\r\n\t\t\t// TODO: other color spaces\r\n\t\t}\r\n\r\n\t\twriteAsciiStringOrClassId(writer, key);\r\n\t\twriteSignature(writer, type || 'long');\r\n\t\twriteOSType(writer, type || 'long', value[key], key, extType, root);\r\n\t\tif (logErrors && !type) console.log(`Missing descriptor field type for: '${key}' in`, value);\r\n\t}\r\n}\r\n\r\nfunction readOSType(reader: PsdReader, type: string) {\r\n\tswitch (type) {\r\n\t\tcase 'obj ': // Reference\r\n\t\t\treturn readReferenceStructure(reader);\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\treturn readDescriptorStructure(reader);\r\n\t\tcase 'VlLs': { // List\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type = readSignature(reader);\r\n\t\t\t\t// console.log('  >', type);\r\n\t\t\t\titems.push(readOSType(reader, type));\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'doub': // Double\r\n\t\t\treturn readFloat64(reader);\r\n\t\tcase 'UntF': { // Unit double\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat64(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'UnFl': { // Unit float\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat32(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'TEXT': // String\r\n\t\t\treturn readUnicodeString(reader);\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst type = readAsciiStringOrClassId(reader);\r\n\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\treturn `${type}.${value}`;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\treturn readInt32(reader);\r\n\t\tcase 'comp': { // Large Integer\r\n\t\t\tconst low = readUint32(reader);\r\n\t\t\tconst high = readUint32(reader);\r\n\t\t\treturn { low, high };\r\n\t\t}\r\n\t\tcase 'bool': // Boolean\r\n\t\t\treturn !!readUint8(reader);\r\n\t\tcase 'type': // Class\r\n\t\tcase 'GlbC': // Class\r\n\t\t\treturn readClassStructure(reader);\r\n\t\tcase 'alis': { // Alias\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readAsciiString(reader, length);\r\n\t\t}\r\n\t\tcase 'tdta': { // Raw Data\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readBytes(reader, length);\r\n\t\t}\r\n\t\tcase 'ObAr': { // Object array\r\n\t\t\treadInt32(reader); // version: 16\r\n\t\t\treadUnicodeString(reader); // name: ''\r\n\t\t\treadAsciiStringOrClassId(reader); // 'rationalPoint'\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type1 = readAsciiStringOrClassId(reader); // type Hrzn | Vrtc\r\n\t\t\t\treadSignature(reader); // UnFl\r\n\r\n\t\t\t\treadSignature(reader); // units ? '#Pxl'\r\n\t\t\t\tconst valuesCount = readInt32(reader);\r\n\t\t\t\tconst values: number[] = [];\r\n\t\t\t\tfor (let j = 0; j < valuesCount; j++) {\r\n\t\t\t\t\tvalues.push(readFloat64(reader));\r\n\t\t\t\t}\r\n\r\n\t\t\t\titems.push({ type: type1, values });\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'Pth ': { // File path\r\n\t\t\t/*const length =*/ readInt32(reader);\r\n\t\t\tconst sig = readSignature(reader);\r\n\t\t\t/*const pathSize =*/ readInt32LE(reader);\r\n\t\t\tconst charsCount = readInt32LE(reader);\r\n\t\t\tconst path = readUnicodeStringWithLength(reader, charsCount);\r\n\t\t\treturn { sig, path };\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Invalid TySh descriptor OSType: ${type} at ${reader.offset.toString(16)}`);\r\n\t}\r\n}\r\n\r\nfunction writeOSType(writer: PsdWriter, type: string, value: any, key: string, extType: NameClassID | undefined, root: string) {\r\n\tswitch (type) {\r\n\t\t// case 'obj ': // Reference\r\n\t\t// \twriteReferenceStructure(reader);\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\tif (!extType) throw new Error(`Missing ext type for: '${key}' (${JSON.stringify(value)})`);\r\n\t\t\twriteDescriptorStructure(writer, extType.name, extType.classID, value, root);\r\n\t\t\tbreak;\r\n\t\tcase 'VlLs': // List\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\tconst type = fieldToArrayType[key];\r\n\t\t\t\twriteSignature(writer, type || 'long');\r\n\t\t\t\twriteOSType(writer, type || 'long', value[i], '', fieldToArrayExtType[key], root);\r\n\t\t\t\tif (logErrors && !type) console.log(`Missing descriptor array type for: '${key}' in`, value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'doub': // Double\r\n\t\t\twriteFloat64(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'UntF': // Unit double\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat64(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'UnFl': // Unit float\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat32(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'TEXT': // String\r\n\t\t\twriteUnicodeStringWithPadding(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst [_type, val] = value.split('.');\r\n\t\t\twriteAsciiStringOrClassId(writer, _type);\r\n\t\t\twriteAsciiStringOrClassId(writer, val);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\twriteInt32(writer, value);\r\n\t\t\tbreak;\r\n\t\t// case 'comp': // Large Integer\r\n\t\t// \twriteLargeInteger(reader);\r\n\t\tcase 'bool': // Boolean\r\n\t\t\twriteUint8(writer, value ? 1 : 0);\r\n\t\t\tbreak;\r\n\t\t// case 'type': // Class\r\n\t\t// case 'GlbC': // Class\r\n\t\t// \twriteClassStructure(reader);\r\n\t\t// case 'alis': // Alias\r\n\t\t// \twriteAliasStructure(reader);\r\n\t\tcase 'tdta': // Raw Data\r\n\t\t\twriteInt32(writer, value.byteLength);\r\n\t\t\twriteBytes(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'ObAr': // Object array\r\n\t\t\twriteInt32(writer, 16); // version\r\n\t\t\twriteUnicodeStringWithPadding(writer, ''); // name\r\n\t\t\twriteAsciiStringOrClassId(writer, 'rationalPoint');\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\twriteAsciiStringOrClassId(writer, value[i].type); // Hrzn | Vrtc\r\n\t\t\t\twriteSignature(writer, 'UnFl');\r\n\t\t\t\twriteSignature(writer, '#Pxl');\r\n\t\t\t\twriteInt32(writer, value[i].values.length);\r\n\r\n\t\t\t\tfor (let j = 0; j < value[i].values.length; j++) {\r\n\t\t\t\t\twriteFloat64(writer, value[i].values[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t// case 'Pth ': // File path\r\n\t\t// \twriteFilePath(reader);\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Not implemented TySh descriptor OSType: ${type}`);\r\n\t}\r\n}\r\n\r\nfunction readReferenceStructure(reader: PsdReader) {\r\n\tconst itemsCount = readInt32(reader);\r\n\tconst items: any[] = [];\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst type = readSignature(reader);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'prop': { // Property\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst keyID = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push({ name, classID, keyID });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Clss': // Class\r\n\t\t\t\titems.push(readClassStructure(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Enmr': { // Enumerated Reference\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst TypeID = readAsciiStringOrClassId(reader);\r\n\t\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push({ name, classID, TypeID, value });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'rele': { // Offset\r\n\t\t\t\tconst { name, classID } = readClassStructure(reader);\r\n\t\t\t\tconst value = readUint32(reader);\r\n\t\t\t\titems.push({ name, classID, value });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Idnt': // Identifier\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'indx': // Index\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'name': // Name\r\n\t\t\t\titems.push(readUnicodeString(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid TySh descriptor Reference type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn items;\r\n}\r\n\r\nfunction readClassStructure(reader: PsdReader) {\r\n\tconst name = readUnicodeString(reader);\r\n\tconst classID = readAsciiStringOrClassId(reader);\r\n\t// console.log({ name, classID });\r\n\treturn { name, classID };\r\n}\r\n\r\nexport function readVersionAndDescriptor(reader: PsdReader) {\r\n\tif (readUint32(reader) !== 16) throw new Error('Invalid descriptor version');\r\n\treturn readDescriptorStructure(reader);\r\n}\r\n\r\nexport function writeVersionAndDescriptor(writer: PsdWriter, name: string, classID: string, descriptor: any, root = '') {\r\n\twriteUint32(writer, 16); // version\r\n\twriteDescriptorStructure(writer, name, classID, descriptor, root);\r\n}\r\n\r\nexport type DescriptorUnits = 'Angle' | 'Density' | 'Distance' | 'None' | 'Percent' | 'Pixels' |\r\n\t'Millimeters' | 'Points' | 'Picas' | 'Inches' | 'Centimeters';\r\n\r\nexport interface DescriptorUnitsValue {\r\n\tunits: DescriptorUnits;\r\n\tvalue: number;\r\n}\r\n\r\nexport type DescriptorColor = {\r\n\t'Rd  ': number;\r\n\t'Grn ': number;\r\n\t'Bl  ': number;\r\n} | {\r\n\t'H   ': DescriptorUnitsValue;\r\n\tStrt: number;\r\n\tBrgh: number;\r\n} | {\r\n\t'Cyn ': number;\r\n\tMgnt: number;\r\n\t'Ylw ': number;\r\n\tBlck: number;\r\n} | {\r\n\t'Gry ': number;\r\n} | {\r\n\tLmnc: number;\r\n\t'A   ': number;\r\n\t'B   ': number;\r\n};\r\n\r\nexport interface DesciptorPattern {\r\n\t'Nm  ': string;\r\n\tIdnt: string;\r\n}\r\n\r\nexport type DesciptorGradient = {\r\n\t'Nm  ': string;\r\n\tGrdF: 'GrdF.CstS';\r\n\tIntr: number;\r\n\tClrs: {\r\n\t\t'Clr ': DescriptorColor;\r\n\t\tType: 'Clry.UsrS';\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n\tTrns: {\r\n\t\tOpct: DescriptorUnitsValue;\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n} | {\r\n\tGrdF: 'GrdF.ClNs';\r\n\tSmth: number;\r\n\t'Nm  ': string;\r\n\tClrS: string;\r\n\tRndS: number;\r\n\tVctC?: boolean;\r\n\tShTr?: boolean;\r\n\t'Mnm ': number[];\r\n\t'Mxm ': number[];\r\n};\r\n\r\nexport interface DescriptorColorContent {\r\n\t'Clr ': DescriptorColor;\r\n}\r\n\r\nexport interface DescriptorGradientContent {\r\n\tGrad: DesciptorGradient;\r\n\tType: string;\r\n\tDthr?: boolean;\r\n\tRvrs?: boolean;\r\n\tAngl?: DescriptorUnitsValue;\r\n\t'Scl '?: DescriptorUnitsValue;\r\n\tAlgn?: boolean;\r\n\tOfst?: { Hrzn: DescriptorUnitsValue; Vrtc: DescriptorUnitsValue; };\r\n}\r\n\r\nexport interface DescriptorPatternContent {\r\n\tPtrn: DesciptorPattern;\r\n\tLnkd?: boolean;\r\n\tphase?: { Hrzn: number; Vrtc: number; };\r\n}\r\n\r\nexport type DescriptorVectorContent = DescriptorColorContent | DescriptorGradientContent | DescriptorPatternContent;\r\n\r\nexport interface StrokeDescriptor {\r\n\tstrokeStyleVersion: number;\r\n\tstrokeEnabled: boolean;\r\n\tfillEnabled: boolean;\r\n\tstrokeStyleLineWidth: DescriptorUnitsValue;\r\n\tstrokeStyleLineDashOffset: DescriptorUnitsValue;\r\n\tstrokeStyleMiterLimit: number;\r\n\tstrokeStyleLineCapType: string;\r\n\tstrokeStyleLineJoinType: string;\r\n\tstrokeStyleLineAlignment: string;\r\n\tstrokeStyleScaleLock: boolean;\r\n\tstrokeStyleStrokeAdjust: boolean;\r\n\tstrokeStyleLineDashSet: DescriptorUnitsValue[];\r\n\tstrokeStyleBlendMode: string;\r\n\tstrokeStyleOpacity: DescriptorUnitsValue;\r\n\tstrokeStyleContent: DescriptorVectorContent;\r\n\tstrokeStyleResolution: number;\r\n}\r\n\r\nexport interface TextDescriptor {\r\n\t'Txt ': string;\r\n\ttextGridding: string;\r\n\tOrnt: string;\r\n\tAntA: string;\r\n\tTextIndex: number;\r\n\tEngineData?: Uint8Array;\r\n}\r\n\r\nexport interface WarpDescriptor {\r\n\twarpStyle: string;\r\n\twarpValue: number;\r\n\twarpPerspective: number;\r\n\twarpPerspectiveOther: number;\r\n\twarpRotate: string;\r\n\tbounds?: {\r\n\t\t'Top ': DescriptorUnitsValue;\r\n\t\tLeft: DescriptorUnitsValue;\r\n\t\tBtom: DescriptorUnitsValue;\r\n\t\tRght: DescriptorUnitsValue;\r\n\t};\r\n\tuOrder: number;\r\n\tvOrder: number;\r\n\tcustomEnvelopeWarp?: {\r\n\t\tmeshPoints: {\r\n\t\t\ttype: 'Hrzn' | 'Vrtc';\r\n\t\t\tvalues: number[];\r\n\t\t}[];\r\n\t};\r\n}\r\n\r\nexport function parseAngle(x: DescriptorUnitsValue) {\r\n\tif (x === undefined) return 0;\r\n\tif (x.units !== 'Angle') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value;\r\n}\r\n\r\nexport function parsePercent(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units !== 'Percent') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value / 100;\r\n}\r\n\r\nexport function parsePercentOrAngle(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units === 'Percent') return x.value / 100;\r\n\tif (x.units === 'Angle') return x.value / 360;\r\n\tthrow new Error(`Invalid units: ${x.units}`);\r\n}\r\n\r\nexport function parseUnits({ units, value }: DescriptorUnitsValue): UnitsValue {\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\t}\r\n\treturn { value, units };\r\n}\r\n\r\nexport function parseUnitsOrNumber(value: DescriptorUnitsValue | number, units: Units = 'Pixels'): UnitsValue {\r\n\tif (typeof value === 'number') return { value, units };\r\n\treturn parseUnits(value);\r\n}\r\n\r\nexport function parseUnitsToNumber({ units, value }: DescriptorUnitsValue, expectedUnits: string): number {\r\n\tif (units !== expectedUnits) throw new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\treturn value;\r\n}\r\n\r\nexport function unitsAngle(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Angle', value: value || 0 };\r\n}\r\n\r\nexport function unitsPercent(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Percent', value: Math.round((value || 0) * 100) };\r\n}\r\n\r\nexport function unitsValue(x: UnitsValue | undefined, key: string): DescriptorUnitsValue {\r\n\tif (x == null) return { units: 'Pixels', value: 0 };\r\n\r\n\tif (typeof x !== 'object')\r\n\t\tthrow new Error(`Invalid value: ${JSON.stringify(x)} (key: ${key}) (should have value and units)`);\r\n\r\n\tconst { units, value } = x;\r\n\r\n\tif (typeof value !== 'number')\r\n\t\tthrow new Error(`Invalid value in ${JSON.stringify(x)} (key: ${key})`);\r\n\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units in ${JSON.stringify(x)} (key: ${key})`);\r\n\t}\r\n\r\n\treturn { units, value };\r\n}\r\n\r\nexport const textGridding = createEnum<TextGridding>('textGridding', 'none', {\r\n\tnone: 'None',\r\n});\r\n\r\nexport const Ornt = createEnum<Orientation>('Ornt', 'horizontal', {\r\n\thorizontal: 'Hrzn',\r\n\tvertical: 'Vrtc',\r\n});\r\n\r\nexport const Annt = createEnum<AntiAlias>('Annt', 'sharp', {\r\n\tnone: 'Anno',\r\n\tsharp: 'antiAliasSharp',\r\n\tcrisp: 'AnCr',\r\n\tstrong: 'AnSt',\r\n\tsmooth: 'AnSm',\r\n});\r\n\r\nexport const warpStyle = createEnum<WarpStyle>('warpStyle', 'none', {\r\n\tnone: 'warpNone',\r\n\tarc: 'warpArc',\r\n\tarcLower: 'warpArcLower',\r\n\tarcUpper: 'warpArcUpper',\r\n\tarch: 'warpArch',\r\n\tbulge: 'warpBulge',\r\n\tshellLower: 'warpShellLower',\r\n\tshellUpper: 'warpShellUpper',\r\n\tflag: 'warpFlag',\r\n\twave: 'warpWave',\r\n\tfish: 'warpFish',\r\n\trise: 'warpRise',\r\n\tfisheye: 'warpFisheye',\r\n\tinflate: 'warpInflate',\r\n\tsqueeze: 'warpSqueeze',\r\n\ttwist: 'warpTwist',\r\n\tcustom: 'warpCustom',\r\n});\r\n\r\nexport const BlnM = createEnum<BlendMode>('BlnM', 'normal', {\r\n\t'normal': 'Nrml',\r\n\t'dissolve': 'Dslv',\r\n\t'darken': 'Drkn',\r\n\t'multiply': 'Mltp',\r\n\t'color burn': 'CBrn',\r\n\t'linear burn': 'linearBurn',\r\n\t'darker color': 'darkerColor',\r\n\t'lighten': 'Lghn',\r\n\t'screen': 'Scrn',\r\n\t'color dodge': 'CDdg',\r\n\t'linear dodge': 'linearDodge',\r\n\t'lighter color': 'lighterColor',\r\n\t'overlay': 'Ovrl',\r\n\t'soft light': 'SftL',\r\n\t'hard light': 'HrdL',\r\n\t'vivid light': 'vividLight',\r\n\t'linear light': 'linearLight',\r\n\t'pin light': 'pinLight',\r\n\t'hard mix': 'hardMix',\r\n\t'difference': 'Dfrn',\r\n\t'exclusion': 'Xclu',\r\n\t'subtract': 'blendSubtraction',\r\n\t'divide': 'blendDivide',\r\n\t'hue': 'H   ',\r\n\t'saturation': 'Strt',\r\n\t'color': 'Clr ',\r\n\t'luminosity': 'Lmns',\r\n});\r\n\r\nexport const BESl = createEnum<BevelStyle>('BESl', 'inner bevel', {\r\n\t'inner bevel': 'InrB',\r\n\t'outer bevel': 'OtrB',\r\n\t'emboss': 'Embs',\r\n\t'pillow emboss': 'PlEb',\r\n\t'stroke emboss': 'strokeEmboss',\r\n});\r\n\r\nexport const bvlT = createEnum<BevelTechnique>('bvlT', 'smooth', {\r\n\t'smooth': 'SfBL',\r\n\t'chisel hard': 'PrBL',\r\n\t'chisel soft': 'Slmt',\r\n});\r\n\r\nexport const BESs = createEnum<BevelDirection>('BESs', 'up', {\r\n\tup: 'In  ',\r\n\tdown: 'Out ',\r\n});\r\n\r\nexport const BETE = createEnum<GlowTechnique>('BETE', 'softer', {\r\n\tsofter: 'SfBL',\r\n\tprecise: 'PrBL',\r\n});\r\n\r\nexport const IGSr = createEnum<GlowSource>('IGSr', 'edge', {\r\n\tedge: 'SrcE',\r\n\tcenter: 'SrcC',\r\n});\r\n\r\nexport const GrdT = createEnum<GradientStyle>('GrdT', 'linear', {\r\n\tlinear: 'Lnr ',\r\n\tradial: 'Rdl ',\r\n\tangle: 'Angl',\r\n\treflected: 'Rflc',\r\n\tdiamond: 'Dmnd',\r\n});\r\n\r\nexport const ClrS = createEnum<'rgb' | 'hsb' | 'lab'>('ClrS', 'rgb', {\r\n\trgb: 'RGBC',\r\n\thsb: 'HSBl',\r\n\tlab: 'LbCl',\r\n});\r\n\r\nexport const FStl = createEnum<'inside' | 'center' | 'outside'>('FStl', 'outside', {\r\n\toutside: 'OutF',\r\n\tcenter: 'CtrF',\r\n\tinside: 'InsF'\r\n});\r\n\r\nexport const FrFl = createEnum<'color' | 'gradient' | 'pattern'>('FrFl', 'color', {\r\n\tcolor: 'SClr',\r\n\tgradient: 'GrFl',\r\n\tpattern: 'Ptrn',\r\n});\r\n\r\nexport const strokeStyleLineCapType = createEnum<LineCapType>('strokeStyleLineCapType', 'butt', {\r\n\tbutt: 'strokeStyleButtCap',\r\n\tround: 'strokeStyleRoundCap',\r\n\tsquare: 'strokeStyleSquareCap',\r\n});\r\n\r\nexport const strokeStyleLineJoinType = createEnum<LineJoinType>('strokeStyleLineJoinType', 'miter', {\r\n\tmiter: 'strokeStyleMiterJoin',\r\n\tround: 'strokeStyleRoundJoin',\r\n\tbevel: 'strokeStyleBevelJoin',\r\n});\r\n\r\nexport const strokeStyleLineAlignment = createEnum<LineAlignment>('strokeStyleLineAlignment', 'inside', {\r\n\tinside: 'strokeStyleAlignInside',\r\n\tcenter: 'strokeStyleAlignCenter',\r\n\toutside: 'strokeStyleAlignOutside',\r\n});\r\n",null,"function isWhitespace(char: number) {\r\n\t// ' ', '\\n', '\\r', '\\t'\r\n\treturn char === 32 || char === 10 || char === 13 || char === 9;\r\n}\r\n\r\nfunction isNumber(char: number) {\r\n\t// 0123456789.-\r\n\treturn (char >= 48 && char <= 57) || char === 46 || char === 45;\r\n}\r\n\r\nexport function parseEngineData(data: number[] | Uint8Array) {\r\n\tlet index = 0;\r\n\r\n\tfunction skipWhitespace() {\r\n\t\twhile (index < data.length && isWhitespace(data[index])) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getTextByte() {\r\n\t\tlet byte = data[index];\r\n\t\tindex++;\r\n\r\n\t\tif (byte === 92) { // \\\r\n\t\t\tbyte = data[index];\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn byte;\r\n\t}\r\n\r\n\tfunction getText() {\r\n\t\tlet result = '';\r\n\r\n\t\tif (data[index] === 41) { // )\r\n\t\t\tindex++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t// Strings start with utf-16 BOM\r\n\t\tif (data[index] !== 0xFE || data[index + 1] !== 0xFF) {\r\n\t\t\tthrow new Error('Invalid utf-16 BOM');\r\n\t\t}\r\n\r\n\t\tindex += 2;\r\n\r\n\t\t// ), ( and \\ characters are escaped in ascii manner, remove the escapes before interpreting\r\n\t\t// the bytes as utf-16\r\n\t\twhile (index < data.length && data[index] !== 41) { // )\r\n\t\t\tconst high = getTextByte();\r\n\t\t\tconst low = getTextByte();\r\n\t\t\tconst char = (high << 8) | low;\r\n\t\t\tresult += String.fromCharCode(char);\r\n\t\t}\r\n\r\n\t\tindex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tlet root: any = null;\r\n\tconst stack: any[] = [];\r\n\r\n\tfunction pushContainer(value: any) {\r\n\t\tif (!stack.length) {\r\n\t\t\tstack.push(value);\r\n\t\t\troot = value;\r\n\t\t} else {\r\n\t\t\tpushValue(value);\r\n\t\t\tstack.push(value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushValue(value: any) {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (typeof top === 'string') {\r\n\t\t\tstack[stack.length - 2][top] = value;\r\n\t\t\tpop();\r\n\t\t} else if (Array.isArray(top)) {\r\n\t\t\ttop.push(value);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushProperty(name: string) {\r\n\t\tif (!stack.length) pushContainer({});\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (top && typeof top === 'string') {\r\n\t\t\tif (name === 'nil') {\r\n\t\t\t\tpushValue(null);\r\n\t\t\t} else {\r\n\t\t\t\tpushValue(`/${name}`);\r\n\t\t\t}\r\n\t\t} else if (top && typeof top === 'object') {\r\n\t\t\tstack.push(name);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pop() {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\t\tstack.pop();\r\n\t}\r\n\r\n\tskipWhitespace();\r\n\r\n\twhile (index < data.length) {\r\n\t\tconst i = index;\r\n\t\tconst char = data[i];\r\n\r\n\t\tif (char === 60 && data[i + 1] === 60) { // <<\r\n\t\t\tindex += 2;\r\n\t\t\tpushContainer({});\r\n\t\t} else if (char === 62 && data[i + 1] === 62) { // >>\r\n\t\t\tindex += 2;\r\n\t\t\tpop();\r\n\t\t} else if (char === 47) { // /\r\n\t\t\tindex += 1;\r\n\t\t\tconst start = index;\r\n\r\n\t\t\twhile (index < data.length && !isWhitespace(data[index])) {\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tlet name = '';\r\n\r\n\t\t\tfor (let i = start; i < index; i++) {\r\n\t\t\t\tname += String.fromCharCode(data[i]);\r\n\t\t\t}\r\n\r\n\t\t\tpushProperty(name);\r\n\t\t} else if (char === 40) { // (\r\n\t\t\tindex += 1;\r\n\t\t\tpushValue(getText());\r\n\t\t} else if (char === 91) { // [\r\n\t\t\tindex += 1;\r\n\t\t\tpushContainer([]);\r\n\t\t} else if (char === 93) { // ]\r\n\t\t\tindex += 1;\r\n\t\t\tpop();\r\n\t\t} else if (char === 110 && data[i + 1] === 117 && data[i + 2] === 108 && data[i + 3] === 108) { // null\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(null);\r\n\t\t} else if (char === 116 && data[i + 1] === 114 && data[i + 2] === 117 && data[i + 3] === 101) { // true\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(true);\r\n\t\t} else if (char === 102 && data[i + 1] === 97 && data[i + 2] === 108 && data[i + 3] === 115 && data[i + 4] === 101) { // false\r\n\t\t\tindex += 5;\r\n\t\t\tpushValue(false);\r\n\t\t} else if (isNumber(char)) {\r\n\t\t\tlet value = '';\r\n\r\n\t\t\twhile (index < data.length && isNumber(data[index])) {\r\n\t\t\t\tvalue += String.fromCharCode(data[index]);\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tpushValue(parseFloat(value));\r\n\t\t} else {\r\n\t\t\tindex += 1;\r\n\t\t\tconsole.log(`Invalid token ${String.fromCharCode(char)} at ${index}`);\r\n\t\t\t// ` near ${String.fromCharCode.apply(null, data.slice(index - 10, index + 20) as any)}` +\r\n\t\t\t// `data [${Array.from(data.slice(index - 10, index + 20)).join(', ')}]`\r\n\t\t}\r\n\r\n\t\tskipWhitespace();\r\n\t}\r\n\r\n\treturn root;\r\n}\r\n\r\nconst floatKeys = [\r\n\t'Axis', 'XY', 'Zone', 'WordSpacing', 'FirstLineIndent', 'GlyphSpacing', 'StartIndent', 'EndIndent', 'SpaceBefore',\r\n\t'SpaceAfter', 'LetterSpacing', 'Values', 'GridSize', 'GridLeading', 'PointBase', 'BoxBounds', 'TransformPoint0', 'TransformPoint1',\r\n\t'TransformPoint2', 'FontSize', 'Leading', 'HorizontalScale', 'VerticalScale', 'BaselineShift', 'Tsume',\r\n\t'OutlineWidth',\r\n];\r\n\r\nconst intArrays = ['RunLengthArray'];\r\n\r\n// TODO: handle /nil\r\nexport function serializeEngineData(data: any, condensed = false) {\r\n\tlet buffer = new Uint8Array(1024);\r\n\tlet offset = 0;\r\n\tlet indent = 0;\r\n\r\n\tfunction write(value: number) {\r\n\t\tif (offset >= buffer.length) {\r\n\t\t\tconst newBuffer = new Uint8Array(buffer.length * 2);\r\n\t\t\tnewBuffer.set(buffer);\r\n\t\t\tbuffer = newBuffer;\r\n\t\t}\r\n\r\n\t\tbuffer[offset] = value;\r\n\t\toffset++;\r\n\t}\r\n\r\n\tfunction writeString(value: string) {\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twrite(value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeIndent() {\r\n\t\tif (condensed) {\r\n\t\t\twriteString(' ');\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < indent; i++) {\r\n\t\t\t\twriteString('\\t');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeProperty(key: string, value: any) {\r\n\t\twriteIndent();\r\n\t\twriteString(`/${key}`);\r\n\t\twriteValue(value, key, true);\r\n\t\tif (!condensed) writeString('\\n');\r\n\t}\r\n\r\n\tfunction serializeInt(value: number) {\r\n\t\treturn value.toString();\r\n\t}\r\n\r\n\tfunction serializeFloat(value: number) {\r\n\t\treturn value.toFixed(5)\r\n\t\t\t.replace(/(\\d)0+$/g, '$1')\r\n\t\t\t.replace(/^0+\\.([1-9])/g, '.$1')\r\n\t\t\t.replace(/^-0+\\.0(\\d)/g, '-.0$1');\r\n\t}\r\n\r\n\tfunction serializeNumber(value: number, key?: string) {\r\n\t\tconst isFloat = (key && floatKeys.indexOf(key) !== -1) || (value | 0) !== value;\r\n\t\treturn isFloat ? serializeFloat(value) : serializeInt(value);\r\n\t}\r\n\r\n\tfunction getKeys(value: any) {\r\n\t\tconst keys = Object.keys(value);\r\n\r\n\t\tif (keys.indexOf('98') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\tif (keys.indexOf('99') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\treturn keys;\r\n\t}\r\n\r\n\tfunction writeStringByte(value: number) {\r\n\t\tif (value === 40 || value === 41 || value === 92) { // ( ) \\\r\n\t\t\twrite(92); // \\\r\n\t\t}\r\n\r\n\t\twrite(value);\r\n\t}\r\n\r\n\tfunction writeValue(value: any, key?: string, inProperty = false) {\r\n\t\tfunction writePrefix() {\r\n\t\t\tif (inProperty) {\r\n\t\t\t\twriteString(' ');\r\n\t\t\t} else {\r\n\t\t\t\twriteIndent();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(condensed ? '/nil' : 'null');\r\n\t\t} else if (typeof value === 'number') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(serializeNumber(value, key));\r\n\t\t} else if (typeof value === 'boolean') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(value ? 'true' : 'false');\r\n\t\t} else if (typeof value === 'string') {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif ((key === '99' || key === '98') && value.charAt(0) === '/') {\r\n\t\t\t\twriteString(value);\r\n\t\t\t} else {\r\n\t\t\t\twriteString('(');\r\n\t\t\t\twrite(0xfe);\r\n\t\t\t\twrite(0xff);\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\tconst code = value.charCodeAt(i);\r\n\t\t\t\t\twriteStringByte((code >> 8) & 0xff);\r\n\t\t\t\t\twriteStringByte(code & 0xff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(')');\r\n\t\t\t}\r\n\t\t} else if (Array.isArray(value)) {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif (value.every(x => typeof x === 'number')) {\r\n\t\t\t\twriteString('[');\r\n\r\n\t\t\t\tconst intArray = intArrays.indexOf(key!) !== -1;\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteString(' ');\r\n\t\t\t\t\twriteString(intArray ? serializeNumber(x) : serializeFloat(x));\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(' ]');\r\n\t\t\t} else {\r\n\t\t\t\twriteString('[');\r\n\t\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteValue(x, key);\r\n\t\t\t\t\tif (!condensed) writeString('\\n');\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteIndent();\r\n\t\t\t\twriteString(']');\r\n\t\t\t}\r\n\t\t} else if (typeof value === 'object') {\r\n\t\t\tif (inProperty && !condensed) writeString('\\n');\r\n\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('<<');\r\n\r\n\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\tindent++;\r\n\r\n\t\t\tfor (const key of getKeys(value)) {\r\n\t\t\t\twriteProperty(key, value[key]);\r\n\t\t\t}\r\n\r\n\t\t\tindent--;\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('>>');\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tif (condensed) {\r\n\t\tif (typeof data === 'object') {\r\n\t\t\tfor (const key of getKeys(data)) {\r\n\t\t\t\twriteProperty(key, data[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\twriteString('\\n\\n');\r\n\t\twriteValue(data);\r\n\t}\r\n\r\n\treturn buffer.slice(0, offset);\r\n}\r\n",null,"import { TextStyle, LayerTextData, ParagraphStyle, Font, AntiAlias, TextGridInfo, Justification, Color } from './psd';\r\n\r\ninterface Adjustments {\r\n\tAxis: number[];\r\n\tXY: number[];\r\n}\r\n\r\ninterface TypeValues {\r\n\tType: number;\r\n\tValues: number[];\r\n}\r\n\r\ninterface ParagraphProperties {\r\n\tJustification?: number;\r\n\tFirstLineIndent?: number;\r\n\tStartIndent?: number;\r\n\tEndIndent?: number;\r\n\tSpaceBefore?: number;\r\n\tSpaceAfter?: number;\r\n\tAutoHyphenate?: boolean;\r\n\tHyphenatedWordSize?: number;\r\n\tPreHyphen?: number;\r\n\tPostHyphen?: number;\r\n\tConsecutiveHyphens?: number;\r\n\tZone?: number;\r\n\tWordSpacing?: number[];\r\n\tLetterSpacing?: number[];\r\n\tGlyphSpacing?: number[];\r\n\tAutoLeading?: number;\r\n\tLeadingType?: number;\r\n\tHanging?: boolean;\r\n\tBurasagari?: boolean;\r\n\tKinsokuOrder?: number;\r\n\tEveryLineComposer?: boolean;\r\n}\r\n\r\ninterface ParagraphSheet {\r\n\tName?: string;\r\n\tDefaultStyleSheet: number;\r\n\tProperties: ParagraphProperties;\r\n}\r\n\r\ninterface StyleSheetData {\r\n\tFont?: number;\r\n\tFontSize?: number;\r\n\tFauxBold?: boolean;\r\n\tFauxItalic?: boolean;\r\n\tAutoLeading?: boolean;\r\n\tLeading?: number;\r\n\tHorizontalScale?: number;\r\n\tVerticalScale?: number;\r\n\tTracking?: number;\r\n\tAutoKerning?: boolean;\r\n\tKerning?: number;\r\n\tBaselineShift?: number;\r\n\tFontCaps?: number;\r\n\tFontBaseline?: number;\r\n\tUnderline?: boolean;\r\n\tStrikethrough?: boolean;\r\n\tLigatures?: boolean;\r\n\tDLigatures?: boolean;\r\n\tBaselineDirection?: number;\r\n\tTsume?: number;\r\n\tStyleRunAlignment?: number;\r\n\tLanguage?: number;\r\n\tNoBreak?: boolean;\r\n\tFillColor?: TypeValues;\r\n\tStrokeColor?: TypeValues;\r\n\tFillFlag?: boolean;\r\n\tStrokeFlag?: boolean;\r\n\tFillFirst?: boolean;\r\n\tYUnderline?: number;\r\n\tOutlineWidth?: number;\r\n\tCharacterDirection?: number;\r\n\tHindiNumbers?: boolean;\r\n\tKashida?: number;\r\n\tDiacriticPos?: number;\r\n}\r\n\r\ninterface FontSet {\r\n\tName: string;\r\n\tScript: number;\r\n\tFontType: number;\r\n\tSynthetic: number;\r\n}\r\n\r\ninterface ResourceDict {\r\n\tKinsokuSet: any[];\r\n\tMojiKumiSet: any[];\r\n\tTheNormalStyleSheet: number;\r\n\tTheNormalParagraphSheet: number;\r\n\tParagraphSheetSet: ParagraphSheet[];\r\n\tStyleSheetSet: { Name: string; StyleSheetData: StyleSheetData; }[];\r\n\tFontSet: FontSet[];\r\n\tSuperscriptSize: number;\r\n\tSuperscriptPosition: number;\r\n\tSubscriptSize: number;\r\n\tSubscriptPosition: number;\r\n\tSmallCapSize: number;\r\n}\r\n\r\ninterface ParagraphRun {\r\n\tParagraphSheet: ParagraphSheet;\r\n\tAdjustments: Adjustments;\r\n}\r\n\r\ninterface StyleRun {\r\n\tStyleSheet: { StyleSheetData: StyleSheetData; };\r\n}\r\n\r\ninterface PhotoshopNode {\r\n\tShapeType?: number;\r\n\tPointBase?: number[];\r\n\tBoxBounds?: number[];\r\n\tBase?: {\r\n\t\tShapeType: number;\r\n\t\tTransformPoint0: number[];\r\n\t\tTransformPoint1: number[];\r\n\t\tTransformPoint2: number[];\r\n\t};\r\n}\r\n\r\ninterface EngineData {\r\n\tEngineDict: {\r\n\t\tEditor: { Text: string; };\r\n\t\tParagraphRun: {\r\n\t\t\tDefaultRunData: ParagraphRun;\r\n\t\t\tRunArray: ParagraphRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tStyleRun: {\r\n\t\t\tDefaultRunData: StyleRun;\r\n\t\t\tRunArray: StyleRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tGridInfo: {\r\n\t\t\tGridIsOn: boolean;\r\n\t\t\tShowGrid: boolean;\r\n\t\t\tGridSize: number;\r\n\t\t\tGridLeading: number;\r\n\t\t\tGridColor: TypeValues;\r\n\t\t\tGridLeadingFillColor: TypeValues;\r\n\t\t\tAlignLineHeightToGridFlags: boolean;\r\n\t\t};\r\n\t\tAntiAlias: number;\r\n\t\tUseFractionalGlyphWidths: boolean;\r\n\t\tRendered?: {\r\n\t\t\tVersion: number;\r\n\t\t\tShapes?: {\r\n\t\t\t\tWritingDirection: number;\r\n\t\t\t\tChildren?: {\r\n\t\t\t\t\tShapeType?: number;\r\n\t\t\t\t\tProcession: number;\r\n\t\t\t\t\tLines: { WritingDirection: number; Children: any[]; };\r\n\t\t\t\t\tCookie?: {\r\n\t\t\t\t\t\tPhotoshop?: PhotoshopNode;\r\n\t\t\t\t\t};\r\n\t\t\t\t}[];\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\tResourceDict: ResourceDict;\r\n\tDocumentResources: ResourceDict;\r\n}\r\n\r\nconst defaultFont: Font = {\r\n\tname: 'MyriadPro-Regular',\r\n\tscript: 0,\r\n\ttype: 0,\r\n\tsynthetic: 0,\r\n};\r\n\r\nconst defaultParagraphStyle: ParagraphStyle = {\r\n\tjustification: 'left',\r\n\tfirstLineIndent: 0,\r\n\tstartIndent: 0,\r\n\tendIndent: 0,\r\n\tspaceBefore: 0,\r\n\tspaceAfter: 0,\r\n\tautoHyphenate: true,\r\n\thyphenatedWordSize: 6,\r\n\tpreHyphen: 2,\r\n\tpostHyphen: 2,\r\n\tconsecutiveHyphens: 8,\r\n\tzone: 36,\r\n\twordSpacing: [0.8, 1, 1.33],\r\n\tletterSpacing: [0, 0, 0],\r\n\tglyphSpacing: [1, 1, 1],\r\n\tautoLeading: 1.2,\r\n\tleadingType: 0,\r\n\thanging: false,\r\n\tburasagari: false,\r\n\tkinsokuOrder: 0,\r\n\teveryLineComposer: false,\r\n};\r\n\r\nconst defaultStyle: TextStyle = {\r\n\tfont: defaultFont,\r\n\tfontSize: 12,\r\n\tfauxBold: false,\r\n\tfauxItalic: false,\r\n\tautoLeading: true,\r\n\tleading: 0,\r\n\thorizontalScale: 1,\r\n\tverticalScale: 1,\r\n\ttracking: 0,\r\n\tautoKerning: true,\r\n\tkerning: 0,\r\n\tbaselineShift: 0,\r\n\tfontCaps: 0,\r\n\tfontBaseline: 0,\r\n\tunderline: false,\r\n\tstrikethrough: false,\r\n\tligatures: true,\r\n\tdLigatures: false,\r\n\tbaselineDirection: 2,\r\n\ttsume: 0,\r\n\tstyleRunAlignment: 2,\r\n\tlanguage: 0,\r\n\tnoBreak: false,\r\n\tfillColor: { r: 0, g: 0, b: 0 },\r\n\tstrokeColor: { r: 0, g: 0, b: 0 },\r\n\tfillFlag: true,\r\n\tstrokeFlag: false,\r\n\tfillFirst: true,\r\n\tyUnderline: 1,\r\n\toutlineWidth: 1,\r\n\tcharacterDirection: 0,\r\n\thindiNumbers: false,\r\n\tkashida: 1,\r\n\tdiacriticPos: 2,\r\n};\r\n\r\nconst defaultGridInfo: TextGridInfo = {\r\n\tisOn: false,\r\n\tshow: false,\r\n\tsize: 18,\r\n\tleading: 22,\r\n\tcolor: { r: 0, g: 0, b: 255 },\r\n\tleadingFillColor: { r: 0, g: 0, b: 255 },\r\n\talignLineHeightToGridFlags: false,\r\n};\r\n\r\nconst paragraphStyleKeys: (keyof ParagraphStyle)[] = [\r\n\t'justification', 'firstLineIndent', 'startIndent', 'endIndent', 'spaceBefore', 'spaceAfter',\r\n\t'autoHyphenate', 'hyphenatedWordSize', 'preHyphen', 'postHyphen', 'consecutiveHyphens',\r\n\t'zone', 'wordSpacing', 'letterSpacing', 'glyphSpacing', 'autoLeading', 'leadingType',\r\n\t'hanging', 'burasagari', 'kinsokuOrder', 'everyLineComposer',\r\n];\r\n\r\nconst styleKeys: (keyof TextStyle)[] = [\r\n\t'font', 'fontSize', 'fauxBold', 'fauxItalic', 'autoLeading', 'leading', 'horizontalScale',\r\n\t'verticalScale', 'tracking', 'autoKerning', 'kerning', 'baselineShift', 'fontCaps', 'fontBaseline',\r\n\t'underline', 'strikethrough', 'ligatures', 'dLigatures', 'baselineDirection', 'tsume',\r\n\t'styleRunAlignment', 'language', 'noBreak', 'fillColor', 'strokeColor', 'fillFlag',\r\n\t'strokeFlag', 'fillFirst', 'yUnderline', 'outlineWidth', 'characterDirection', 'hindiNumbers',\r\n\t'kashida', 'diacriticPos',\r\n];\r\n\r\nconst antialias: AntiAlias[] = ['none', 'crisp', 'strong', 'smooth', 'sharp'];\r\nconst justification: Justification[] = ['left', 'right', 'center'];\r\n\r\nfunction upperFirst(value: string) {\r\n\treturn value.substr(0, 1).toUpperCase() + value.substr(1);\r\n}\r\n\r\nfunction decodeColor(color: { Type: number; Values: number[]; }): Color {\r\n\tconst c = color.Values;\r\n\r\n\tif (color.Type === 0) { // grayscale\r\n\t\treturn { r: c[1] * 255, g: c[1] * 255, b: c[1] * 255 }; // , c[0] * 255];\r\n\t} else { // rgb\r\n\t\treturn { r: c[1] * 255, g: c[2] * 255, b: c[3] * 255, a: c[0] }; // , c[0] * 255];\r\n\t}\r\n}\r\n\r\nfunction encodeColor(color: Color | undefined) {\r\n\tif (color && 'r' in color) {\r\n\t\treturn ['a' in color ? color.a : 1, color.r / 255, color.g / 255, color.b / 255];\r\n\t} else {\r\n\t\treturn [0, 0, 0, 0];\r\n\t}\r\n}\r\n\r\nfunction arraysEqual(a: any[], b: any[]) {\r\n\tif (!a || !b) return false;\r\n\tif (a.length !== b.length) return false;\r\n\tfor (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction objectsEqual(a: any, b: any) {\r\n\tif (!a || !b) return false;\r\n\tfor (const key of Object.keys(a)) if (a[key] !== b[key]) return false;\r\n\tfor (const key of Object.keys(b)) if (a[key] !== b[key]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction findOrAddFont(fonts: Font[], font: Font) {\r\n\tfor (let i = 0; i < fonts.length; i++) {\r\n\t\tif (fonts[i].name === font.name) return i;\r\n\t}\r\n\r\n\tfonts.push(font);\r\n\treturn fonts.length - 1;\r\n}\r\n\r\nfunction decodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[Key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[key] = justification[obj[Key]];\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[key] = fonts[obj[Key]];\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[key] = decodeColor(obj[Key]);\r\n\t\t} else {\r\n\t\t\tresult[key] = obj[Key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction encodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[Key] = justification.indexOf(obj[key] ?? 'left');\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[Key] = findOrAddFont(fonts, obj[key]);\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[Key] = { Type: 1, Values: encodeColor(obj[key]) } as TypeValues;\r\n\t\t} else {\r\n\t\t\tresult[Key] = obj[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction decodeParagraphStyle(obj: ParagraphProperties, fonts: Font[]): ParagraphStyle {\r\n\treturn decodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction decodeStyle(obj: StyleSheetData, fonts: Font[]): TextStyle {\r\n\treturn decodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction encodeParagraphStyle(obj: ParagraphStyle, fonts: Font[]): ParagraphProperties {\r\n\treturn encodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction encodeStyle(obj: TextStyle, fonts: Font[]): StyleSheetData {\r\n\treturn encodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction deduplicateValues<T>(base: T, runs: { style: T; }[], keys: (keyof T)[]) {\r\n\tif (!runs.length) return;\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst value = runs[0].style[key];\r\n\r\n\t\tif (value !== undefined) {\r\n\t\t\tlet identical = false;\r\n\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tidentical = runs.every(r => arraysEqual(r.style[key] as any, value));\r\n\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\tidentical = runs.every(r => objectsEqual(r.style[key] as any, value));\r\n\t\t\t} else {\r\n\t\t\t\tidentical = runs.every(r => r.style[key] === value);\r\n\t\t\t}\r\n\r\n\t\t\tif (identical) {\r\n\t\t\t\tbase[key] = value as any;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst styleValue = base[key];\r\n\r\n\t\tif (styleValue !== undefined) {\r\n\t\t\tfor (const r of runs) {\r\n\t\t\t\tlet same = false;\r\n\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tsame = arraysEqual(r.style[key] as any, value);\r\n\t\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\t\tsame = objectsEqual(r.style[key] as any, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsame = r.style[key] === value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (same) delete r.style[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (runs.every(x => Object.keys(x.style).length === 0)) {\r\n\t\truns.length = 0;\r\n\t}\r\n}\r\n\r\nexport function decodeEngineData(engineData: EngineData) {\r\n\tconst engineDict = engineData.EngineDict;\r\n\tconst resourceDict = engineData.ResourceDict;\r\n\r\n\tconst fonts = resourceDict.FontSet.map<Font>(f => ({\r\n\t\tname: f.Name,\r\n\t\tscript: f.Script,\r\n\t\ttype: f.FontType,\r\n\t\tsynthetic: f.Synthetic,\r\n\t}));\r\n\r\n\tconst result: LayerTextData = {\r\n\t\ttext: engineDict.Editor.Text.replace(/\\r/g, '\\n').replace(/\\n$/, ''),\r\n\t\tantiAlias: antialias[engineDict.AntiAlias] ?? 'smooth',\r\n\t\tuseFractionalGlyphWidths: !!engineDict.UseFractionalGlyphWidths,\r\n\t\tsuperscriptSize: resourceDict.SuperscriptSize,\r\n\t\tsuperscriptPosition: resourceDict.SuperscriptPosition,\r\n\t\tsubscriptSize: resourceDict.SubscriptSize,\r\n\t\tsubscriptPosition: resourceDict.SubscriptPosition,\r\n\t\tsmallCapSize: resourceDict.SmallCapSize,\r\n\t};\r\n\r\n\t// shape\r\n\r\n\tconst photoshop = engineDict.Rendered?.Shapes?.Children?.[0]?.Cookie?.Photoshop;\r\n\r\n\tif (photoshop) {\r\n\t\tresult.shapeType = photoshop.ShapeType === 1 ? 'box' : 'point';\r\n\t\tif (photoshop.PointBase) result.pointBase = photoshop.PointBase;\r\n\t\tif (photoshop.BoxBounds) result.boxBounds = photoshop.BoxBounds;\r\n\t}\r\n\r\n\t// paragraph style\r\n\r\n\t// const theNormalParagraphSheet = resourceDict.TheNormalParagraphSheet;\r\n\t// const paragraphSheetSet = resourceDict.ParagraphSheetSet;\r\n\t// const paragraphProperties = paragraphSheetSet[theNormalParagraphSheet].Properties;\r\n\tconst paragraphRun = engineData.EngineDict.ParagraphRun;\r\n\r\n\tresult.paragraphStyle = {}; // decodeParagraphStyle(paragraphProperties, fonts);\r\n\tresult.paragraphStyleRuns = [];\r\n\r\n\tfor (let i = 0; i < paragraphRun.RunArray.length; i++) {\r\n\t\tconst run = paragraphRun.RunArray[i];\r\n\t\tconst length = paragraphRun.RunLengthArray[i];\r\n\t\tconst style = decodeParagraphStyle(run.ParagraphSheet.Properties, fonts);\r\n\t\t// const adjustments = {\r\n\t\t//   axis: run.Adjustments.Axis,\r\n\t\t//   xy: run.Adjustments.XY,\r\n\t\t// };\r\n\t\tresult.paragraphStyleRuns.push({ length, style/*, adjustments*/ });\r\n\t}\r\n\r\n\tdeduplicateValues(result.paragraphStyle, result.paragraphStyleRuns, paragraphStyleKeys);\r\n\r\n\tif (!result.paragraphStyleRuns.length) delete result.paragraphStyleRuns;\r\n\r\n\t// style\r\n\r\n\t// const theNormalStyleSheet = resourceDict.TheNormalStyleSheet;\r\n\t// const styleSheetSet = resourceDict.StyleSheetSet;\r\n\t// const styleSheetData = styleSheetSet[theNormalStyleSheet].StyleSheetData;\r\n\tconst styleRun = engineData.EngineDict.StyleRun;\r\n\r\n\tresult.style = {}; // decodeStyle(styleSheetData, fonts);\r\n\tresult.styleRuns = [];\r\n\r\n\tfor (let i = 0; i < styleRun.RunArray.length; i++) {\r\n\t\tconst length = styleRun.RunLengthArray[i];\r\n\t\tconst style = decodeStyle(styleRun.RunArray[i].StyleSheet.StyleSheetData, fonts);\r\n\t\tresult.styleRuns.push({ length, style });\r\n\t}\r\n\r\n\tdeduplicateValues(result.style, result.styleRuns, styleKeys);\r\n\r\n\tif (!result.styleRuns.length) delete result.styleRuns;\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function encodeEngineData(data: LayerTextData) {\r\n\tconst text = `${(data.text || '').replace(/\\r?\\n/g, '\\r')}\\r`;\r\n\r\n\tconst fonts: Font[] = [\r\n\t\t{ name: 'AdobeInvisFont', script: 0, type: 0, synthetic: 0 },\r\n\t];\r\n\r\n\tconst defFont = data.style?.font ||\r\n\t\tdata.styleRuns?.find(s => s.style.font)?.style.font ||\r\n\t\tdefaultFont;\r\n\r\n\tconst paragraphRunArray: ParagraphRun[] = [];\r\n\tconst paragraphRunLengthArray: number[] = [];\r\n\r\n\tif (data.paragraphStyleRuns && data.paragraphStyleRuns.length) {\r\n\t\tfor (const run of data.paragraphStyleRuns) {\r\n\t\t\tparagraphRunLengthArray.push(run.length);\r\n\t\t\tparagraphRunArray.push({\r\n\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle, ...run.style }, fonts),\r\n\t\t\t\t},\r\n\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t});\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let i = 0, last = 0; i < text.length; i++) {\r\n\t\t\tif (text.charCodeAt(i) === 13) { // \\r\r\n\t\t\t\tparagraphRunLengthArray.push(i - last + 1);\r\n\t\t\t\tparagraphRunArray.push({\r\n\t\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t\t\t},\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t});\r\n\t\t\t\tlast = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst styleSheetData = encodeStyle({ ...defaultStyle, font: defFont }, fonts);\r\n\tconst styleRuns = data.styleRuns || [{ length: text.length, style: data.style || {} }];\r\n\tconst styleRunArray: StyleRun[] = [];\r\n\tconst styleRunLengthArray: number[] = [];\r\n\r\n\tfor (const run of styleRuns) {\r\n\t\tstyleRunLengthArray.push(run.length);\r\n\t\tstyleRunArray.push({\r\n\t\t\tStyleSheet: {\r\n\t\t\t\tStyleSheetData: encodeStyle({\r\n\t\t\t\t\tkerning: 0,\r\n\t\t\t\t\tautoKerning: true,\r\n\t\t\t\t\tfillColor: { r: 0, g: 0, b: 0 },\r\n\t\t\t\t\t...data.style,\r\n\t\t\t\t\t...run.style,\r\n\t\t\t\t}, fonts),\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tconst gridInfo = { ...defaultGridInfo, ...data.gridInfo };\r\n\tconst WritingDirection = data.orientation === 'vertical' ? 2 : 0;\r\n\tconst Procession = data.orientation === 'vertical' ? 1 : 0;\r\n\tconst ShapeType = data.shapeType === 'box' ? 1 : 0;\r\n\tconst Photoshop: PhotoshopNode = {\r\n\t\tShapeType,\r\n\t};\r\n\r\n\tif (ShapeType === 0) {\r\n\t\tPhotoshop.PointBase = data.pointBase || [0, 0];\r\n\t} else {\r\n\t\tPhotoshop.BoxBounds = data.boxBounds || [0, 0, 0, 0];\r\n\t}\r\n\r\n\t// needed for correct order of properties\r\n\tPhotoshop.Base = {\r\n\t\tShapeType,\r\n\t\tTransformPoint0: [1, 0],\r\n\t\tTransformPoint1: [0, 1],\r\n\t\tTransformPoint2: [0, 0],\r\n\t};\r\n\r\n\tconst defaultResources = {\r\n\t\tKinsokuSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuHard',\r\n\t\t\t\tNoStart: '、。，．・：；？！ー―’”）〕］｝〉》」』】ヽヾゝゞ々ぁぃぅぇぉっゃゅょゎァィゥェォッャュョヮヵヶ゛゜?!)]},.:;℃℉¢％‰',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【([{￥＄£＠§〒＃',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuSoft',\r\n\t\t\t\tNoStart: '、。，．・：；？！’”）〕］｝〉》」』】ヽヾゝゞ々',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t],\r\n\t\tMojiKumiSet: [\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet1' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet2' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet3' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet4' },\r\n\t\t],\r\n\t\tTheNormalStyleSheet: 0,\r\n\t\tTheNormalParagraphSheet: 0,\r\n\t\tParagraphSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t},\r\n\t\t],\r\n\t\tStyleSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tStyleSheetData: styleSheetData,\r\n\t\t\t},\r\n\t\t],\r\n\t\tFontSet: fonts.map<FontSet>(f => ({\r\n\t\t\tName: f.name,\r\n\t\t\tScript: f.script || 0,\r\n\t\t\tFontType: f.type || 0,\r\n\t\t\tSynthetic: f.synthetic || 0,\r\n\t\t})),\r\n\t\tSuperscriptSize: data.superscriptSize ?? 0.583,\r\n\t\tSuperscriptPosition: data.superscriptPosition ?? 0.333,\r\n\t\tSubscriptSize: data.subscriptSize ?? 0.583,\r\n\t\tSubscriptPosition: data.subscriptPosition ?? 0.333,\r\n\t\tSmallCapSize: data.smallCapSize ?? 0.7,\r\n\t};\r\n\r\n\tconst engineData: EngineData = {\r\n\t\tEngineDict: {\r\n\t\t\tEditor: { Text: text },\r\n\t\t\tParagraphRun: {\r\n\t\t\t\tDefaultRunData: {\r\n\t\t\t\t\tParagraphSheet: { DefaultStyleSheet: 0, Properties: {} },\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t},\r\n\t\t\t\tRunArray: paragraphRunArray,\r\n\t\t\t\tRunLengthArray: paragraphRunLengthArray,\r\n\t\t\t\tIsJoinable: 1,\r\n\t\t\t},\r\n\t\t\tStyleRun: {\r\n\t\t\t\tDefaultRunData: { StyleSheet: { StyleSheetData: {} } },\r\n\t\t\t\tRunArray: styleRunArray,\r\n\t\t\t\tRunLengthArray: styleRunLengthArray,\r\n\t\t\t\tIsJoinable: 2,\r\n\t\t\t},\r\n\t\t\tGridInfo: {\r\n\t\t\t\tGridIsOn: !!gridInfo.isOn,\r\n\t\t\t\tShowGrid: !!gridInfo.show,\r\n\t\t\t\tGridSize: gridInfo.size ?? 18,\r\n\t\t\t\tGridLeading: gridInfo.leading ?? 22,\r\n\t\t\t\tGridColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tGridLeadingFillColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tAlignLineHeightToGridFlags: !!gridInfo.alignLineHeightToGridFlags,\r\n\t\t\t},\r\n\t\t\tAntiAlias: antialias.indexOf(data.antiAlias ?? 'sharp'),\r\n\t\t\tUseFractionalGlyphWidths: data.useFractionalGlyphWidths ?? true,\r\n\t\t\tRendered: {\r\n\t\t\t\tVersion: 1,\r\n\t\t\t\tShapes: {\r\n\t\t\t\t\tWritingDirection,\r\n\t\t\t\t\tChildren: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tShapeType,\r\n\t\t\t\t\t\t\tProcession,\r\n\t\t\t\t\t\t\tLines: { WritingDirection, Children: [] },\r\n\t\t\t\t\t\t\tCookie: { Photoshop },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tResourceDict: { ...defaultResources },\r\n\t\tDocumentResources: { ...defaultResources },\r\n\t};\r\n\r\n\t// console.log('encodeEngineData', require('util').inspect(engineData, false, 99, true));\r\n\treturn engineData;\r\n}\r\n",null,"export type BlendMode = 'pass through' | 'normal' | 'dissolve' | 'darken' | 'multiply' |\n\t'color burn' | 'linear burn' | 'darker color' | 'lighten' | 'screen' | 'color dodge' |\n\t'linear dodge' | 'lighter color' | 'overlay' | 'soft light' | 'hard light' |\n\t'vivid light' | 'linear light' | 'pin light' | 'hard mix' | 'difference' | 'exclusion' |\n\t'subtract' | 'divide' | 'hue' | 'saturation' | 'color' | 'luminosity';\n\nexport const enum ColorMode {\n\tBitmap = 0,\n\tGrayscale = 1,\n\tIndexed = 2,\n\tRGB = 3,\n\tCMYK = 4,\n\tMultichannel = 7,\n\tDuotone = 8,\n\tLab = 9,\n}\n\nexport const enum SectionDividerType {\n\tOther = 0,\n\tOpenFolder = 1,\n\tClosedFolder = 2,\n\tBoundingSectionDivider = 3,\n}\n\nexport type RGBA = { r: number; g: number; b: number; a: number; };\nexport type RGB = { r: number; g: number; b: number; };\nexport type HSB = { h: number; s: number; b: number; };\nexport type CMYK = { c: number; m: number; y: number; k: number; };\nexport type LAB = { l: number; a: number; b: number; };\nexport type Grayscale = { k: number };\nexport type Color = RGBA | RGB | HSB | CMYK | LAB | Grayscale;\n\nexport interface EffectContour {\n\tname: string;\n\tcurve: { x: number; y: number; }[];\n}\n\nexport interface EffectPattern {\n\tname: string;\n\tid: string;\n\t// TODO: add fields\n}\n\nexport interface LayerEffectShadow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tdistance?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tuseGlobalLight?: boolean;\n\tantialiased?: boolean;\n\tcontour?: EffectContour;\n\tchoke?: UnitsValue; // spread\n\tlayerConceals?: boolean; // only drop shadow\n}\n\nexport interface LayerEffectsOuterGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue;\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectInnerGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\ttechnique?: GlowTechnique;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue; // spread\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectBevel {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tstrength?: number; // depth\n\thighlightBlendMode?: BlendMode;\n\tshadowBlendMode?: BlendMode;\n\thighlightColor?: Color;\n\tshadowColor?: Color;\n\tstyle?: BevelStyle;\n\thighlightOpacity?: number;\n\tshadowOpacity?: number;\n\tsoften?: UnitsValue;\n\tuseGlobalLight?: boolean;\n\taltitude?: number;\n\ttechnique?: BevelTechnique;\n\tdirection?: BevelDirection;\n\tuseTexture?: boolean;\n\tuseShape?: boolean;\n\tantialiasGloss?: boolean;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectSolidFill {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\topacity?: number;\n}\n\nexport interface LayerEffectStroke {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tposition?: 'inside' | 'center' | 'outside';\n\tfillType?: 'color' | 'gradient' | 'pattern';\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tcolor?: Color;\n\tgradient?: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tpattern?: EffectPattern & {}; // TODO: additional pattern info\n}\n\nexport interface LayerEffectSatin {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\tantialiased?: boolean;\n\topacity?: number;\n\tdistance?: UnitsValue;\n\tinvert?: boolean;\n\tangle?: number;\n\tcontour?: EffectContour;\n}\n\n// not supported yet because of `Patt` section not implemented\nexport interface LayerEffectPatternOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tscale?: number;\n\tpattern?: EffectPattern;\n\tphase?: { x: number; y: number; };\n\talign?: boolean;\n}\n\nexport interface EffectSolidGradient {\n\tname: string;\n\ttype: 'solid';\n\tsmoothness?: number;\n\tcolorStops: ColorStop[];\n\topacityStops: OpacityStop[];\n}\n\nexport interface EffectNoiseGradient {\n\tname: string;\n\ttype: 'noise';\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin: number[];\n\tmax: number[];\n}\n\nexport interface LayerEffectGradientOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: string;\n\topacity?: number;\n\talign?: boolean;\n\tscale?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\ttype?: GradientStyle;\n\toffset?: { x: number; y: number; };\n\tgradient?: EffectSolidGradient | EffectNoiseGradient;\n}\n\nexport interface LayerEffectsInfo {\n\tdisabled?: boolean;\n\tscale?: number;\n\tdropShadow?: LayerEffectShadow;\n\tinnerShadow?: LayerEffectShadow;\n\touterGlow?: LayerEffectsOuterGlow;\n\tinnerGlow?: LayerEffectInnerGlow;\n\tbevel?: LayerEffectBevel;\n\tsolidFill?: LayerEffectSolidFill;\n\tsatin?: LayerEffectSatin;\n\tstroke?: LayerEffectStroke;\n\tgradientOverlay?: LayerEffectGradientOverlay;\n\tpatternOverlay?: LayerEffectPatternOverlay; // not supported yet because of `Patt` section not implemented\n}\n\nexport interface LayerMaskData {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tdefaultColor?: number;\n\tdisabled?: boolean;\n\tpositionRelativeToLayer?: boolean;\n\tfromVectorData?: boolean; // set to true if the mask is generated from vector data, false if it's a bitmap provided by user\n\tuserMaskDensity?: number;\n\tuserMaskFeather?: number; // px\n\tvectorMaskDensity?: number;\n\tvectorMaskFeather?: number;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n}\n\nexport type TextGridding = 'none'; // TODO: other values\nexport type Orientation = 'horizontal' | 'vertical';\nexport type AntiAlias = 'none' | 'sharp' | 'crisp' | 'strong' | 'smooth';\nexport type WarpStyle =\n\t'none' | 'arc' | 'arcLower' | 'arcUpper' | 'arch' | 'bulge' | 'shellLower' | 'shellUpper' | 'flag' |\n\t'wave' | 'fish' | 'rise' | 'fisheye' | 'inflate' | 'squeeze' | 'twist' | 'custom';\nexport type BevelStyle = 'outer bevel' | 'inner bevel' | 'emboss' | 'pillow emboss' | 'stroke emboss';\nexport type BevelTechnique = 'smooth' | 'chisel hard' | 'chisel soft';\nexport type BevelDirection = 'up' | 'down';\nexport type GlowTechnique = 'softer' | 'precise';\nexport type GlowSource = 'edge' | 'center';\nexport type GradientStyle = 'linear' | 'radial' | 'angle' | 'reflected' | 'diamond';\nexport type Justification = 'left' | 'right' | 'center';\nexport type LineCapType = 'butt' | 'round' | 'square';\nexport type LineJoinType = 'miter' | 'round' | 'bevel';\nexport type LineAlignment = 'inside' | 'center' | 'outside';\n\nexport interface Warp {\n\tstyle?: WarpStyle;\n\tvalue?: number;\n\tperspective?: number;\n\tperspectiveOther?: number;\n\trotate?: Orientation;\n\n\t// for custom warps\n\tbounds?: { top: UnitsValue; left: UnitsValue; bottom: UnitsValue; right: UnitsValue; };\n\tuOrder?: number;\n\tvOrder?: number;\n\tcustomEnvelopeWarp?: {\n\t\tmeshPoints: { type: 'horizontal' | 'vertical'; values: number[]; }[];\n\t};\n}\n\nexport interface Font {\n\tname: string;\n\tscript?: number;\n\ttype?: number;\n\tsynthetic?: number;\n}\n\nexport interface ParagraphStyle {\n\tjustification?: Justification;\n\tfirstLineIndent?: number;\n\tstartIndent?: number;\n\tendIndent?: number;\n\tspaceBefore?: number;\n\tspaceAfter?: number;\n\tautoHyphenate?: boolean;\n\thyphenatedWordSize?: number;\n\tpreHyphen?: number;\n\tpostHyphen?: number;\n\tconsecutiveHyphens?: number;\n\tzone?: number;\n\twordSpacing?: number[];\n\tletterSpacing?: number[];\n\tglyphSpacing?: number[];\n\tautoLeading?: number;\n\tleadingType?: number;\n\thanging?: boolean;\n\tburasagari?: boolean;\n\tkinsokuOrder?: number;\n\teveryLineComposer?: boolean;\n}\n\nexport interface ParagraphStyleRun {\n\tlength: number;\n\tstyle: ParagraphStyle;\n}\n\nexport interface TextStyle {\n\tfont?: Font;\n\tfontSize?: number;\n\tfauxBold?: boolean;\n\tfauxItalic?: boolean;\n\tautoLeading?: boolean;\n\tleading?: number;\n\thorizontalScale?: number;\n\tverticalScale?: number;\n\ttracking?: number;\n\tautoKerning?: boolean;\n\tkerning?: number;\n\tbaselineShift?: number;\n\tfontCaps?: number; // 0 - none, 1 - small caps, 2 - all caps\n\tfontBaseline?: number; // 0 - normal, 1 - superscript, 2 - subscript\n\tunderline?: boolean;\n\tstrikethrough?: boolean;\n\tligatures?: boolean;\n\tdLigatures?: boolean;\n\tbaselineDirection?: number;\n\ttsume?: number;\n\tstyleRunAlignment?: number;\n\tlanguage?: number;\n\tnoBreak?: boolean;\n\tfillColor?: Color;\n\tstrokeColor?: Color;\n\tfillFlag?: boolean;\n\tstrokeFlag?: boolean;\n\tfillFirst?: boolean;\n\tyUnderline?: number;\n\toutlineWidth?: number;\n\tcharacterDirection?: number;\n\thindiNumbers?: boolean;\n\tkashida?: number;\n\tdiacriticPos?: number;\n}\n\nexport interface TextStyleRun {\n\tlength: number;\n\tstyle: TextStyle;\n}\n\nexport interface TextGridInfo {\n\tisOn?: boolean;\n\tshow?: boolean;\n\tsize?: number;\n\tleading?: number;\n\tcolor?: Color;\n\tleadingFillColor?: Color;\n\talignLineHeightToGridFlags?: boolean;\n}\n\nexport interface LayerTextData {\n\ttext: string;\n\ttransform?: number[];\n\tantiAlias?: AntiAlias;\n\tgridding?: TextGridding;\n\torientation?: Orientation;\n\tindex?: number;\n\twarp?: Warp;\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\n\tgridInfo?: TextGridInfo;\n\tuseFractionalGlyphWidths?: boolean;\n\tstyle?: TextStyle; // base style\n\tstyleRuns?: TextStyleRun[]; // spans of different style\n\tparagraphStyle?: ParagraphStyle; // base paragraph style\n\tparagraphStyleRuns?: ParagraphStyleRun[]; // style for each line\n\n\tsuperscriptSize?: number;\n\tsuperscriptPosition?: number;\n\tsubscriptSize?: number;\n\tsubscriptPosition?: number;\n\tsmallCapSize?: number;\n\n\tshapeType?: 'point' | 'box';\n\tpointBase?: number[];\n\tboxBounds?: number[];\n}\n\nexport interface PatternInfo {\n\tname: string;\n\tid: string;\n\tx: number;\n\ty: number;\n\tbounds: { x: number; y: number; w: number, h: number; };\n\tdata: Uint8Array;\n}\n\nexport interface BezierKnot {\n\tlinked: boolean;\n\tpoints: number[]; // x0, y0, x1, y1, x2, y2\n}\n\nexport type BooleanOperation = 'exclude' | 'combine' | 'subtract' | 'intersect';\n\nexport interface BezierPath {\n\topen: boolean;\n\toperation: BooleanOperation;\n\tknots: BezierKnot[];\n}\n\nexport interface ExtraGradientInfo {\n\tstyle?: GradientStyle;\n\tscale?: number;\n\tangle?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\talign?: boolean;\n\toffset?: { x: number; y: number; };\n}\n\nexport interface ExtraPatternInfo {\n\tlinked?: boolean;\n\tphase?: { x: number; y: number; };\n}\n\nexport type VectorContent = { type: 'color'; color: Color; } |\n\t(EffectSolidGradient & ExtraGradientInfo) |\n\t(EffectNoiseGradient & ExtraGradientInfo) |\n\t(EffectPattern & { type: 'pattern'; } & ExtraPatternInfo);\n\nexport type RenderingIntent = 'perceptual' | 'saturation' | 'relative colorimetric' | 'absolute colorimetric';\n\nexport type Units = 'Pixels' | 'Points' | 'Picas' | 'Millimeters' | 'Centimeters' | 'Inches' | 'None' | 'Density';\n\nexport interface UnitsValue {\n\tunits: Units;\n\tvalue: number;\n}\n\nexport interface BrightnessAdjustment {\n\ttype: 'brightness/contrast';\n\tbrightness?: number;\n\tcontrast?: number;\n\tmeanValue?: number;\n\tuseLegacy?: boolean;\n\tlabColorOnly?: boolean;\n\tauto?: boolean;\n}\n\nexport interface LevelsAdjustmentChannel {\n\tshadowInput: number;\n\thighlightInput: number;\n\tshadowOutput: number;\n\thighlightOutput: number;\n\tmidtoneInput: number;\n}\n\nexport interface PresetInfo {\n\tpresetKind?: number;\n\tpresetFileName?: string;\n}\n\nexport interface LevelsAdjustment extends PresetInfo {\n\ttype: 'levels';\n\trgb?: LevelsAdjustmentChannel;\n\tred?: LevelsAdjustmentChannel;\n\tgreen?: LevelsAdjustmentChannel;\n\tblue?: LevelsAdjustmentChannel;\n}\n\nexport type CurvesAdjustmentChannel = { input: number; output: number; }[];\n\nexport interface CurvesAdjustment extends PresetInfo {\n\ttype: 'curves';\n\trgb?: CurvesAdjustmentChannel;\n\tred?: CurvesAdjustmentChannel;\n\tgreen?: CurvesAdjustmentChannel;\n\tblue?: CurvesAdjustmentChannel;\n}\n\nexport interface ExposureAdjustment extends PresetInfo {\n\ttype: 'exposure';\n\texposure?: number;\n\toffset?: number;\n\tgamma?: number;\n}\n\nexport interface VibranceAdjustment {\n\ttype: 'vibrance';\n\tvibrance?: number;\n\tsaturation?: number;\n}\n\nexport interface HueSaturationAdjustmentChannel {\n\ta: number;\n\tb: number;\n\tc: number;\n\td: number;\n\thue: number;\n\tsaturation: number;\n\tlightness: number;\n}\n\nexport interface HueSaturationAdjustment extends PresetInfo {\n\ttype: 'hue/saturation';\n\tmaster?: HueSaturationAdjustmentChannel;\n\treds?: HueSaturationAdjustmentChannel;\n\tyellows?: HueSaturationAdjustmentChannel;\n\tgreens?: HueSaturationAdjustmentChannel;\n\tcyans?: HueSaturationAdjustmentChannel;\n\tblues?: HueSaturationAdjustmentChannel;\n\tmagentas?: HueSaturationAdjustmentChannel;\n}\n\nexport interface ColorBalanceValues {\n\tcyanRed: number;\n\tmagentaGreen: number;\n\tyellowBlue: number;\n}\n\nexport interface ColorBalanceAdjustment {\n\ttype: 'color balance';\n\tshadows?: ColorBalanceValues;\n\tmidtones?: ColorBalanceValues;\n\thighlights?: ColorBalanceValues;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface BlackAndWhiteAdjustment extends PresetInfo {\n\ttype: 'black & white';\n\treds?: number;\n\tyellows?: number;\n\tgreens?: number;\n\tcyans?: number;\n\tblues?: number;\n\tmagentas?: number;\n\tuseTint?: boolean;\n\ttintColor?: Color;\n}\n\nexport interface PhotoFilterAdjustment {\n\ttype: 'photo filter';\n\tcolor?: Color;\n\tdensity?: number;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface ChannelMixerChannel {\n\tred: number;\n\tgreen: number;\n\tblue: number;\n\tconstant: number;\n}\n\nexport interface ChannelMixerAdjustment extends PresetInfo {\n\ttype: 'channel mixer';\n\tmonochrome?: boolean;\n\tred?: ChannelMixerChannel;\n\tgreen?: ChannelMixerChannel;\n\tblue?: ChannelMixerChannel;\n\tgray?: ChannelMixerChannel;\n}\n\nexport interface ColorLookupAdjustment {\n\ttype: 'color lookup';\n\tlookupType?: '3dlut' | 'abstractProfile' | 'deviceLinkProfile';\n\tname?: string;\n\tdither?: boolean;\n\tprofile?: Uint8Array;\n\tlutFormat?: 'look' | 'cube' | '3dl';\n\tdataOrder?: 'rgb' | 'bgr';\n\ttableOrder?: 'rgb' | 'bgr';\n\tlut3DFileData?: Uint8Array;\n\tlut3DFileName?: string;\n}\n\nexport interface InvertAdjustment {\n\ttype: 'invert';\n}\n\nexport interface PosterizeAdjustment {\n\ttype: 'posterize';\n\tlevels?: number;\n}\n\nexport interface ThresholdAdjustment {\n\ttype: 'threshold';\n\tlevel?: number;\n}\n\nexport interface ColorStop {\n\tcolor: Color;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface OpacityStop {\n\topacity: number;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface GradientMapAdjustment {\n\ttype: 'gradient map';\n\tname?: string;\n\tgradientType: 'solid' | 'noise';\n\tdither?: boolean;\n\treverse?: boolean;\n\t// solid\n\tsmoothness?: number;\n\tcolorStops?: ColorStop[];\n\topacityStops?: OpacityStop[];\n\t// noise\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin?: number[];\n\tmax?: number[];\n}\n\nexport interface SelectiveColorAdjustment {\n\ttype: 'selective color';\n\tmode?: 'relative' | 'absolute';\n\treds?: CMYK;\n\tyellows?: CMYK;\n\tgreens?: CMYK;\n\tcyans?: CMYK;\n\tblues?: CMYK;\n\tmagentas?: CMYK;\n\twhites?: CMYK;\n\tneutrals?: CMYK;\n\tblacks?: CMYK;\n}\n\nexport interface LinkedFile {\n\tid: string;\n\tname: string;\n\ttype?: string;\n\tcreator?: string;\n\tdata?: Uint8Array;\n\ttime?: Date; // for external files\n\tdescriptor?: {\n\t\tcompInfo: { compID: number; originalCompID: number; };\n\t};\n\tchildDocumentID?: string;\n\tassetModTime?: number;\n\tassetLockedState?: number;\n}\n\nexport type PlacedLayerType = 'unknown' | 'vector' | 'raster' | 'image stack';\n\nexport interface PlacedLayer {\n\tid: string; // id of linked image file (psd.linkedFiles)\n\tplaced?: string; // ???\n\ttype: PlacedLayerType;\n\t// pageNumber: number; // ???\n\t// totalPages: number; // ???\n\t// frameStep?: { numerator: number; denominator: number; };\n\t// duration?: { numerator: number; denominator: number; };\n\t// frameCount?: number; // ???\n\ttransform: number[]; // x, y of 4 corners of the transform\n\twidth?: number;\n\theight?: number;\n\tresolution?: UnitsValue;\n\t// antialias ?\n\twarp?: Warp;\n\tcrop?: number;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\nexport type AdjustmentLayer = BrightnessAdjustment | LevelsAdjustment | CurvesAdjustment |\n\tExposureAdjustment | VibranceAdjustment | HueSaturationAdjustment | ColorBalanceAdjustment |\n\tBlackAndWhiteAdjustment | PhotoFilterAdjustment | ChannelMixerAdjustment | ColorLookupAdjustment |\n\tInvertAdjustment | PosterizeAdjustment | ThresholdAdjustment | GradientMapAdjustment |\n\tSelectiveColorAdjustment;\n\nexport type LayerColor = 'none' | 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'violet' | 'gray';\n\nexport interface KeyDescriptorItem {\n\tkeyShapeInvalidated?: boolean;\n\tkeyOriginType?: number;\n\tkeyOriginResolution?: number;\n\tkeyOriginRRectRadii?: {\n\t\ttopRight: UnitsValue;\n\t\ttopLeft: UnitsValue;\n\t\tbottomLeft: UnitsValue;\n\t\tbottomRight: UnitsValue;\n\t};\n\tkeyOriginShapeBoundingBox?: {\n\t\ttop: UnitsValue;\n\t\tleft: UnitsValue;\n\t\tbottom: UnitsValue;\n\t\tright: UnitsValue;\n\t};\n}\n\nexport interface LayerAdditionalInfo {\n\tname?: string; // layer name\n\tnameSource?: string; // layer name source\n\tid?: number; // layer id\n\tversion?: number; // layer version\n\tmask?: LayerMaskData;\n\tblendClippendElements?: boolean;\n\tblendInteriorElements?: boolean;\n\tknockout?: boolean;\n\tprotected?: {\n\t\ttransparency?: boolean;\n\t\tcomposite?: boolean;\n\t\tposition?: boolean;\n\t\tartboards?: boolean;\n\t};\n\tlayerColor?: LayerColor;\n\treferencePoint?: {\n\t\tx: number;\n\t\ty: number;\n\t};\n\tsectionDivider?: {\n\t\ttype: SectionDividerType;\n\t\tkey?: string;\n\t\tsubType?: number;\n\t};\n\tfilterMask?: {\n\t\tcolorSpace: Color;\n\t\topacity: number;\n\t};\n\teffects?: LayerEffectsInfo;\n\ttext?: LayerTextData;\n\tpatterns?: PatternInfo[]; // not supported yet\n\tvectorFill?: VectorContent;\n\tvectorStroke?: {\n\t\tstrokeEnabled?: boolean;\n\t\tfillEnabled?: boolean;\n\t\tlineWidth?: UnitsValue;\n\t\tlineDashOffset?: UnitsValue;\n\t\tmiterLimit?: number;\n\t\tlineCapType?: LineCapType;\n\t\tlineJoinType?: LineJoinType;\n\t\tlineAlignment?: LineAlignment;\n\t\tscaleLock?: boolean;\n\t\tstrokeAdjust?: boolean;\n\t\tlineDashSet?: UnitsValue[];\n\t\tblendMode?: BlendMode;\n\t\topacity?: number;\n\t\tcontent?: VectorContent;\n\t\tresolution?: number;\n\t};\n\tvectorMask?: {\n\t\tinvert?: boolean;\n\t\tnotLink?: boolean;\n\t\tdisable?: boolean;\n\t\tfillStartsWithAllPixels?: boolean;\n\t\tclipboard?: {\n\t\t\ttop: number;\n\t\t\tleft: number;\n\t\t\tbottom: number;\n\t\t\tright: number;\n\t\t\tresolution: number;\n\t\t};\n\t\tpaths: BezierPath[];\n\t};\n\tusingAlignedRendering?: boolean;\n\ttimestamp?: number; // seconds\n\tpathList?: {\n\t}[];\n\tadjustment?: AdjustmentLayer;\n\tplacedLayer?: PlacedLayer;\n\tvectorOrigination?: {\n\t\tkeyDescriptorList: KeyDescriptorItem[];\n\t};\n\tcompositorUsed?: {\n\t\tdescription: string;\n\t\treason: string;\n\t\tengine: string;\n\t\tenableCompCore: string;\n\t\tenableCompCoreGPU: string;\n\t\tcompCoreSupport: string;\n\t\tcompCoreGPUSupport: string;\n\t};\n\tartboard?: {\n\t\trect: { top: number; left: number; bottom: number; right: number; };\n\t\tguideIndices?: any[];\n\t\tpresetName?: string;\n\t\tcolor?: Color;\n\t\tbackgroundType?: number;\n\t};\n\n\t// Base64 encoded raw EngineData, currently just kept in original state to support\n\t// loading and modifying PSD file without breaking text layers.\n\tengineData?: string;\n}\n\nexport interface ImageResources {\n\tlayerState?: number;\n\tlayersGroup?: number[];\n\tlayerSelectionIds?: number[];\n\tlayerGroupsEnabledId?: number[];\n\tversionInfo?: {\n\t\thasRealMergedData: boolean;\n\t\twriterName: string;\n\t\treaderName: string;\n\t\tfileVersion: number;\n\t};\n\talphaIdentifiers?: number[];\n\talphaChannelNames?: string[];\n\tglobalAngle?: number;\n\tglobalAltitude?: number;\n\tpixelAspectRatio?: {\n\t\taspect: number;\n\t};\n\turlsList?: any[];\n\tgridAndGuidesInformation?: {\n\t\tgrid?: {\n\t\t\thorizontal: number;\n\t\t\tvertical: number;\n\t\t},\n\t\tguides?: {\n\t\t\tlocation: number;\n\t\t\tdirection: 'horizontal' | 'vertical';\n\t\t}[];\n\t};\n\tresolutionInfo?: {\n\t\thorizontalResolution: number;\n\t\thorizontalResolutionUnit: 'PPI' | 'PPCM';\n\t\twidthUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t\tverticalResolution: number;\n\t\tverticalResolutionUnit: 'PPI' | 'PPCM';\n\t\theightUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t};\n\tthumbnail?: HTMLCanvasElement;\n\tthumbnailRaw?: { width: number; height: number; data: Uint8Array; };\n\tcaptionDigest?: string;\n\txmpMetadata?: string;\n\tprintScale?: {\n\t\tstyle?: 'centered' | 'size to fit' | 'user defined';\n\t\tx?: number;\n\t\ty?: number;\n\t\tscale?: number;\n\t};\n\tprintInformation?: {\n\t\tprinterManagesColors?: boolean;\n\t\tprinterName?: string;\n\t\tprinterProfile?: string;\n\t\tprintSixteenBit?: boolean;\n\t\trenderingIntent?: RenderingIntent;\n\t\thardProof?: boolean;\n\t\tblackPointCompensation?: boolean;\n\t\tproofSetup?: {\n\t\t\tbuiltin: string;\n\t\t} | {\n\t\t\tprofile: string;\n\t\t\trenderingIntent?: RenderingIntent;\n\t\t\tblackPointCompensation?: boolean;\n\t\t\tpaperWhite?: boolean;\n\t\t};\n\t};\n\tbackgroundColor?: Color;\n\tidsSeedNumber?: number;\n\tprintFlags?: {\n\t\tlabels?: boolean;\n\t\tcropMarks?: boolean;\n\t\tcolorBars?: boolean;\n\t\tregistrationMarks?: boolean;\n\t\tnegative?: boolean;\n\t\tflip?: boolean;\n\t\tinterpolate?: boolean;\n\t\tcaption?: boolean;\n\t\tprintFlags?: boolean;\n\t};\n\ticcUntaggedProfile?: boolean;\n}\n\nexport interface GlobalLayerMaskInfo {\n\toverlayColorSpace: number;\n\tcolorSpace1: number;\n\tcolorSpace2: number;\n\tcolorSpace3: number;\n\tcolorSpace4: number;\n\topacity: number;\n\tkind: number;\n}\n\nexport interface Layer extends LayerAdditionalInfo {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\ttransparencyProtected?: boolean;\n\thidden?: boolean;\n\tclipping?: boolean;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\tchildren?: Layer[];\n\t/** applies only for layer groups */\n\topened?: boolean;\n}\n\nexport interface Psd extends LayerAdditionalInfo {\n\twidth: number;\n\theight: number;\n\tchannels?: number;\n\tbitsPerChannel?: number;\n\tcolorMode?: ColorMode;\n\tchildren?: Layer[];\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\timageResources?: ImageResources;\n\tlinkedFiles?: LinkedFile[]; // used in smart objects\n\tartboards?: {\n\t\tcount: number;\n\t\tautoExpandOffset?: { horizontal: number; vertical: number; };\n\t\torigin?: { horizontal: number; vertical: number; };\n\t\tautoExpandEnabled?: boolean;\n\t\tautoNestEnabled?: boolean;\n\t\tautoPositionEnabled?: boolean;\n\t\tshrinkwrapOnSaveEnabled?: boolean;\n\t\tdocDefaultNewArtboardBackgroundColor?: Color;\n\t\tdocDefaultNewArtboardBackgroundType?: number;\n\t};\n\tglobalLayerMaskInfo?: GlobalLayerMaskInfo;\n}\n\nexport interface ReadOptions {\n\t/** Does not load layer image data. */\n\tskipLayerImageData?: boolean;\n\t/** Does not load composite image data. */\n\tskipCompositeImageData?: boolean;\n\t/** Does not load thumbnail. */\n\tskipThumbnail?: boolean;\n\t/** Does not load linked files (used in smart-objects). */\n\tskipLinkedFilesData?: boolean;\n\t/** Throws exception if features are missing. */\n\tthrowForMissingFeatures?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Keep image data as byte array instead of canvas.\n\t * (image data will appear in `imageData` fields instead of `canvas` fields)\n\t * This avoids issues with canvas premultiplied alpha corrupting image data. */\n\tuseImageData?: boolean;\n\t/** Loads thumbnail raw data instead of decoding it's content into canvas.\n\t * `thumnailRaw` field is used instead. */\n\tuseRawThumbnail?: boolean;\n\t/** Usend only for development */\n\tlogDevFeatures?: boolean;\n}\n\nexport interface WriteOptions {\n\t/** Automatically generates thumbnail from composite image. */\n\tgenerateThumbnail?: boolean;\n\t/** Trims transparent pixels from layer image data. */\n\ttrimImageData?: boolean;\n\t/** Invalidates text layer data, forcing Photoshop to redraw them on load.\n\t *  Use this option if you're updating loaded text layer properties. */\n\tinvalidateTextLayers?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Forces bottom layer to be treated as layer and not background even when it's missing any transparency\n\t * \t(by default Photoshop treats bottom layer as background it it doesn't have any transparent pixels) */\n\tnoBackground?: boolean;\n}\n"],"names":[],"version":3,"file":"dist.8b6858d8.js.map","sourceRoot":"/__parcel_source_root/"}